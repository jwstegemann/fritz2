[{"name":"ASC","description":"dev.fritz2.headless.foundation.SortDirection.ASC","location":"headless/dev.fritz2.headless.foundation/-sort-direction/-a-s-c/index.html","searchKeys":["ASC","ASC","dev.fritz2.headless.foundation.SortDirection.ASC"]},{"name":"DESC","description":"dev.fritz2.headless.foundation.SortDirection.DESC","location":"headless/dev.fritz2.headless.foundation/-sort-direction/-d-e-s-c/index.html","searchKeys":["DESC","DESC","dev.fritz2.headless.foundation.SortDirection.DESC"]},{"name":"DoNotSet","description":"dev.fritz2.headless.foundation.InitialFocus.DoNotSet","location":"headless/dev.fritz2.headless.foundation/-initial-focus/-do-not-set/index.html","searchKeys":["DoNotSet","DoNotSet","dev.fritz2.headless.foundation.InitialFocus.DoNotSet"]},{"name":"Error","description":"dev.fritz2.headless.foundation.FocusResult.Error","location":"headless/dev.fritz2.headless.foundation/-focus-result/-error/index.html","searchKeys":["Error","Error","dev.fritz2.headless.foundation.FocusResult.Error"]},{"name":"Error","description":"dev.fritz2.headless.validation.Severity.Error","location":"headless/dev.fritz2.headless.validation/-severity/-error/index.html","searchKeys":["Error","Error","dev.fritz2.headless.validation.Severity.Error"]},{"name":"Exact","description":"dev.fritz2.headless.foundation.PopUpPanelSize.Exact","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/-exact/index.html","searchKeys":["Exact","Exact","dev.fritz2.headless.foundation.PopUpPanelSize.Exact"]},{"name":"Horizontal","description":"dev.fritz2.headless.foundation.Orientation.Horizontal","location":"headless/dev.fritz2.headless.foundation/-orientation/-horizontal/index.html","searchKeys":["Horizontal","Horizontal","dev.fritz2.headless.foundation.Orientation.Horizontal"]},{"name":"Info","description":"dev.fritz2.headless.validation.Severity.Info","location":"headless/dev.fritz2.headless.validation/-severity/-info/index.html","searchKeys":["Info","Info","dev.fritz2.headless.validation.Severity.Info"]},{"name":"InsistToSet","description":"dev.fritz2.headless.foundation.InitialFocus.InsistToSet","location":"headless/dev.fritz2.headless.foundation/-initial-focus/-insist-to-set/index.html","searchKeys":["InsistToSet","InsistToSet","dev.fritz2.headless.foundation.InitialFocus.InsistToSet"]},{"name":"Max","description":"dev.fritz2.headless.foundation.PopUpPanelSize.Max","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/-max/index.html","searchKeys":["Max","Max","dev.fritz2.headless.foundation.PopUpPanelSize.Max"]},{"name":"Min","description":"dev.fritz2.headless.foundation.PopUpPanelSize.Min","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/-min/index.html","searchKeys":["Min","Min","dev.fritz2.headless.foundation.PopUpPanelSize.Min"]},{"name":"NONE","description":"dev.fritz2.headless.foundation.SortDirection.NONE","location":"headless/dev.fritz2.headless.foundation/-sort-direction/-n-o-n-e/index.html","searchKeys":["NONE","NONE","dev.fritz2.headless.foundation.SortDirection.NONE"]},{"name":"Next","description":"dev.fritz2.headless.foundation.Direction.Next","location":"headless/dev.fritz2.headless.foundation/-direction/-next/index.html","searchKeys":["Next","Next","dev.fritz2.headless.foundation.Direction.Next"]},{"name":"NoDirection","description":"dev.fritz2.headless.foundation.FocusResult.NoDirection","location":"headless/dev.fritz2.headless.foundation/-focus-result/-no-direction/index.html","searchKeys":["NoDirection","NoDirection","dev.fritz2.headless.foundation.FocusResult.NoDirection"]},{"name":"None","description":"dev.fritz2.headless.foundation.PopUpPanelSize.None","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/-none/index.html","searchKeys":["None","None","dev.fritz2.headless.foundation.PopUpPanelSize.None"]},{"name":"Overflow","description":"dev.fritz2.headless.foundation.FocusResult.Overflow","location":"headless/dev.fritz2.headless.foundation/-focus-result/-overflow/index.html","searchKeys":["Overflow","Overflow","dev.fritz2.headless.foundation.FocusResult.Overflow"]},{"name":"Previous","description":"dev.fritz2.headless.foundation.Direction.Previous","location":"headless/dev.fritz2.headless.foundation/-direction/-previous/index.html","searchKeys":["Previous","Previous","dev.fritz2.headless.foundation.Direction.Previous"]},{"name":"Success","description":"dev.fritz2.headless.foundation.FocusResult.Success","location":"headless/dev.fritz2.headless.foundation/-focus-result/-success/index.html","searchKeys":["Success","Success","dev.fritz2.headless.foundation.FocusResult.Success"]},{"name":"Success","description":"dev.fritz2.headless.validation.Severity.Success","location":"headless/dev.fritz2.headless.validation/-severity/-success/index.html","searchKeys":["Success","Success","dev.fritz2.headless.validation.Severity.Success"]},{"name":"TryToSet","description":"dev.fritz2.headless.foundation.InitialFocus.TryToSet","location":"headless/dev.fritz2.headless.foundation/-initial-focus/-try-to-set/index.html","searchKeys":["TryToSet","TryToSet","dev.fritz2.headless.foundation.InitialFocus.TryToSet"]},{"name":"Underflow","description":"dev.fritz2.headless.foundation.FocusResult.Underflow","location":"headless/dev.fritz2.headless.foundation/-focus-result/-underflow/index.html","searchKeys":["Underflow","Underflow","dev.fritz2.headless.foundation.FocusResult.Underflow"]},{"name":"Vertical","description":"dev.fritz2.headless.foundation.Orientation.Vertical","location":"headless/dev.fritz2.headless.foundation/-orientation/-vertical/index.html","searchKeys":["Vertical","Vertical","dev.fritz2.headless.foundation.Orientation.Vertical"]},{"name":"Warning","description":"dev.fritz2.headless.validation.Severity.Warning","location":"headless/dev.fritz2.headless.validation/-severity/-warning/index.html","searchKeys":["Warning","Warning","dev.fritz2.headless.validation.Severity.Warning"]},{"name":"abstract class AbstractSwitch<C : HTMLElement>(tag: Tag<C>, explicitId: String?, componentName: String) : Tag<C> ","description":"dev.fritz2.headless.components.AbstractSwitch","location":"headless/dev.fritz2.headless.components/-abstract-switch/index.html","searchKeys":["AbstractSwitch","abstract class AbstractSwitch<C : HTMLElement>(tag: Tag<C>, explicitId: String?, componentName: String) : Tag<C> ","dev.fritz2.headless.components.AbstractSwitch"]},{"name":"abstract class Hook<C, R, P> : Property<Effect<C, R, P>> ","description":"dev.fritz2.headless.foundation.Hook","location":"headless/dev.fritz2.headless.foundation/-hook/index.html","searchKeys":["Hook","abstract class Hook<C, R, P> : Property<Effect<C, R, P>> ","dev.fritz2.headless.foundation.Hook"]},{"name":"abstract class OpenClose : WithJob","description":"dev.fritz2.headless.foundation.OpenClose","location":"headless/dev.fritz2.headless.foundation/-open-close/index.html","searchKeys":["OpenClose","abstract class OpenClose : WithJob","dev.fritz2.headless.foundation.OpenClose"]},{"name":"abstract class PopUpPanel<C : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit, opened: Flow<Boolean>, fullWidth: Boolean = true, reference: Tag<HTMLElement>?, ariaHasPopup: String, tag: Tag<C> = tagFactory(renderContext, classes, id, scope) {}, config: ComputePositionConfig = obj {}) : Tag<C> , ComputePositionConfig","description":"dev.fritz2.headless.foundation.PopUpPanel","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/index.html","searchKeys":["PopUpPanel","abstract class PopUpPanel<C : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit, opened: Flow<Boolean>, fullWidth: Boolean = true, reference: Tag<HTMLElement>?, ariaHasPopup: String, tag: Tag<C> = tagFactory(renderContext, classes, id, scope) {}, config: ComputePositionConfig = obj {}) : Tag<C> , ComputePositionConfig","dev.fritz2.headless.foundation.PopUpPanel"]},{"name":"abstract class Property<T>","description":"dev.fritz2.headless.foundation.Property","location":"headless/dev.fritz2.headless.foundation/-property/index.html","searchKeys":["Property","abstract class Property<T>","dev.fritz2.headless.foundation.Property"]},{"name":"abstract class TagHook<R : Tag<*>, P, I> : Hook<RenderContext, R, TagPayload<P>> ","description":"dev.fritz2.headless.foundation.TagHook","location":"headless/dev.fritz2.headless.foundation/-tag-hook/index.html","searchKeys":["TagHook","abstract class TagHook<R : Tag<*>, P, I> : Hook<RenderContext, R, TagPayload<P>> ","dev.fritz2.headless.foundation.TagHook"]},{"name":"abstract class Textfield<C : HTMLElement>(tag: Tag<C>, id: String?, componentName: String) : Tag<C> ","description":"dev.fritz2.headless.components.Textfield","location":"headless/dev.fritz2.headless.components/-textfield/index.html","searchKeys":["Textfield","abstract class Textfield<C : HTMLElement>(tag: Tag<C>, id: String?, componentName: String) : Tag<C> ","dev.fritz2.headless.components.Textfield"]},{"name":"abstract fun apply(args: SizeOptionsArgs): Promise<Unit>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptions.apply","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-size-options/apply.html","searchKeys":["apply","abstract fun apply(args: SizeOptionsArgs): Promise<Unit>","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptions.apply"]},{"name":"abstract fun convertOffsetParentRelativeRectToViewportRelativeRect(rect: Rect, offsetParent: Any, strategy: Strategy): Promise<Rect>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.convertOffsetParentRelativeRectToViewportRelativeRect","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/convert-offset-parent-relative-rect-to-viewport-relative-rect.html","searchKeys":["convertOffsetParentRelativeRectToViewportRelativeRect","abstract fun convertOffsetParentRelativeRectToViewportRelativeRect(rect: Rect, offsetParent: Any, strategy: Strategy): Promise<Rect>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.convertOffsetParentRelativeRectToViewportRelativeRect"]},{"name":"abstract fun getClientRects(element: Any): Promise<Array<ClientRectObject>>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getClientRects","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-client-rects.html","searchKeys":["getClientRects","abstract fun getClientRects(element: Any): Promise<Array<ClientRectObject>>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getClientRects"]},{"name":"abstract fun getClippingRect(element: Any, boundary: Boundary, rootBoundary: RootBoundary, strategy: Strategy): Promise<Rect>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getClippingRect","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-clipping-rect.html","searchKeys":["getClippingRect","abstract fun getClippingRect(element: Any, boundary: Boundary, rootBoundary: RootBoundary, strategy: Strategy): Promise<Rect>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getClippingRect"]},{"name":"abstract fun getDimensions(element: Any): Promise<Dimensions>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getDimensions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-dimensions.html","searchKeys":["getDimensions","abstract fun getDimensions(element: Any): Promise<Dimensions>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getDimensions"]},{"name":"abstract fun getDocumentElement(element: Any): Promise<Any>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getDocumentElement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-document-element.html","searchKeys":["getDocumentElement","abstract fun getDocumentElement(element: Any): Promise<Any>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getDocumentElement"]},{"name":"abstract fun getElementRects(reference: ReferenceElement, floating: FloatingElement, strategy: Strategy): Promise<ElementRects>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getElementRects","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-element-rects.html","searchKeys":["getElementRects","abstract fun getElementRects(reference: ReferenceElement, floating: FloatingElement, strategy: Strategy): Promise<ElementRects>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getElementRects"]},{"name":"abstract fun getOffsetParent(element: Any): Promise<Any>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getOffsetParent","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-offset-parent.html","searchKeys":["getOffsetParent","abstract fun getOffsetParent(element: Any): Promise<Any>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getOffsetParent"]},{"name":"abstract fun getScale(element: Any): Promise<Coords>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getScale","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/get-scale.html","searchKeys":["getScale","abstract fun getScale(element: Any): Promise<Coords>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.getScale"]},{"name":"abstract fun isElement(value: Any): Promise<Boolean>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.isElement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/is-element.html","searchKeys":["isElement","abstract fun isElement(value: Any): Promise<Boolean>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.isElement"]},{"name":"abstract fun isRTL(element: Any): Promise<Boolean>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform.isRTL","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/is-r-t-l.html","searchKeys":["isRTL","abstract fun isRTL(element: Any): Promise<Boolean>","dev.fritz2.headless.foundation.utils.floatingui.core.Platform.isRTL"]},{"name":"abstract fun render()","description":"dev.fritz2.headless.components.AbstractSwitch.render","location":"headless/dev.fritz2.headless.components/-abstract-switch/render.html","searchKeys":["render","abstract fun render()","dev.fritz2.headless.components.AbstractSwitch.render"]},{"name":"abstract var arrow: Arrow","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.arrow","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/arrow.html","searchKeys":["arrow","abstract var arrow: Arrow","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.arrow"]},{"name":"abstract var autoPlacement: AutoPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.autoPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/auto-placement.html","searchKeys":["autoPlacement","abstract var autoPlacement: AutoPlacement","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.autoPlacement"]},{"name":"abstract var centerOffset: Number","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Arrow.centerOffset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-arrow/center-offset.html","searchKeys":["centerOffset","abstract var centerOffset: Number","dev.fritz2.headless.foundation.utils.floatingui.core.Arrow.centerOffset"]},{"name":"abstract var elements: Elements","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.elements","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/elements.html","searchKeys":["elements","abstract var elements: Elements","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.elements"]},{"name":"abstract var escaped: Boolean","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Hide.escaped","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-hide/escaped.html","searchKeys":["escaped","abstract var escaped: Boolean","dev.fritz2.headless.foundation.utils.floatingui.core.Hide.escaped"]},{"name":"abstract var escapedOffsets: SideObject?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Hide.escapedOffsets","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-hide/escaped-offsets.html","searchKeys":["escapedOffsets","abstract var escapedOffsets: SideObject?","dev.fritz2.headless.foundation.utils.floatingui.core.Hide.escapedOffsets"]},{"name":"abstract var flip: Flip","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.flip","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/flip.html","searchKeys":["flip","abstract var flip: Flip","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.flip"]},{"name":"abstract var floating: FloatingElement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Elements.floating","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-elements/floating.html","searchKeys":["floating","abstract var floating: FloatingElement","dev.fritz2.headless.foundation.utils.floatingui.core.Elements.floating"]},{"name":"abstract var height: Number","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Dimensions.height","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-dimensions/height.html","searchKeys":["height","abstract var height: Number","dev.fritz2.headless.foundation.utils.floatingui.core.Dimensions.height"]},{"name":"abstract var hide: Hide?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.hide","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/hide.html","searchKeys":["hide","abstract var hide: Hide?","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.hide"]},{"name":"abstract var index: Number","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Flip.index","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-flip/--index--.html","searchKeys":["index","abstract var index: Number","dev.fritz2.headless.foundation.utils.floatingui.core.Flip.index"]},{"name":"abstract var index: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.AutoPlacement.index","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-auto-placement/--index--.html","searchKeys":["index","abstract var index: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.AutoPlacement.index"]},{"name":"abstract var initialPlacement: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.initialPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/initial-placement.html","searchKeys":["initialPlacement","abstract var initialPlacement: Placement","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.initialPlacement"]},{"name":"abstract var middlewareData: MiddlewareData","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.middlewareData","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/middleware-data.html","searchKeys":["middlewareData","abstract var middlewareData: MiddlewareData","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.middlewareData"]},{"name":"abstract var offset: Coords?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.offset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/offset.html","searchKeys":["offset","abstract var offset: Coords?","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.offset"]},{"name":"abstract var overflow: Array<Overflows>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.AutoPlacement.overflow","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-auto-placement/overflow.html","searchKeys":["overflow","abstract var overflow: Array<Overflows>","dev.fritz2.headless.foundation.utils.floatingui.core.AutoPlacement.overflow"]},{"name":"abstract var overflows: Array<Number>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Overflows.overflows","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-overflows/overflows.html","searchKeys":["overflows","abstract var overflows: Array<Number>","dev.fritz2.headless.foundation.utils.floatingui.core.Overflows.overflows"]},{"name":"abstract var overflows: Array<Overflows>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Flip.overflows","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-flip/overflows.html","searchKeys":["overflows","abstract var overflows: Array<Overflows>","dev.fritz2.headless.foundation.utils.floatingui.core.Flip.overflows"]},{"name":"abstract var placement: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.placement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/placement.html","searchKeys":["placement","abstract var placement: Placement","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.placement"]},{"name":"abstract var placement: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Overflows.placement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-overflows/placement.html","searchKeys":["placement","abstract var placement: Placement","dev.fritz2.headless.foundation.utils.floatingui.core.Overflows.placement"]},{"name":"abstract var platform: Platform","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.platform","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/platform.html","searchKeys":["platform","abstract var platform: Platform","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.platform"]},{"name":"abstract var rects: ElementRects","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.rects","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/rects.html","searchKeys":["rects","abstract var rects: ElementRects","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.rects"]},{"name":"abstract var reference: ReferenceElement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Elements.reference","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-elements/reference.html","searchKeys":["reference","abstract var reference: ReferenceElement","dev.fritz2.headless.foundation.utils.floatingui.core.Elements.reference"]},{"name":"abstract var referenceHidden: Boolean","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Hide.referenceHidden","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-hide/reference-hidden.html","searchKeys":["referenceHidden","abstract var referenceHidden: Boolean","dev.fritz2.headless.foundation.utils.floatingui.core.Hide.referenceHidden"]},{"name":"abstract var referenceHiddenOffsets: SideObject?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Hide.referenceHiddenOffsets","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-hide/reference-hidden-offsets.html","searchKeys":["referenceHiddenOffsets","abstract var referenceHiddenOffsets: SideObject?","dev.fritz2.headless.foundation.utils.floatingui.core.Hide.referenceHiddenOffsets"]},{"name":"abstract var shift: Coords?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.shift","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/shift.html","searchKeys":["shift","abstract var shift: Coords?","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData.shift"]},{"name":"abstract var strategy: Strategy","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.strategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/strategy.html","searchKeys":["strategy","abstract var strategy: Strategy","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState.strategy"]},{"name":"abstract var width: Number","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Dimensions.width","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-dimensions/width.html","searchKeys":["width","abstract var width: Number","dev.fritz2.headless.foundation.utils.floatingui.core.Dimensions.width"]},{"name":"always","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.always","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/always/index.html","searchKeys":["always","always","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.always"]},{"name":"auto","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.auto","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-behavior/auto/index.html","searchKeys":["auto","auto","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.auto"]},{"name":"center","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.center","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/center/index.html","searchKeys":["center","center","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.center"]},{"name":"class AriaReferenceHook<C : Tag<*>>(name: String) : Hook<C, Unit, Unit> ","description":"dev.fritz2.headless.foundation.AriaReferenceHook","location":"headless/dev.fritz2.headless.foundation/-aria-reference-hook/index.html","searchKeys":["AriaReferenceHook","class AriaReferenceHook<C : Tag<*>>(name: String) : Hook<C, Unit, Unit> ","dev.fritz2.headless.foundation.AriaReferenceHook"]},{"name":"class AttributeHook<C : Tag<*>, T>(valueSetter: C.(T) -> Unit, flowOfValueSetter: C.(Flow<T>) -> Unit) : Hook<C, Unit, Unit> ","description":"dev.fritz2.headless.foundation.AttributeHook","location":"headless/dev.fritz2.headless.foundation/-attribute-hook/index.html","searchKeys":["AttributeHook","class AttributeHook<C : Tag<*>, T>(valueSetter: C.(T) -> Unit, flowOfValueSetter: C.(Flow<T>) -> Unit) : Hook<C, Unit, Unit> ","dev.fritz2.headless.foundation.AttributeHook"]},{"name":"class BooleanAttributeHook<C : Tag<*>>(valueSetter: C.(Boolean, String) -> Unit, flowOfValueSetter: C.(Flow<Boolean>, String) -> Unit, trueValue: String = \"\") : Hook<C, Unit, Unit> ","description":"dev.fritz2.headless.foundation.BooleanAttributeHook","location":"headless/dev.fritz2.headless.foundation/-boolean-attribute-hook/index.html","searchKeys":["BooleanAttributeHook","class BooleanAttributeHook<C : Tag<*>>(valueSetter: C.(Boolean, String) -> Unit, flowOfValueSetter: C.(Flow<Boolean>, String) -> Unit, trueValue: String = \"\") : Hook<C, Unit, Unit> ","dev.fritz2.headless.foundation.BooleanAttributeHook"]},{"name":"class CheckboxGroup<C : HTMLElement, T>(tag: Tag<C>, explicitId: String?) : Tag<C> ","description":"dev.fritz2.headless.components.CheckboxGroup","location":"headless/dev.fritz2.headless.components/-checkbox-group/index.html","searchKeys":["CheckboxGroup","class CheckboxGroup<C : HTMLElement, T>(tag: Tag<C>, explicitId: String?) : Tag<C> ","dev.fritz2.headless.components.CheckboxGroup"]},{"name":"class CollectionDataProperty<T> : Property<CollectionData<T>> ","description":"dev.fritz2.headless.components.CollectionDataProperty","location":"headless/dev.fritz2.headless.components/-collection-data-property/index.html","searchKeys":["CollectionDataProperty","class CollectionDataProperty<T> : Property<CollectionData<T>> ","dev.fritz2.headless.components.CollectionDataProperty"]},{"name":"class Combobox<E : HTMLElement, T>(tag: Tag<E>, id: String?) : OpenClose, Tag<E> ","description":"dev.fritz2.headless.components.Combobox","location":"headless/dev.fritz2.headless.components/-combobox/index.html","searchKeys":["Combobox","class Combobox<E : HTMLElement, T>(tag: Tag<E>, id: String?) : OpenClose, Tag<E> ","dev.fritz2.headless.components.Combobox"]},{"name":"class DataCollection<T, C : HTMLElement>(tag: Tag<C>) : Tag<C> ","description":"dev.fritz2.headless.components.DataCollection","location":"headless/dev.fritz2.headless.components/-data-collection/index.html","searchKeys":["DataCollection","class DataCollection<T, C : HTMLElement>(tag: Tag<C>) : Tag<C> ","dev.fritz2.headless.components.DataCollection"]},{"name":"class DatabindingProperty<T> : Property<DatabindingProperty.DataBinding<T>> ","description":"dev.fritz2.headless.foundation.DatabindingProperty","location":"headless/dev.fritz2.headless.foundation/-databinding-property/index.html","searchKeys":["DatabindingProperty","class DatabindingProperty<T> : Property<DatabindingProperty.DataBinding<T>> ","dev.fritz2.headless.foundation.DatabindingProperty"]},{"name":"class Disclosure<C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","description":"dev.fritz2.headless.components.Disclosure","location":"headless/dev.fritz2.headless.components/-disclosure/index.html","searchKeys":["Disclosure","class Disclosure<C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","dev.fritz2.headless.components.Disclosure"]},{"name":"class InputField<C : HTMLElement>(tag: Tag<C>, id: String?) : Textfield<C> ","description":"dev.fritz2.headless.components.InputField","location":"headless/dev.fritz2.headless.components/-input-field/index.html","searchKeys":["InputField","class InputField<C : HTMLElement>(tag: Tag<C>, id: String?) : Textfield<C> ","dev.fritz2.headless.components.InputField"]},{"name":"class Listbox<T, C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","description":"dev.fritz2.headless.components.Listbox","location":"headless/dev.fritz2.headless.components/-listbox/index.html","searchKeys":["Listbox","class Listbox<T, C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","dev.fritz2.headless.components.Listbox"]},{"name":"class Menu<C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","description":"dev.fritz2.headless.components.Menu","location":"headless/dev.fritz2.headless.components/-menu/index.html","searchKeys":["Menu","class Menu<C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","dev.fritz2.headless.components.Menu"]},{"name":"class Modal(id: String?) : OpenClose","description":"dev.fritz2.headless.components.Modal","location":"headless/dev.fritz2.headless.components/-modal/index.html","searchKeys":["Modal","class Modal(id: String?) : OpenClose","dev.fritz2.headless.components.Modal"]},{"name":"class PopOver<C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","description":"dev.fritz2.headless.components.PopOver","location":"headless/dev.fritz2.headless.components/-pop-over/index.html","searchKeys":["PopOver","class PopOver<C : HTMLElement>(tag: Tag<C>, id: String?) : OpenClose, Tag<C> ","dev.fritz2.headless.components.PopOver"]},{"name":"class RadioGroup<C : HTMLElement, T>(tag: Tag<C>, explicitId: String?) : Tag<C> ","description":"dev.fritz2.headless.components.RadioGroup","location":"headless/dev.fritz2.headless.components/-radio-group/index.html","searchKeys":["RadioGroup","class RadioGroup<C : HTMLElement, T>(tag: Tag<C>, explicitId: String?) : Tag<C> ","dev.fritz2.headless.components.RadioGroup"]},{"name":"class ScrollIntoViewProperty : Property<ScrollIntoViewOptions> ","description":"dev.fritz2.headless.components.ScrollIntoViewProperty","location":"headless/dev.fritz2.headless.components/-scroll-into-view-property/index.html","searchKeys":["ScrollIntoViewProperty","class ScrollIntoViewProperty : Property<ScrollIntoViewOptions> ","dev.fritz2.headless.components.ScrollIntoViewProperty"]},{"name":"class SelectionMode<T>(val job: Job) : WithJob","description":"dev.fritz2.headless.components.SelectionMode","location":"headless/dev.fritz2.headless.components/-selection-mode/index.html","searchKeys":["SelectionMode","class SelectionMode<T>(val job: Job) : WithJob","dev.fritz2.headless.components.SelectionMode"]},{"name":"class Switch<C : HTMLElement>(tag: Tag<C>, explicitId: String?) : AbstractSwitch<C> ","description":"dev.fritz2.headless.components.Switch","location":"headless/dev.fritz2.headless.components/-switch/index.html","searchKeys":["Switch","class Switch<C : HTMLElement>(tag: Tag<C>, explicitId: String?) : AbstractSwitch<C> ","dev.fritz2.headless.components.Switch"]},{"name":"class SwitchWithLabel<C : HTMLElement>(tag: Tag<C>, id: String?) : AbstractSwitch<C> ","description":"dev.fritz2.headless.components.SwitchWithLabel","location":"headless/dev.fritz2.headless.components/-switch-with-label/index.html","searchKeys":["SwitchWithLabel","class SwitchWithLabel<C : HTMLElement>(tag: Tag<C>, id: String?) : AbstractSwitch<C> ","dev.fritz2.headless.components.SwitchWithLabel"]},{"name":"class TabGroup<C : HTMLElement>(tag: Tag<C>, id: String?) : Tag<C> ","description":"dev.fritz2.headless.components.TabGroup","location":"headless/dev.fritz2.headless.components/-tab-group/index.html","searchKeys":["TabGroup","class TabGroup<C : HTMLElement>(tag: Tag<C>, id: String?) : Tag<C> ","dev.fritz2.headless.components.TabGroup"]},{"name":"class TextArea<C : HTMLElement>(tag: Tag<C>, id: String?) : Textfield<C> ","description":"dev.fritz2.headless.components.TextArea","location":"headless/dev.fritz2.headless.components/-text-area/index.html","searchKeys":["TextArea","class TextArea<C : HTMLElement>(tag: Tag<C>, id: String?) : Textfield<C> ","dev.fritz2.headless.components.TextArea"]},{"name":"class Toast<E : HTMLElement> : Tag<E> ","description":"dev.fritz2.headless.components.Toast","location":"headless/dev.fritz2.headless.components/-toast/index.html","searchKeys":["Toast","class Toast<E : HTMLElement> : Tag<E> ","dev.fritz2.headless.components.Toast"]},{"name":"class Tooltip<C : HTMLElement>(renderContext: Tag<HTMLElement>, reference: Tag<HTMLElement>, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<C> ","description":"dev.fritz2.headless.components.Tooltip","location":"headless/dev.fritz2.headless.components/-tooltip/index.html","searchKeys":["Tooltip","class Tooltip<C : HTMLElement>(renderContext: Tag<HTMLElement>, reference: Tag<HTMLElement>, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<C> ","dev.fritz2.headless.components.Tooltip"]},{"name":"class ValidationMessages<CL : HTMLElement>(val msgs: Flow<List<ComponentValidationMessage>>, tag: Tag<CL>) : Tag<CL> ","description":"dev.fritz2.headless.foundation.ValidationMessages","location":"headless/dev.fritz2.headless.foundation/-validation-messages/index.html","searchKeys":["ValidationMessages","class ValidationMessages<CL : HTMLElement>(val msgs: Flow<List<ComponentValidationMessage>>, tag: Tag<CL>) : Tag<CL> ","dev.fritz2.headless.foundation.ValidationMessages"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.CheckboxGroup.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-checkbox-group/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.CheckboxGroup.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.DataCollection.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-data-collection/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.DataCollection.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.InputField.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-input-field/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.InputField.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.Listbox.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-listbox/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.Listbox.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.RadioGroup.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-radio-group/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.RadioGroup.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.Switch.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-switch/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.Switch.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.SwitchWithLabel.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-switch-with-label/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.SwitchWithLabel.Companion.COMPONENT_NAME"]},{"name":"const val COMPONENT_NAME: String","description":"dev.fritz2.headless.components.TextArea.Companion.COMPONENT_NAME","location":"headless/dev.fritz2.headless.components/-text-area/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","dev.fritz2.headless.components.TextArea.Companion.COMPONENT_NAME"]},{"name":"const val ID_SUFFIX: String","description":"dev.fritz2.headless.foundation.ValidationMessages.Companion.ID_SUFFIX","location":"headless/dev.fritz2.headless.foundation/-validation-messages/-companion/-i-d_-s-u-f-f-i-x.html","searchKeys":["ID_SUFFIX","const val ID_SUFFIX: String","dev.fritz2.headless.foundation.ValidationMessages.Companion.ID_SUFFIX"]},{"name":"const val INITIAL_FOCUS_DATA_ATTR: String","description":"dev.fritz2.headless.foundation.INITIAL_FOCUS_DATA_ATTR","location":"headless/dev.fritz2.headless.foundation/-i-n-i-t-i-a-l_-f-o-c-u-s_-d-a-t-a_-a-t-t-r.html","searchKeys":["INITIAL_FOCUS_DATA_ATTR","const val INITIAL_FOCUS_DATA_ATTR: String","dev.fritz2.headless.foundation.INITIAL_FOCUS_DATA_ATTR"]},{"name":"const val POPUP_RELATIVE: String","description":"dev.fritz2.headless.foundation.PopUpPanel.Companion.POPUP_RELATIVE","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/-companion/-p-o-p-u-p_-r-e-l-a-t-i-v-e.html","searchKeys":["POPUP_RELATIVE","const val POPUP_RELATIVE: String","dev.fritz2.headless.foundation.PopUpPanel.Companion.POPUP_RELATIVE"]},{"name":"const val activedescendant: String","description":"dev.fritz2.headless.foundation.Aria.activedescendant","location":"headless/dev.fritz2.headless.foundation/-aria/activedescendant.html","searchKeys":["activedescendant","const val activedescendant: String","dev.fritz2.headless.foundation.Aria.activedescendant"]},{"name":"const val alert: String","description":"dev.fritz2.headless.foundation.Aria.Role.alert","location":"headless/dev.fritz2.headless.foundation/-aria/-role/alert.html","searchKeys":["alert","const val alert: String","dev.fritz2.headless.foundation.Aria.Role.alert"]},{"name":"const val alertdialog: String","description":"dev.fritz2.headless.foundation.Aria.Role.alertdialog","location":"headless/dev.fritz2.headless.foundation/-aria/-role/alertdialog.html","searchKeys":["alertdialog","const val alertdialog: String","dev.fritz2.headless.foundation.Aria.Role.alertdialog"]},{"name":"const val application: String","description":"dev.fritz2.headless.foundation.Aria.Role.application","location":"headless/dev.fritz2.headless.foundation/-aria/-role/application.html","searchKeys":["application","const val application: String","dev.fritz2.headless.foundation.Aria.Role.application"]},{"name":"const val article: String","description":"dev.fritz2.headless.foundation.Aria.Role.article","location":"headless/dev.fritz2.headless.foundation/-aria/-role/article.html","searchKeys":["article","const val article: String","dev.fritz2.headless.foundation.Aria.Role.article"]},{"name":"const val atomic: String","description":"dev.fritz2.headless.foundation.Aria.atomic","location":"headless/dev.fritz2.headless.foundation/-aria/atomic.html","searchKeys":["atomic","const val atomic: String","dev.fritz2.headless.foundation.Aria.atomic"]},{"name":"const val autocomplete: String","description":"dev.fritz2.headless.foundation.Aria.autocomplete","location":"headless/dev.fritz2.headless.foundation/-aria/autocomplete.html","searchKeys":["autocomplete","const val autocomplete: String","dev.fritz2.headless.foundation.Aria.autocomplete"]},{"name":"const val banner: String","description":"dev.fritz2.headless.foundation.Aria.Role.banner","location":"headless/dev.fritz2.headless.foundation/-aria/-role/banner.html","searchKeys":["banner","const val banner: String","dev.fritz2.headless.foundation.Aria.Role.banner"]},{"name":"const val busy: String","description":"dev.fritz2.headless.foundation.Aria.busy","location":"headless/dev.fritz2.headless.foundation/-aria/busy.html","searchKeys":["busy","const val busy: String","dev.fritz2.headless.foundation.Aria.busy"]},{"name":"const val button: String","description":"dev.fritz2.headless.foundation.Aria.Role.button","location":"headless/dev.fritz2.headless.foundation/-aria/-role/button.html","searchKeys":["button","const val button: String","dev.fritz2.headless.foundation.Aria.Role.button"]},{"name":"const val cell: String","description":"dev.fritz2.headless.foundation.Aria.Role.cell","location":"headless/dev.fritz2.headless.foundation/-aria/-role/cell.html","searchKeys":["cell","const val cell: String","dev.fritz2.headless.foundation.Aria.Role.cell"]},{"name":"const val checkbox: String","description":"dev.fritz2.headless.foundation.Aria.Role.checkbox","location":"headless/dev.fritz2.headless.foundation/-aria/-role/checkbox.html","searchKeys":["checkbox","const val checkbox: String","dev.fritz2.headless.foundation.Aria.Role.checkbox"]},{"name":"const val checked: String","description":"dev.fritz2.headless.foundation.Aria.checked","location":"headless/dev.fritz2.headless.foundation/-aria/checked.html","searchKeys":["checked","const val checked: String","dev.fritz2.headless.foundation.Aria.checked"]},{"name":"const val colcount: String","description":"dev.fritz2.headless.foundation.Aria.colcount","location":"headless/dev.fritz2.headless.foundation/-aria/colcount.html","searchKeys":["colcount","const val colcount: String","dev.fritz2.headless.foundation.Aria.colcount"]},{"name":"const val colindex: String","description":"dev.fritz2.headless.foundation.Aria.colindex","location":"headless/dev.fritz2.headless.foundation/-aria/colindex.html","searchKeys":["colindex","const val colindex: String","dev.fritz2.headless.foundation.Aria.colindex"]},{"name":"const val colspan: String","description":"dev.fritz2.headless.foundation.Aria.colspan","location":"headless/dev.fritz2.headless.foundation/-aria/colspan.html","searchKeys":["colspan","const val colspan: String","dev.fritz2.headless.foundation.Aria.colspan"]},{"name":"const val columnheader: String","description":"dev.fritz2.headless.foundation.Aria.Role.columnheader","location":"headless/dev.fritz2.headless.foundation/-aria/-role/columnheader.html","searchKeys":["columnheader","const val columnheader: String","dev.fritz2.headless.foundation.Aria.Role.columnheader"]},{"name":"const val combobox: String","description":"dev.fritz2.headless.foundation.Aria.Role.combobox","location":"headless/dev.fritz2.headless.foundation/-aria/-role/combobox.html","searchKeys":["combobox","const val combobox: String","dev.fritz2.headless.foundation.Aria.Role.combobox"]},{"name":"const val complementary: String","description":"dev.fritz2.headless.foundation.Aria.Role.complementary","location":"headless/dev.fritz2.headless.foundation/-aria/-role/complementary.html","searchKeys":["complementary","const val complementary: String","dev.fritz2.headless.foundation.Aria.Role.complementary"]},{"name":"const val contentinfo: String","description":"dev.fritz2.headless.foundation.Aria.Role.contentinfo","location":"headless/dev.fritz2.headless.foundation/-aria/-role/contentinfo.html","searchKeys":["contentinfo","const val contentinfo: String","dev.fritz2.headless.foundation.Aria.Role.contentinfo"]},{"name":"const val controls: String","description":"dev.fritz2.headless.foundation.Aria.controls","location":"headless/dev.fritz2.headless.foundation/-aria/controls.html","searchKeys":["controls","const val controls: String","dev.fritz2.headless.foundation.Aria.controls"]},{"name":"const val current: String","description":"dev.fritz2.headless.foundation.Aria.current","location":"headless/dev.fritz2.headless.foundation/-aria/current.html","searchKeys":["current","const val current: String","dev.fritz2.headless.foundation.Aria.current"]},{"name":"const val definition: String","description":"dev.fritz2.headless.foundation.Aria.Role.definition","location":"headless/dev.fritz2.headless.foundation/-aria/-role/definition.html","searchKeys":["definition","const val definition: String","dev.fritz2.headless.foundation.Aria.Role.definition"]},{"name":"const val describedby: String","description":"dev.fritz2.headless.foundation.Aria.describedby","location":"headless/dev.fritz2.headless.foundation/-aria/describedby.html","searchKeys":["describedby","const val describedby: String","dev.fritz2.headless.foundation.Aria.describedby"]},{"name":"const val description: String","description":"dev.fritz2.headless.foundation.Aria.description","location":"headless/dev.fritz2.headless.foundation/-aria/description.html","searchKeys":["description","const val description: String","dev.fritz2.headless.foundation.Aria.description"]},{"name":"const val details: String","description":"dev.fritz2.headless.foundation.Aria.details","location":"headless/dev.fritz2.headless.foundation/-aria/details.html","searchKeys":["details","const val details: String","dev.fritz2.headless.foundation.Aria.details"]},{"name":"const val dialog: String","description":"dev.fritz2.headless.foundation.Aria.HasPopup.dialog","location":"headless/dev.fritz2.headless.foundation/-aria/-has-popup/dialog.html","searchKeys":["dialog","const val dialog: String","dev.fritz2.headless.foundation.Aria.HasPopup.dialog"]},{"name":"const val dialog: String","description":"dev.fritz2.headless.foundation.Aria.Role.dialog","location":"headless/dev.fritz2.headless.foundation/-aria/-role/dialog.html","searchKeys":["dialog","const val dialog: String","dev.fritz2.headless.foundation.Aria.Role.dialog"]},{"name":"const val directory: String","description":"dev.fritz2.headless.foundation.Aria.Role.directory","location":"headless/dev.fritz2.headless.foundation/-aria/-role/directory.html","searchKeys":["directory","const val directory: String","dev.fritz2.headless.foundation.Aria.Role.directory"]},{"name":"const val disabled: String","description":"dev.fritz2.headless.foundation.Aria.disabled","location":"headless/dev.fritz2.headless.foundation/-aria/disabled.html","searchKeys":["disabled","const val disabled: String","dev.fritz2.headless.foundation.Aria.disabled"]},{"name":"const val document: String","description":"dev.fritz2.headless.foundation.Aria.Role.document","location":"headless/dev.fritz2.headless.foundation/-aria/-role/document.html","searchKeys":["document","const val document: String","dev.fritz2.headless.foundation.Aria.Role.document"]},{"name":"const val dragged: String","description":"dev.fritz2.headless.foundation.Aria.dragged","location":"headless/dev.fritz2.headless.foundation/-aria/dragged.html","searchKeys":["dragged","const val dragged: String","dev.fritz2.headless.foundation.Aria.dragged"]},{"name":"const val dropeffect: String","description":"dev.fritz2.headless.foundation.Aria.dropeffect","location":"headless/dev.fritz2.headless.foundation/-aria/dropeffect.html","searchKeys":["dropeffect","const val dropeffect: String","dev.fritz2.headless.foundation.Aria.dropeffect"]},{"name":"const val errormessage: String","description":"dev.fritz2.headless.foundation.Aria.errormessage","location":"headless/dev.fritz2.headless.foundation/-aria/errormessage.html","searchKeys":["errormessage","const val errormessage: String","dev.fritz2.headless.foundation.Aria.errormessage"]},{"name":"const val expanded: String","description":"dev.fritz2.headless.foundation.Aria.expanded","location":"headless/dev.fritz2.headless.foundation/-aria/expanded.html","searchKeys":["expanded","const val expanded: String","dev.fritz2.headless.foundation.Aria.expanded"]},{"name":"const val feed: String","description":"dev.fritz2.headless.foundation.Aria.Role.feed","location":"headless/dev.fritz2.headless.foundation/-aria/-role/feed.html","searchKeys":["feed","const val feed: String","dev.fritz2.headless.foundation.Aria.Role.feed"]},{"name":"const val figure: String","description":"dev.fritz2.headless.foundation.Aria.Role.figure","location":"headless/dev.fritz2.headless.foundation/-aria/-role/figure.html","searchKeys":["figure","const val figure: String","dev.fritz2.headless.foundation.Aria.Role.figure"]},{"name":"const val flowto: String","description":"dev.fritz2.headless.foundation.Aria.flowto","location":"headless/dev.fritz2.headless.foundation/-aria/flowto.html","searchKeys":["flowto","const val flowto: String","dev.fritz2.headless.foundation.Aria.flowto"]},{"name":"const val form: String","description":"dev.fritz2.headless.foundation.Aria.Role.form","location":"headless/dev.fritz2.headless.foundation/-aria/-role/form.html","searchKeys":["form","const val form: String","dev.fritz2.headless.foundation.Aria.Role.form"]},{"name":"const val grabbed: String","description":"dev.fritz2.headless.foundation.Aria.grabbed","location":"headless/dev.fritz2.headless.foundation/-aria/grabbed.html","searchKeys":["grabbed","const val grabbed: String","dev.fritz2.headless.foundation.Aria.grabbed"]},{"name":"const val grid: String","description":"dev.fritz2.headless.foundation.Aria.HasPopup.grid","location":"headless/dev.fritz2.headless.foundation/-aria/-has-popup/grid.html","searchKeys":["grid","const val grid: String","dev.fritz2.headless.foundation.Aria.HasPopup.grid"]},{"name":"const val grid: String","description":"dev.fritz2.headless.foundation.Aria.Role.grid","location":"headless/dev.fritz2.headless.foundation/-aria/-role/grid.html","searchKeys":["grid","const val grid: String","dev.fritz2.headless.foundation.Aria.Role.grid"]},{"name":"const val gridcell: String","description":"dev.fritz2.headless.foundation.Aria.Role.gridcell","location":"headless/dev.fritz2.headless.foundation/-aria/-role/gridcell.html","searchKeys":["gridcell","const val gridcell: String","dev.fritz2.headless.foundation.Aria.Role.gridcell"]},{"name":"const val group: String","description":"dev.fritz2.headless.foundation.Aria.Role.group","location":"headless/dev.fritz2.headless.foundation/-aria/-role/group.html","searchKeys":["group","const val group: String","dev.fritz2.headless.foundation.Aria.Role.group"]},{"name":"const val haspopup: String","description":"dev.fritz2.headless.foundation.Aria.haspopup","location":"headless/dev.fritz2.headless.foundation/-aria/haspopup.html","searchKeys":["haspopup","const val haspopup: String","dev.fritz2.headless.foundation.Aria.haspopup"]},{"name":"const val heading: String","description":"dev.fritz2.headless.foundation.Aria.Role.heading","location":"headless/dev.fritz2.headless.foundation/-aria/-role/heading.html","searchKeys":["heading","const val heading: String","dev.fritz2.headless.foundation.Aria.Role.heading"]},{"name":"const val hidden: String","description":"dev.fritz2.headless.foundation.Aria.hidden","location":"headless/dev.fritz2.headless.foundation/-aria/hidden.html","searchKeys":["hidden","const val hidden: String","dev.fritz2.headless.foundation.Aria.hidden"]},{"name":"const val img: String","description":"dev.fritz2.headless.foundation.Aria.Role.img","location":"headless/dev.fritz2.headless.foundation/-aria/-role/img.html","searchKeys":["img","const val img: String","dev.fritz2.headless.foundation.Aria.Role.img"]},{"name":"const val invalid: String","description":"dev.fritz2.headless.foundation.Aria.invalid","location":"headless/dev.fritz2.headless.foundation/-aria/invalid.html","searchKeys":["invalid","const val invalid: String","dev.fritz2.headless.foundation.Aria.invalid"]},{"name":"const val keyshortcuts: String","description":"dev.fritz2.headless.foundation.Aria.keyshortcuts","location":"headless/dev.fritz2.headless.foundation/-aria/keyshortcuts.html","searchKeys":["keyshortcuts","const val keyshortcuts: String","dev.fritz2.headless.foundation.Aria.keyshortcuts"]},{"name":"const val label: String","description":"dev.fritz2.headless.foundation.Aria.label","location":"headless/dev.fritz2.headless.foundation/-aria/label.html","searchKeys":["label","const val label: String","dev.fritz2.headless.foundation.Aria.label"]},{"name":"const val labelledby: String","description":"dev.fritz2.headless.foundation.Aria.labelledby","location":"headless/dev.fritz2.headless.foundation/-aria/labelledby.html","searchKeys":["labelledby","const val labelledby: String","dev.fritz2.headless.foundation.Aria.labelledby"]},{"name":"const val level: String","description":"dev.fritz2.headless.foundation.Aria.level","location":"headless/dev.fritz2.headless.foundation/-aria/level.html","searchKeys":["level","const val level: String","dev.fritz2.headless.foundation.Aria.level"]},{"name":"const val link: String","description":"dev.fritz2.headless.foundation.Aria.Role.link","location":"headless/dev.fritz2.headless.foundation/-aria/-role/link.html","searchKeys":["link","const val link: String","dev.fritz2.headless.foundation.Aria.Role.link"]},{"name":"const val list: String","description":"dev.fritz2.headless.foundation.Aria.Role.list","location":"headless/dev.fritz2.headless.foundation/-aria/-role/list.html","searchKeys":["list","const val list: String","dev.fritz2.headless.foundation.Aria.Role.list"]},{"name":"const val listbox: String","description":"dev.fritz2.headless.foundation.Aria.HasPopup.listbox","location":"headless/dev.fritz2.headless.foundation/-aria/-has-popup/listbox.html","searchKeys":["listbox","const val listbox: String","dev.fritz2.headless.foundation.Aria.HasPopup.listbox"]},{"name":"const val listbox: String","description":"dev.fritz2.headless.foundation.Aria.Role.listbox","location":"headless/dev.fritz2.headless.foundation/-aria/-role/listbox.html","searchKeys":["listbox","const val listbox: String","dev.fritz2.headless.foundation.Aria.Role.listbox"]},{"name":"const val listitem: String","description":"dev.fritz2.headless.foundation.Aria.Role.listitem","location":"headless/dev.fritz2.headless.foundation/-aria/-role/listitem.html","searchKeys":["listitem","const val listitem: String","dev.fritz2.headless.foundation.Aria.Role.listitem"]},{"name":"const val live: String","description":"dev.fritz2.headless.foundation.Aria.live","location":"headless/dev.fritz2.headless.foundation/-aria/live.html","searchKeys":["live","const val live: String","dev.fritz2.headless.foundation.Aria.live"]},{"name":"const val log: String","description":"dev.fritz2.headless.foundation.Aria.Role.log","location":"headless/dev.fritz2.headless.foundation/-aria/-role/log.html","searchKeys":["log","const val log: String","dev.fritz2.headless.foundation.Aria.Role.log"]},{"name":"const val main: String","description":"dev.fritz2.headless.foundation.Aria.Role.main","location":"headless/dev.fritz2.headless.foundation/-aria/-role/main.html","searchKeys":["main","const val main: String","dev.fritz2.headless.foundation.Aria.Role.main"]},{"name":"const val marquee: String","description":"dev.fritz2.headless.foundation.Aria.Role.marquee","location":"headless/dev.fritz2.headless.foundation/-aria/-role/marquee.html","searchKeys":["marquee","const val marquee: String","dev.fritz2.headless.foundation.Aria.Role.marquee"]},{"name":"const val math: String","description":"dev.fritz2.headless.foundation.Aria.Role.math","location":"headless/dev.fritz2.headless.foundation/-aria/-role/math.html","searchKeys":["math","const val math: String","dev.fritz2.headless.foundation.Aria.Role.math"]},{"name":"const val menu: String","description":"dev.fritz2.headless.foundation.Aria.HasPopup.menu","location":"headless/dev.fritz2.headless.foundation/-aria/-has-popup/menu.html","searchKeys":["menu","const val menu: String","dev.fritz2.headless.foundation.Aria.HasPopup.menu"]},{"name":"const val menu: String","description":"dev.fritz2.headless.foundation.Aria.Role.menu","location":"headless/dev.fritz2.headless.foundation/-aria/-role/menu.html","searchKeys":["menu","const val menu: String","dev.fritz2.headless.foundation.Aria.Role.menu"]},{"name":"const val menubar: String","description":"dev.fritz2.headless.foundation.Aria.Role.menubar","location":"headless/dev.fritz2.headless.foundation/-aria/-role/menubar.html","searchKeys":["menubar","const val menubar: String","dev.fritz2.headless.foundation.Aria.Role.menubar"]},{"name":"const val menuitem: String","description":"dev.fritz2.headless.foundation.Aria.Role.menuitem","location":"headless/dev.fritz2.headless.foundation/-aria/-role/menuitem.html","searchKeys":["menuitem","const val menuitem: String","dev.fritz2.headless.foundation.Aria.Role.menuitem"]},{"name":"const val menuitemcheckbox: String","description":"dev.fritz2.headless.foundation.Aria.Role.menuitemcheckbox","location":"headless/dev.fritz2.headless.foundation/-aria/-role/menuitemcheckbox.html","searchKeys":["menuitemcheckbox","const val menuitemcheckbox: String","dev.fritz2.headless.foundation.Aria.Role.menuitemcheckbox"]},{"name":"const val menuitemradio: String","description":"dev.fritz2.headless.foundation.Aria.Role.menuitemradio","location":"headless/dev.fritz2.headless.foundation/-aria/-role/menuitemradio.html","searchKeys":["menuitemradio","const val menuitemradio: String","dev.fritz2.headless.foundation.Aria.Role.menuitemradio"]},{"name":"const val modal: String","description":"dev.fritz2.headless.foundation.Aria.modal","location":"headless/dev.fritz2.headless.foundation/-aria/modal.html","searchKeys":["modal","const val modal: String","dev.fritz2.headless.foundation.Aria.modal"]},{"name":"const val multiline: String","description":"dev.fritz2.headless.foundation.Aria.multiline","location":"headless/dev.fritz2.headless.foundation/-aria/multiline.html","searchKeys":["multiline","const val multiline: String","dev.fritz2.headless.foundation.Aria.multiline"]},{"name":"const val multiselectable: String","description":"dev.fritz2.headless.foundation.Aria.multiselectable","location":"headless/dev.fritz2.headless.foundation/-aria/multiselectable.html","searchKeys":["multiselectable","const val multiselectable: String","dev.fritz2.headless.foundation.Aria.multiselectable"]},{"name":"const val navigation: String","description":"dev.fritz2.headless.foundation.Aria.Role.navigation","location":"headless/dev.fritz2.headless.foundation/-aria/-role/navigation.html","searchKeys":["navigation","const val navigation: String","dev.fritz2.headless.foundation.Aria.Role.navigation"]},{"name":"const val none: String","description":"dev.fritz2.headless.foundation.Aria.Role.none","location":"headless/dev.fritz2.headless.foundation/-aria/-role/none.html","searchKeys":["none","const val none: String","dev.fritz2.headless.foundation.Aria.Role.none"]},{"name":"const val note: String","description":"dev.fritz2.headless.foundation.Aria.Role.note","location":"headless/dev.fritz2.headless.foundation/-aria/-role/note.html","searchKeys":["note","const val note: String","dev.fritz2.headless.foundation.Aria.Role.note"]},{"name":"const val option: String","description":"dev.fritz2.headless.foundation.Aria.Role.option","location":"headless/dev.fritz2.headless.foundation/-aria/-role/option.html","searchKeys":["option","const val option: String","dev.fritz2.headless.foundation.Aria.Role.option"]},{"name":"const val orientation: String","description":"dev.fritz2.headless.foundation.Aria.orientation","location":"headless/dev.fritz2.headless.foundation/-aria/orientation.html","searchKeys":["orientation","const val orientation: String","dev.fritz2.headless.foundation.Aria.orientation"]},{"name":"const val owns: String","description":"dev.fritz2.headless.foundation.Aria.owns","location":"headless/dev.fritz2.headless.foundation/-aria/owns.html","searchKeys":["owns","const val owns: String","dev.fritz2.headless.foundation.Aria.owns"]},{"name":"const val placeholder: String","description":"dev.fritz2.headless.foundation.Aria.placeholder","location":"headless/dev.fritz2.headless.foundation/-aria/placeholder.html","searchKeys":["placeholder","const val placeholder: String","dev.fritz2.headless.foundation.Aria.placeholder"]},{"name":"const val posinset: String","description":"dev.fritz2.headless.foundation.Aria.posinset","location":"headless/dev.fritz2.headless.foundation/-aria/posinset.html","searchKeys":["posinset","const val posinset: String","dev.fritz2.headless.foundation.Aria.posinset"]},{"name":"const val presentation: String","description":"dev.fritz2.headless.foundation.Aria.Role.presentation","location":"headless/dev.fritz2.headless.foundation/-aria/-role/presentation.html","searchKeys":["presentation","const val presentation: String","dev.fritz2.headless.foundation.Aria.Role.presentation"]},{"name":"const val pressed: String","description":"dev.fritz2.headless.foundation.Aria.pressed","location":"headless/dev.fritz2.headless.foundation/-aria/pressed.html","searchKeys":["pressed","const val pressed: String","dev.fritz2.headless.foundation.Aria.pressed"]},{"name":"const val progressbar: String","description":"dev.fritz2.headless.foundation.Aria.Role.progressbar","location":"headless/dev.fritz2.headless.foundation/-aria/-role/progressbar.html","searchKeys":["progressbar","const val progressbar: String","dev.fritz2.headless.foundation.Aria.Role.progressbar"]},{"name":"const val radio: String","description":"dev.fritz2.headless.foundation.Aria.Role.radio","location":"headless/dev.fritz2.headless.foundation/-aria/-role/radio.html","searchKeys":["radio","const val radio: String","dev.fritz2.headless.foundation.Aria.Role.radio"]},{"name":"const val radiogroup: String","description":"dev.fritz2.headless.foundation.Aria.Role.radiogroup","location":"headless/dev.fritz2.headless.foundation/-aria/-role/radiogroup.html","searchKeys":["radiogroup","const val radiogroup: String","dev.fritz2.headless.foundation.Aria.Role.radiogroup"]},{"name":"const val readonly: String","description":"dev.fritz2.headless.foundation.Aria.readonly","location":"headless/dev.fritz2.headless.foundation/-aria/readonly.html","searchKeys":["readonly","const val readonly: String","dev.fritz2.headless.foundation.Aria.readonly"]},{"name":"const val region: String","description":"dev.fritz2.headless.foundation.Aria.Role.region","location":"headless/dev.fritz2.headless.foundation/-aria/-role/region.html","searchKeys":["region","const val region: String","dev.fritz2.headless.foundation.Aria.Role.region"]},{"name":"const val relevant: String","description":"dev.fritz2.headless.foundation.Aria.relevant","location":"headless/dev.fritz2.headless.foundation/-aria/relevant.html","searchKeys":["relevant","const val relevant: String","dev.fritz2.headless.foundation.Aria.relevant"]},{"name":"const val required: String","description":"dev.fritz2.headless.foundation.Aria.required","location":"headless/dev.fritz2.headless.foundation/-aria/required.html","searchKeys":["required","const val required: String","dev.fritz2.headless.foundation.Aria.required"]},{"name":"const val roledescription: String","description":"dev.fritz2.headless.foundation.Aria.roledescription","location":"headless/dev.fritz2.headless.foundation/-aria/roledescription.html","searchKeys":["roledescription","const val roledescription: String","dev.fritz2.headless.foundation.Aria.roledescription"]},{"name":"const val row: String","description":"dev.fritz2.headless.foundation.Aria.Role.row","location":"headless/dev.fritz2.headless.foundation/-aria/-role/row.html","searchKeys":["row","const val row: String","dev.fritz2.headless.foundation.Aria.Role.row"]},{"name":"const val rowcount: String","description":"dev.fritz2.headless.foundation.Aria.rowcount","location":"headless/dev.fritz2.headless.foundation/-aria/rowcount.html","searchKeys":["rowcount","const val rowcount: String","dev.fritz2.headless.foundation.Aria.rowcount"]},{"name":"const val rowgroup: String","description":"dev.fritz2.headless.foundation.Aria.Role.rowgroup","location":"headless/dev.fritz2.headless.foundation/-aria/-role/rowgroup.html","searchKeys":["rowgroup","const val rowgroup: String","dev.fritz2.headless.foundation.Aria.Role.rowgroup"]},{"name":"const val rowheader: String","description":"dev.fritz2.headless.foundation.Aria.Role.rowheader","location":"headless/dev.fritz2.headless.foundation/-aria/-role/rowheader.html","searchKeys":["rowheader","const val rowheader: String","dev.fritz2.headless.foundation.Aria.Role.rowheader"]},{"name":"const val rowindex: String","description":"dev.fritz2.headless.foundation.Aria.rowindex","location":"headless/dev.fritz2.headless.foundation/-aria/rowindex.html","searchKeys":["rowindex","const val rowindex: String","dev.fritz2.headless.foundation.Aria.rowindex"]},{"name":"const val rowspan: String","description":"dev.fritz2.headless.foundation.Aria.rowspan","location":"headless/dev.fritz2.headless.foundation/-aria/rowspan.html","searchKeys":["rowspan","const val rowspan: String","dev.fritz2.headless.foundation.Aria.rowspan"]},{"name":"const val scrollbar: String","description":"dev.fritz2.headless.foundation.Aria.Role.scrollbar","location":"headless/dev.fritz2.headless.foundation/-aria/-role/scrollbar.html","searchKeys":["scrollbar","const val scrollbar: String","dev.fritz2.headless.foundation.Aria.Role.scrollbar"]},{"name":"const val search: String","description":"dev.fritz2.headless.foundation.Aria.Role.search","location":"headless/dev.fritz2.headless.foundation/-aria/-role/search.html","searchKeys":["search","const val search: String","dev.fritz2.headless.foundation.Aria.Role.search"]},{"name":"const val searchbox: String","description":"dev.fritz2.headless.foundation.Aria.Role.searchbox","location":"headless/dev.fritz2.headless.foundation/-aria/-role/searchbox.html","searchKeys":["searchbox","const val searchbox: String","dev.fritz2.headless.foundation.Aria.Role.searchbox"]},{"name":"const val selected: String","description":"dev.fritz2.headless.foundation.Aria.selected","location":"headless/dev.fritz2.headless.foundation/-aria/selected.html","searchKeys":["selected","const val selected: String","dev.fritz2.headless.foundation.Aria.selected"]},{"name":"const val separator: String","description":"dev.fritz2.headless.foundation.Aria.Role.separator","location":"headless/dev.fritz2.headless.foundation/-aria/-role/separator.html","searchKeys":["separator","const val separator: String","dev.fritz2.headless.foundation.Aria.Role.separator"]},{"name":"const val setsize: String","description":"dev.fritz2.headless.foundation.Aria.setsize","location":"headless/dev.fritz2.headless.foundation/-aria/setsize.html","searchKeys":["setsize","const val setsize: String","dev.fritz2.headless.foundation.Aria.setsize"]},{"name":"const val slider: String","description":"dev.fritz2.headless.foundation.Aria.Role.slider","location":"headless/dev.fritz2.headless.foundation/-aria/-role/slider.html","searchKeys":["slider","const val slider: String","dev.fritz2.headless.foundation.Aria.Role.slider"]},{"name":"const val sort: String","description":"dev.fritz2.headless.foundation.Aria.sort","location":"headless/dev.fritz2.headless.foundation/-aria/sort.html","searchKeys":["sort","const val sort: String","dev.fritz2.headless.foundation.Aria.sort"]},{"name":"const val spinbutton: String","description":"dev.fritz2.headless.foundation.Aria.Role.spinbutton","location":"headless/dev.fritz2.headless.foundation/-aria/-role/spinbutton.html","searchKeys":["spinbutton","const val spinbutton: String","dev.fritz2.headless.foundation.Aria.Role.spinbutton"]},{"name":"const val status: String","description":"dev.fritz2.headless.foundation.Aria.Role.status","location":"headless/dev.fritz2.headless.foundation/-aria/-role/status.html","searchKeys":["status","const val status: String","dev.fritz2.headless.foundation.Aria.Role.status"]},{"name":"const val switch: String","description":"dev.fritz2.headless.foundation.Aria.Role.switch","location":"headless/dev.fritz2.headless.foundation/-aria/-role/switch.html","searchKeys":["switch","const val switch: String","dev.fritz2.headless.foundation.Aria.Role.switch"]},{"name":"const val tab: String","description":"dev.fritz2.headless.foundation.Aria.Role.tab","location":"headless/dev.fritz2.headless.foundation/-aria/-role/tab.html","searchKeys":["tab","const val tab: String","dev.fritz2.headless.foundation.Aria.Role.tab"]},{"name":"const val table: String","description":"dev.fritz2.headless.foundation.Aria.Role.table","location":"headless/dev.fritz2.headless.foundation/-aria/-role/table.html","searchKeys":["table","const val table: String","dev.fritz2.headless.foundation.Aria.Role.table"]},{"name":"const val tablist: String","description":"dev.fritz2.headless.foundation.Aria.Role.tablist","location":"headless/dev.fritz2.headless.foundation/-aria/-role/tablist.html","searchKeys":["tablist","const val tablist: String","dev.fritz2.headless.foundation.Aria.Role.tablist"]},{"name":"const val tabpanel: String","description":"dev.fritz2.headless.foundation.Aria.Role.tabpanel","location":"headless/dev.fritz2.headless.foundation/-aria/-role/tabpanel.html","searchKeys":["tabpanel","const val tabpanel: String","dev.fritz2.headless.foundation.Aria.Role.tabpanel"]},{"name":"const val term: String","description":"dev.fritz2.headless.foundation.Aria.Role.term","location":"headless/dev.fritz2.headless.foundation/-aria/-role/term.html","searchKeys":["term","const val term: String","dev.fritz2.headless.foundation.Aria.Role.term"]},{"name":"const val textbox: String","description":"dev.fritz2.headless.foundation.Aria.Role.textbox","location":"headless/dev.fritz2.headless.foundation/-aria/-role/textbox.html","searchKeys":["textbox","const val textbox: String","dev.fritz2.headless.foundation.Aria.Role.textbox"]},{"name":"const val timer: String","description":"dev.fritz2.headless.foundation.Aria.Role.timer","location":"headless/dev.fritz2.headless.foundation/-aria/-role/timer.html","searchKeys":["timer","const val timer: String","dev.fritz2.headless.foundation.Aria.Role.timer"]},{"name":"const val toolbar: String","description":"dev.fritz2.headless.foundation.Aria.Role.toolbar","location":"headless/dev.fritz2.headless.foundation/-aria/-role/toolbar.html","searchKeys":["toolbar","const val toolbar: String","dev.fritz2.headless.foundation.Aria.Role.toolbar"]},{"name":"const val tooltip: String","description":"dev.fritz2.headless.foundation.Aria.Role.tooltip","location":"headless/dev.fritz2.headless.foundation/-aria/-role/tooltip.html","searchKeys":["tooltip","const val tooltip: String","dev.fritz2.headless.foundation.Aria.Role.tooltip"]},{"name":"const val tree: String","description":"dev.fritz2.headless.foundation.Aria.HasPopup.tree","location":"headless/dev.fritz2.headless.foundation/-aria/-has-popup/tree.html","searchKeys":["tree","const val tree: String","dev.fritz2.headless.foundation.Aria.HasPopup.tree"]},{"name":"const val tree: String","description":"dev.fritz2.headless.foundation.Aria.Role.tree","location":"headless/dev.fritz2.headless.foundation/-aria/-role/tree.html","searchKeys":["tree","const val tree: String","dev.fritz2.headless.foundation.Aria.Role.tree"]},{"name":"const val treegrid: String","description":"dev.fritz2.headless.foundation.Aria.Role.treegrid","location":"headless/dev.fritz2.headless.foundation/-aria/-role/treegrid.html","searchKeys":["treegrid","const val treegrid: String","dev.fritz2.headless.foundation.Aria.Role.treegrid"]},{"name":"const val treeitem: String","description":"dev.fritz2.headless.foundation.Aria.Role.treeitem","location":"headless/dev.fritz2.headless.foundation/-aria/-role/treeitem.html","searchKeys":["treeitem","const val treeitem: String","dev.fritz2.headless.foundation.Aria.Role.treeitem"]},{"name":"const val valuemax: String","description":"dev.fritz2.headless.foundation.Aria.valuemax","location":"headless/dev.fritz2.headless.foundation/-aria/valuemax.html","searchKeys":["valuemax","const val valuemax: String","dev.fritz2.headless.foundation.Aria.valuemax"]},{"name":"const val valuemin: String","description":"dev.fritz2.headless.foundation.Aria.valuemin","location":"headless/dev.fritz2.headless.foundation/-aria/valuemin.html","searchKeys":["valuemin","const val valuemin: String","dev.fritz2.headless.foundation.Aria.valuemin"]},{"name":"const val valuenow: String","description":"dev.fritz2.headless.foundation.Aria.valuenow","location":"headless/dev.fritz2.headless.foundation/-aria/valuenow.html","searchKeys":["valuenow","const val valuenow: String","dev.fritz2.headless.foundation.Aria.valuenow"]},{"name":"const val valuetext: String","description":"dev.fritz2.headless.foundation.Aria.valuetext","location":"headless/dev.fritz2.headless.foundation/-aria/valuetext.html","searchKeys":["valuetext","const val valuetext: String","dev.fritz2.headless.foundation.Aria.valuetext"]},{"name":"constructor()","description":"dev.fritz2.headless.components.CollectionDataProperty.CollectionDataProperty","location":"headless/dev.fritz2.headless.components/-collection-data-property/-collection-data-property.html","searchKeys":["CollectionDataProperty","constructor()","dev.fritz2.headless.components.CollectionDataProperty.CollectionDataProperty"]},{"name":"constructor()","description":"dev.fritz2.headless.components.Combobox.DropdownOpeningHook.DropdownOpeningHook","location":"headless/dev.fritz2.headless.components/-combobox/-dropdown-opening-hook/-dropdown-opening-hook.html","searchKeys":["DropdownOpeningHook","constructor()","dev.fritz2.headless.components.Combobox.DropdownOpeningHook.DropdownOpeningHook"]},{"name":"constructor()","description":"dev.fritz2.headless.components.Combobox.FilterFunctionProperty.FilterFunctionProperty","location":"headless/dev.fritz2.headless.components/-combobox/-filter-function-property/-filter-function-property.html","searchKeys":["FilterFunctionProperty","constructor()","dev.fritz2.headless.components.Combobox.FilterFunctionProperty.FilterFunctionProperty"]},{"name":"constructor()","description":"dev.fritz2.headless.components.Combobox.ItemsHook.ItemsHook","location":"headless/dev.fritz2.headless.components/-combobox/-items-hook/-items-hook.html","searchKeys":["ItemsHook","constructor()","dev.fritz2.headless.components.Combobox.ItemsHook.ItemsHook"]},{"name":"constructor()","description":"dev.fritz2.headless.components.Combobox.SelectionStrategyProperty.SelectionStrategyProperty","location":"headless/dev.fritz2.headless.components/-combobox/-selection-strategy-property/-selection-strategy-property.html","searchKeys":["SelectionStrategyProperty","constructor()","dev.fritz2.headless.components.Combobox.SelectionStrategyProperty.SelectionStrategyProperty"]},{"name":"constructor()","description":"dev.fritz2.headless.components.ScrollIntoViewProperty.ScrollIntoViewProperty","location":"headless/dev.fritz2.headless.components/-scroll-into-view-property/-scroll-into-view-property.html","searchKeys":["ScrollIntoViewProperty","constructor()","dev.fritz2.headless.components.ScrollIntoViewProperty.ScrollIntoViewProperty"]},{"name":"constructor()","description":"dev.fritz2.headless.foundation.DatabindingProperty.DatabindingProperty","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-databinding-property.html","searchKeys":["DatabindingProperty","constructor()","dev.fritz2.headless.foundation.DatabindingProperty.DatabindingProperty"]},{"name":"constructor()","description":"dev.fritz2.headless.foundation.Hook.Hook","location":"headless/dev.fritz2.headless.foundation/-hook/-hook.html","searchKeys":["Hook","constructor()","dev.fritz2.headless.foundation.Hook.Hook"]},{"name":"constructor()","description":"dev.fritz2.headless.foundation.OpenClose.OpenClose","location":"headless/dev.fritz2.headless.foundation/-open-close/-open-close.html","searchKeys":["OpenClose","constructor()","dev.fritz2.headless.foundation.OpenClose.OpenClose"]},{"name":"constructor()","description":"dev.fritz2.headless.foundation.Property.Property","location":"headless/dev.fritz2.headless.foundation/-property/-property.html","searchKeys":["Property","constructor()","dev.fritz2.headless.foundation.Property.Property"]},{"name":"constructor()","description":"dev.fritz2.headless.foundation.TagHook.TagHook","location":"headless/dev.fritz2.headless.foundation/-tag-hook/-tag-hook.html","searchKeys":["TagHook","constructor()","dev.fritz2.headless.foundation.TagHook.TagHook"]},{"name":"constructor(comparatorAscending: Comparator<T>, comparatorDescending: Comparator<T>)","description":"dev.fritz2.headless.foundation.Sorting.Sorting","location":"headless/dev.fritz2.headless.foundation/-sorting/-sorting.html","searchKeys":["Sorting","constructor(comparatorAscending: Comparator<T>, comparatorDescending: Comparator<T>)","dev.fritz2.headless.foundation.Sorting.Sorting"]},{"name":"constructor(data: Flow<List<T>>, idProvider: IdProvider<T, *>?, id: String?)","description":"dev.fritz2.headless.components.CollectionData.CollectionData","location":"headless/dev.fritz2.headless.components/-collection-data/-collection-data.html","searchKeys":["CollectionData","constructor(data: Flow<List<T>>, idProvider: IdProvider<T, *>?, id: String?)","dev.fritz2.headless.components.CollectionData.CollectionData"]},{"name":"constructor(entry: T, tag: Tag<CM>, index: Int)","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.ListboxItem","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/-listbox-item.html","searchKeys":["ListboxItem","constructor(entry: T, tag: Tag<CM>, index: Int)","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.ListboxItem"]},{"name":"constructor(first: Boolean = false, previous: Boolean = false, next: Boolean = false, last: Boolean = false, wrapAround: Boolean = false, noScroll: Boolean = false)","description":"dev.fritz2.headless.foundation.FocusOptions.FocusOptions","location":"headless/dev.fritz2.headless.foundation/-focus-options/-focus-options.html","searchKeys":["FocusOptions","constructor(first: Boolean = false, previous: Boolean = false, next: Boolean = false, last: Boolean = false, wrapAround: Boolean = false, noScroll: Boolean = false)","dev.fritz2.headless.foundation.FocusOptions.FocusOptions"]},{"name":"constructor(id: String? = null, data: Flow<T>, handler: WithJob.(Flow<T>) -> Unit? = null, messages: Flow<List<ComponentValidationMessage>>? = null)","description":"dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.DataBinding","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-data-binding/-data-binding.html","searchKeys":["DataBinding","constructor(id: String? = null, data: Flow<T>, handler: WithJob.(Flow<T>) -> Unit? = null, messages: Flow<List<ComponentValidationMessage>>? = null)","dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.DataBinding"]},{"name":"constructor(id: String?)","description":"dev.fritz2.headless.components.Modal.Modal","location":"headless/dev.fritz2.headless.components/-modal/-modal.html","searchKeys":["Modal","constructor(id: String?)","dev.fritz2.headless.components.Modal.Modal"]},{"name":"constructor(index: Int, value: T)","description":"dev.fritz2.headless.components.Combobox.Item.Item","location":"headless/dev.fritz2.headless.components/-combobox/-item/-item.html","searchKeys":["Item","constructor(index: Int, value: T)","dev.fritz2.headless.components.Combobox.Item.Item"]},{"name":"constructor(item: T, collectionItemId: String?, tag: Tag<CI>)","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.DataCollectionItem","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-item/-data-collection-item.html","searchKeys":["DataCollectionItem","constructor(item: T, collectionItemId: String?, tag: Tag<CI>)","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.DataCollectionItem"]},{"name":"constructor(job: Job)","description":"dev.fritz2.headless.components.SelectionMode.SelectionMode","location":"headless/dev.fritz2.headless.components/-selection-mode/-selection-mode.html","searchKeys":["SelectionMode","constructor(job: Job)","dev.fritz2.headless.components.SelectionMode.SelectionMode"]},{"name":"constructor(msgs: Flow<List<ComponentValidationMessage>>, tag: Tag<CL>)","description":"dev.fritz2.headless.foundation.ValidationMessages.ValidationMessages","location":"headless/dev.fritz2.headless.foundation/-validation-messages/-validation-messages.html","searchKeys":["ValidationMessages","constructor(msgs: Flow<List<ComponentValidationMessage>>, tag: Tag<CL>)","dev.fritz2.headless.foundation.ValidationMessages.ValidationMessages"]},{"name":"constructor(name: String)","description":"dev.fritz2.headless.foundation.AriaReferenceHook.AriaReferenceHook","location":"headless/dev.fritz2.headless.foundation/-aria-reference-hook/-aria-reference-hook.html","searchKeys":["AriaReferenceHook","constructor(name: String)","dev.fritz2.headless.foundation.AriaReferenceHook.AriaReferenceHook"]},{"name":"constructor(path: String, severity: Severity, message: String, details: String? = null)","description":"dev.fritz2.headless.validation.ComponentValidationMessage.ComponentValidationMessage","location":"headless/dev.fritz2.headless.validation/-component-validation-message/-component-validation-message.html","searchKeys":["ComponentValidationMessage","constructor(path: String, severity: Severity, message: String, details: String? = null)","dev.fritz2.headless.validation.ComponentValidationMessage.ComponentValidationMessage"]},{"name":"constructor(query: String, items: List<Combobox.Item<T>>, truncated: Boolean)","description":"dev.fritz2.headless.components.Combobox.QueryResult.ItemList.ItemList","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-item-list/-item-list.html","searchKeys":["ItemList","constructor(query: String, items: List<Combobox.Item<T>>, truncated: Boolean)","dev.fritz2.headless.components.Combobox.QueryResult.ItemList.ItemList"]},{"name":"constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit, opened: Flow<Boolean>, fullWidth: Boolean = true, reference: Tag<HTMLElement>?, ariaHasPopup: String, tag: Tag<C> = tagFactory(renderContext, classes, id, scope) {}, config: ComputePositionConfig = obj {})","description":"dev.fritz2.headless.foundation.PopUpPanel.PopUpPanel","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/-pop-up-panel.html","searchKeys":["PopUpPanel","constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit, opened: Flow<Boolean>, fullWidth: Boolean = true, reference: Tag<HTMLElement>?, ariaHasPopup: String, tag: Tag<C> = tagFactory(renderContext, classes, id, scope) {}, config: ComputePositionConfig = obj {})","dev.fritz2.headless.foundation.PopUpPanel.PopUpPanel"]},{"name":"constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, scope: ScopeContext.() -> Unit)","description":"dev.fritz2.headless.components.PopOver.PopOverPanel.PopOverPanel","location":"headless/dev.fritz2.headless.components/-pop-over/-pop-over-panel/-pop-over-panel.html","searchKeys":["PopOverPanel","constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, scope: ScopeContext.() -> Unit)","dev.fritz2.headless.components.PopOver.PopOverPanel.PopOverPanel"]},{"name":"constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItems","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-items.html","searchKeys":["ListboxItems","constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit)","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItems"]},{"name":"constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit)","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItems","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-items.html","searchKeys":["MenuItems","constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit)","dev.fritz2.headless.components.Menu.MenuItems.MenuItems"]},{"name":"constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<EI>>, classes: String?, scope: ScopeContext.() -> Unit)","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItems","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/-combobox-items.html","searchKeys":["ComboboxItems","constructor(renderContext: RenderContext, tagFactory: TagFactory<Tag<EI>>, classes: String?, scope: ScopeContext.() -> Unit)","dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItems"]},{"name":"constructor(renderContext: Tag<HTMLElement>, reference: Tag<HTMLElement>, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit)","description":"dev.fritz2.headless.components.Tooltip.Tooltip","location":"headless/dev.fritz2.headless.components/-tooltip/-tooltip.html","searchKeys":["Tooltip","constructor(renderContext: Tag<HTMLElement>, reference: Tag<HTMLElement>, tagFactory: TagFactory<Tag<C>>, classes: String?, id: String?, scope: ScopeContext.() -> Unit)","dev.fritz2.headless.components.Tooltip.Tooltip"]},{"name":"constructor(sorting: Sorting<T>, direction: SortDirection)","description":"dev.fritz2.headless.foundation.SortingOrder.SortingOrder","location":"headless/dev.fritz2.headless.foundation/-sorting-order/-sorting-order.html","searchKeys":["SortingOrder","constructor(sorting: Sorting<T>, direction: SortDirection)","dev.fritz2.headless.foundation.SortingOrder.SortingOrder"]},{"name":"constructor(sorting: Sorting<T>, tag: Tag<CS>)","description":"dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.DataCollectionSortButton","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-sort-button/-data-collection-sort-button.html","searchKeys":["DataCollectionSortButton","constructor(sorting: Sorting<T>, tag: Tag<CS>)","dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.DataCollectionSortButton"]},{"name":"constructor(tag: Tag<C>)","description":"dev.fritz2.headless.components.DataCollection.DataCollection","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection.html","searchKeys":["DataCollection","constructor(tag: Tag<C>)","dev.fritz2.headless.components.DataCollection.DataCollection"]},{"name":"constructor(tag: Tag<C>, explicitId: String? = null)","description":"dev.fritz2.headless.components.Modal.ModalPanel.ModalPanel","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/-modal-panel.html","searchKeys":["ModalPanel","constructor(tag: Tag<C>, explicitId: String? = null)","dev.fritz2.headless.components.Modal.ModalPanel.ModalPanel"]},{"name":"constructor(tag: Tag<C>, explicitId: String?)","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroup","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group.html","searchKeys":["CheckboxGroup","constructor(tag: Tag<C>, explicitId: String?)","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroup"]},{"name":"constructor(tag: Tag<C>, explicitId: String?)","description":"dev.fritz2.headless.components.RadioGroup.RadioGroup","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group.html","searchKeys":["RadioGroup","constructor(tag: Tag<C>, explicitId: String?)","dev.fritz2.headless.components.RadioGroup.RadioGroup"]},{"name":"constructor(tag: Tag<C>, explicitId: String?)","description":"dev.fritz2.headless.components.Switch.Switch","location":"headless/dev.fritz2.headless.components/-switch/-switch.html","searchKeys":["Switch","constructor(tag: Tag<C>, explicitId: String?)","dev.fritz2.headless.components.Switch.Switch"]},{"name":"constructor(tag: Tag<C>, explicitId: String?, componentName: String)","description":"dev.fritz2.headless.components.AbstractSwitch.AbstractSwitch","location":"headless/dev.fritz2.headless.components/-abstract-switch/-abstract-switch.html","searchKeys":["AbstractSwitch","constructor(tag: Tag<C>, explicitId: String?, componentName: String)","dev.fritz2.headless.components.AbstractSwitch.AbstractSwitch"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.Disclosure.Disclosure","location":"headless/dev.fritz2.headless.components/-disclosure/-disclosure.html","searchKeys":["Disclosure","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.Disclosure.Disclosure"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.InputField.InputField","location":"headless/dev.fritz2.headless.components/-input-field/-input-field.html","searchKeys":["InputField","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.InputField.InputField"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.Listbox.Listbox","location":"headless/dev.fritz2.headless.components/-listbox/-listbox.html","searchKeys":["Listbox","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.Listbox.Listbox"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.Menu.Menu","location":"headless/dev.fritz2.headless.components/-menu/-menu.html","searchKeys":["Menu","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.Menu.Menu"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.PopOver.PopOver","location":"headless/dev.fritz2.headless.components/-pop-over/-pop-over.html","searchKeys":["PopOver","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.PopOver.PopOver"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.SwitchWithLabel.SwitchWithLabel","location":"headless/dev.fritz2.headless.components/-switch-with-label/-switch-with-label.html","searchKeys":["SwitchWithLabel","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.SwitchWithLabel.SwitchWithLabel"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.TabGroup.TabGroup","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-group.html","searchKeys":["TabGroup","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.TabGroup.TabGroup"]},{"name":"constructor(tag: Tag<C>, id: String?)","description":"dev.fritz2.headless.components.TextArea.TextArea","location":"headless/dev.fritz2.headless.components/-text-area/-text-area.html","searchKeys":["TextArea","constructor(tag: Tag<C>, id: String?)","dev.fritz2.headless.components.TextArea.TextArea"]},{"name":"constructor(tag: Tag<C>, id: String?, componentName: String)","description":"dev.fritz2.headless.components.Textfield.Textfield","location":"headless/dev.fritz2.headless.components/-textfield/-textfield.html","searchKeys":["Textfield","constructor(tag: Tag<C>, id: String?, componentName: String)","dev.fritz2.headless.components.Textfield.Textfield"]},{"name":"constructor(tag: Tag<CI>, collectionId: String?)","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItems","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-items.html","searchKeys":["DataCollectionItems","constructor(tag: Tag<CI>, collectionId: String?)","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItems"]},{"name":"constructor(tag: Tag<CL>)","description":"dev.fritz2.headless.components.TabGroup.TabList.TabList","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab-list.html","searchKeys":["TabList","constructor(tag: Tag<CL>)","dev.fritz2.headless.components.TabGroup.TabList.TabList"]},{"name":"constructor(tag: Tag<CM>, index: Int)","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.MenuItem","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/-menu-item.html","searchKeys":["MenuItem","constructor(tag: Tag<CM>, index: Int)","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.MenuItem"]},{"name":"constructor(tag: Tag<CO>, option: T, optionId: String)","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.CheckboxGroupOption","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/-checkbox-group-option.html","searchKeys":["CheckboxGroupOption","constructor(tag: Tag<CO>, option: T, optionId: String)","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.CheckboxGroupOption"]},{"name":"constructor(tag: Tag<CO>, option: T, optionId: String)","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.RadioGroupOption","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/-radio-group-option.html","searchKeys":["RadioGroupOption","constructor(tag: Tag<CO>, option: T, optionId: String)","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.RadioGroupOption"]},{"name":"constructor(tag: Tag<CP>)","description":"dev.fritz2.headless.components.Disclosure.DisclosurePanel.DisclosurePanel","location":"headless/dev.fritz2.headless.components/-disclosure/-disclosure-panel/-disclosure-panel.html","searchKeys":["DisclosurePanel","constructor(tag: Tag<CP>)","dev.fritz2.headless.components.Disclosure.DisclosurePanel.DisclosurePanel"]},{"name":"constructor(tag: Tag<CP>)","description":"dev.fritz2.headless.components.TabGroup.TabPanels.TabPanels","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-panels/-tab-panels.html","searchKeys":["TabPanels","constructor(tag: Tag<CP>)","dev.fritz2.headless.components.TabGroup.TabPanels.TabPanels"]},{"name":"constructor(tag: Tag<CT>, index: Int)","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab.Tab","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/-tab.html","searchKeys":["Tab","constructor(tag: Tag<CT>, index: Int)","dev.fritz2.headless.components.TabGroup.TabList.Tab.Tab"]},{"name":"constructor(tag: Tag<E>, id: String?)","description":"dev.fritz2.headless.components.Combobox.Combobox","location":"headless/dev.fritz2.headless.components/-combobox/-combobox.html","searchKeys":["Combobox","constructor(tag: Tag<E>, id: String?)","dev.fritz2.headless.components.Combobox.Combobox"]},{"name":"constructor(tag: Tag<EJ>, active: Flow<Boolean>, selected: Flow<Boolean>)","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem.ComboboxItem","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/-combobox-item/-combobox-item.html","searchKeys":["ComboboxItem","constructor(tag: Tag<EJ>, active: Flow<Boolean>, selected: Flow<Boolean>)","dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem.ComboboxItem"]},{"name":"constructor(tag: Tag<HTMLInputElement>)","description":"dev.fritz2.headless.components.Combobox.ComboboxInput.ComboboxInput","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-input/-combobox-input.html","searchKeys":["ComboboxInput","constructor(tag: Tag<HTMLInputElement>)","dev.fritz2.headless.components.Combobox.ComboboxInput.ComboboxInput"]},{"name":"constructor(valueSetter: C.(Boolean, String) -> Unit, flowOfValueSetter: C.(Flow<Boolean>, String) -> Unit, trueValue: String = \"\")","description":"dev.fritz2.headless.foundation.BooleanAttributeHook.BooleanAttributeHook","location":"headless/dev.fritz2.headless.foundation/-boolean-attribute-hook/-boolean-attribute-hook.html","searchKeys":["BooleanAttributeHook","constructor(valueSetter: C.(Boolean, String) -> Unit, flowOfValueSetter: C.(Flow<Boolean>, String) -> Unit, trueValue: String = \"\")","dev.fritz2.headless.foundation.BooleanAttributeHook.BooleanAttributeHook"]},{"name":"constructor(valueSetter: C.(T) -> Unit, flowOfValueSetter: C.(Flow<T>) -> Unit)","description":"dev.fritz2.headless.foundation.AttributeHook.AttributeHook","location":"headless/dev.fritz2.headless.foundation/-attribute-hook/-attribute-hook.html","searchKeys":["AttributeHook","constructor(valueSetter: C.(T) -> Unit, flowOfValueSetter: C.(Flow<T>) -> Unit)","dev.fritz2.headless.foundation.AttributeHook.AttributeHook"]},{"name":"data class CollectionData<T>(val data: Flow<List<T>>, val idProvider: IdProvider<T, *>?, val id: String?)","description":"dev.fritz2.headless.components.CollectionData","location":"headless/dev.fritz2.headless.components/-collection-data/index.html","searchKeys":["CollectionData","data class CollectionData<T>(val data: Flow<List<T>>, val idProvider: IdProvider<T, *>?, val id: String?)","dev.fritz2.headless.components.CollectionData"]},{"name":"data class ComponentValidationMessage(val path: String, val severity: Severity, val message: String, val details: String? = null) : ValidationMessage","description":"dev.fritz2.headless.validation.ComponentValidationMessage","location":"headless/dev.fritz2.headless.validation/-component-validation-message/index.html","searchKeys":["ComponentValidationMessage","data class ComponentValidationMessage(val path: String, val severity: Severity, val message: String, val details: String? = null) : ValidationMessage","dev.fritz2.headless.validation.ComponentValidationMessage"]},{"name":"data class DataBinding<T>(val id: String? = null, val data: Flow<T>, val handler: WithJob.(Flow<T>) -> Unit? = null, val messages: Flow<List<ComponentValidationMessage>>? = null)","description":"dev.fritz2.headless.foundation.DatabindingProperty.DataBinding","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-data-binding/index.html","searchKeys":["DataBinding","data class DataBinding<T>(val id: String? = null, val data: Flow<T>, val handler: WithJob.(Flow<T>) -> Unit? = null, val messages: Flow<List<ComponentValidationMessage>>? = null)","dev.fritz2.headless.foundation.DatabindingProperty.DataBinding"]},{"name":"data class FocusOptions(val first: Boolean = false, val previous: Boolean = false, val next: Boolean = false, val last: Boolean = false, val wrapAround: Boolean = false, val noScroll: Boolean = false)","description":"dev.fritz2.headless.foundation.FocusOptions","location":"headless/dev.fritz2.headless.foundation/-focus-options/index.html","searchKeys":["FocusOptions","data class FocusOptions(val first: Boolean = false, val previous: Boolean = false, val next: Boolean = false, val last: Boolean = false, val wrapAround: Boolean = false, val noScroll: Boolean = false)","dev.fritz2.headless.foundation.FocusOptions"]},{"name":"data class Item<T>(val index: Int, val value: T)","description":"dev.fritz2.headless.components.Combobox.Item","location":"headless/dev.fritz2.headless.components/-combobox/-item/index.html","searchKeys":["Item","data class Item<T>(val index: Int, val value: T)","dev.fritz2.headless.components.Combobox.Item"]},{"name":"data class ItemList<T>(val query: String, val items: List<Combobox.Item<T>>, val truncated: Boolean) : Combobox.QueryResult<T> ","description":"dev.fritz2.headless.components.Combobox.QueryResult.ItemList","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-item-list/index.html","searchKeys":["ItemList","data class ItemList<T>(val query: String, val items: List<Combobox.Item<T>>, val truncated: Boolean) : Combobox.QueryResult<T> ","dev.fritz2.headless.components.Combobox.QueryResult.ItemList"]},{"name":"data class Sorting<T>(val comparatorAscending: Comparator<T>, val comparatorDescending: Comparator<T>)","description":"dev.fritz2.headless.foundation.Sorting","location":"headless/dev.fritz2.headless.foundation/-sorting/index.html","searchKeys":["Sorting","data class Sorting<T>(val comparatorAscending: Comparator<T>, val comparatorDescending: Comparator<T>)","dev.fritz2.headless.foundation.Sorting"]},{"name":"data class SortingOrder<T>(val sorting: Sorting<T>, val direction: SortDirection)","description":"dev.fritz2.headless.foundation.SortingOrder","location":"headless/dev.fritz2.headless.foundation/-sorting-order/index.html","searchKeys":["SortingOrder","data class SortingOrder<T>(val sorting: Sorting<T>, val direction: SortDirection)","dev.fritz2.headless.foundation.SortingOrder"]},{"name":"end","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.end","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/end/index.html","searchKeys":["end","end","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.end"]},{"name":"enum Direction : Enum<Direction> ","description":"dev.fritz2.headless.foundation.Direction","location":"headless/dev.fritz2.headless.foundation/-direction/index.html","searchKeys":["Direction","enum Direction : Enum<Direction> ","dev.fritz2.headless.foundation.Direction"]},{"name":"enum FocusResult : Enum<FocusResult> ","description":"dev.fritz2.headless.foundation.FocusResult","location":"headless/dev.fritz2.headless.foundation/-focus-result/index.html","searchKeys":["FocusResult","enum FocusResult : Enum<FocusResult> ","dev.fritz2.headless.foundation.FocusResult"]},{"name":"enum InitialFocus : Enum<InitialFocus> ","description":"dev.fritz2.headless.foundation.InitialFocus","location":"headless/dev.fritz2.headless.foundation/-initial-focus/index.html","searchKeys":["InitialFocus","enum InitialFocus : Enum<InitialFocus> ","dev.fritz2.headless.foundation.InitialFocus"]},{"name":"enum Orientation : Enum<Orientation> ","description":"dev.fritz2.headless.foundation.Orientation","location":"headless/dev.fritz2.headless.foundation/-orientation/index.html","searchKeys":["Orientation","enum Orientation : Enum<Orientation> ","dev.fritz2.headless.foundation.Orientation"]},{"name":"enum PopUpPanelSize : Enum<PopUpPanelSize> ","description":"dev.fritz2.headless.foundation.PopUpPanelSize","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/index.html","searchKeys":["PopUpPanelSize","enum PopUpPanelSize : Enum<PopUpPanelSize> ","dev.fritz2.headless.foundation.PopUpPanelSize"]},{"name":"enum ScrollBehavior : Enum<ScrollBehavior> ","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-behavior/index.html","searchKeys":["ScrollBehavior","enum ScrollBehavior : Enum<ScrollBehavior> ","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior"]},{"name":"enum ScrollMode : Enum<ScrollMode> ","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/index.html","searchKeys":["ScrollMode","enum ScrollMode : Enum<ScrollMode> ","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode"]},{"name":"enum ScrollPosition : Enum<ScrollPosition> ","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/index.html","searchKeys":["ScrollPosition","enum ScrollPosition : Enum<ScrollPosition> ","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition"]},{"name":"enum Severity : Enum<Severity> ","description":"dev.fritz2.headless.validation.Severity","location":"headless/dev.fritz2.headless.validation/-severity/index.html","searchKeys":["Severity","enum Severity : Enum<Severity> ","dev.fritz2.headless.validation.Severity"]},{"name":"enum SortDirection : Enum<SortDirection> ","description":"dev.fritz2.headless.foundation.SortDirection","location":"headless/dev.fritz2.headless.foundation/-sort-direction/index.html","searchKeys":["SortDirection","enum SortDirection : Enum<SortDirection> ","dev.fritz2.headless.foundation.SortDirection"]},{"name":"external fun <T, P> evaluate(value: (param: P) -> T, param: P): T","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.evaluate","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/evaluate.html","searchKeys":["evaluate","external fun <T, P> evaluate(value: (param: P) -> T, param: P): T","dev.fritz2.headless.foundation.utils.floatingui.utils.evaluate"]},{"name":"external fun <T, P> evaluate(value: T, param: P): T","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.evaluate","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/evaluate.html","searchKeys":["evaluate","external fun <T, P> evaluate(value: T, param: P): T","dev.fritz2.headless.foundation.utils.floatingui.utils.evaluate"]},{"name":"external fun <T> getOppositeAlignmentPlacement(placement: T): T","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositeAlignmentPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-opposite-alignment-placement.html","searchKeys":["getOppositeAlignmentPlacement","external fun <T> getOppositeAlignmentPlacement(placement: T): T","dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositeAlignmentPlacement"]},{"name":"external fun <T> getOppositePlacement(placement: T): T","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositePlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-opposite-placement.html","searchKeys":["getOppositePlacement","external fun <T> getOppositePlacement(placement: T): T","dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositePlacement"]},{"name":"external fun arrow(options: ArrowOptions? = definedExternally): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.arrow","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/arrow.html","searchKeys":["arrow","external fun arrow(options: ArrowOptions? = definedExternally): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.arrow"]},{"name":"external fun autoPlacement(options: AutoPlacementOptions? = definedExternally): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.autoPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/auto-placement.html","searchKeys":["autoPlacement","external fun autoPlacement(options: AutoPlacementOptions? = definedExternally): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.autoPlacement"]},{"name":"external fun autoUpdate(reference: Element, floating: Element, update: () -> Unit, options: AutoUpdateOptions = definedExternally): () -> Unit","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.autoUpdate","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/auto-update.html","searchKeys":["autoUpdate","external fun autoUpdate(reference: Element, floating: Element, update: () -> Unit, options: AutoUpdateOptions = definedExternally): () -> Unit","dev.fritz2.headless.foundation.utils.floatingui.dom.autoUpdate"]},{"name":"external fun clamp(start: Number, value: Number, end: Number): Number","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.clamp","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/clamp.html","searchKeys":["clamp","external fun clamp(start: Number, value: Number, end: Number): Number","dev.fritz2.headless.foundation.utils.floatingui.utils.clamp"]},{"name":"external fun computePosition(reference: Element, floating: Element, config: ComputePositionConfig = definedExternally): Promise<ComputePositionReturn>","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.computePosition","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/compute-position.html","searchKeys":["computePosition","external fun computePosition(reference: Element, floating: Element, config: ComputePositionConfig = definedExternally): Promise<ComputePositionReturn>","dev.fritz2.headless.foundation.utils.floatingui.dom.computePosition"]},{"name":"external fun convertValueToCoords(state: MiddlewareState, options: OffsetOptions): Promise<Coords>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.convertValueToCoords","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/convert-value-to-coords.html","searchKeys":["convertValueToCoords","external fun convertValueToCoords(state: MiddlewareState, options: OffsetOptions): Promise<Coords>","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.convertValueToCoords"]},{"name":"external fun detectOverflow(state: MiddlewareState, options: DetectOverflowOptions = definedExternally): Promise<SideObject>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.detectOverflow","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/detect-overflow.html","searchKeys":["detectOverflow","external fun detectOverflow(state: MiddlewareState, options: DetectOverflowOptions = definedExternally): Promise<SideObject>","dev.fritz2.headless.foundation.utils.floatingui.core.detectOverflow"]},{"name":"external fun expandPaddingObject(padding: SideObject): SideObject","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.expandPaddingObject","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/expand-padding-object.html","searchKeys":["expandPaddingObject","external fun expandPaddingObject(padding: SideObject): SideObject","dev.fritz2.headless.foundation.utils.floatingui.utils.expandPaddingObject"]},{"name":"external fun flip(options: FlipOptions? = definedExternally): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.flip","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/flip.html","searchKeys":["flip","external fun flip(options: FlipOptions? = definedExternally): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.flip"]},{"name":"external fun getAlignment(placement: Placement): Alignment?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getAlignment","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-alignment.html","searchKeys":["getAlignment","external fun getAlignment(placement: Placement): Alignment?","dev.fritz2.headless.foundation.utils.floatingui.utils.getAlignment"]},{"name":"external fun getAlignmentAxis(placement: Placement): Axis","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getAlignmentAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-alignment-axis.html","searchKeys":["getAlignmentAxis","external fun getAlignmentAxis(placement: Placement): Axis","dev.fritz2.headless.foundation.utils.floatingui.utils.getAlignmentAxis"]},{"name":"external fun getAlignmentSides(placement: Placement, rects: ElementRects, rtl: Boolean?): Array<Side>","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getAlignmentSides","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-alignment-sides.html","searchKeys":["getAlignmentSides","external fun getAlignmentSides(placement: Placement, rects: ElementRects, rtl: Boolean?): Array<Side>","dev.fritz2.headless.foundation.utils.floatingui.utils.getAlignmentSides"]},{"name":"external fun getAxisLength(axis: Axis): Length","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getAxisLength","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-axis-length.html","searchKeys":["getAxisLength","external fun getAxisLength(axis: Axis): Length","dev.fritz2.headless.foundation.utils.floatingui.utils.getAxisLength"]},{"name":"external fun getExpandedPlacements(placement: Placement): Array<Placement>","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getExpandedPlacements","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-expanded-placements.html","searchKeys":["getExpandedPlacements","external fun getExpandedPlacements(placement: Placement): Array<Placement>","dev.fritz2.headless.foundation.utils.floatingui.utils.getExpandedPlacements"]},{"name":"external fun getOppositeAxis(axis: Axis): Axis","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositeAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-opposite-axis.html","searchKeys":["getOppositeAxis","external fun getOppositeAxis(axis: Axis): Axis","dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositeAxis"]},{"name":"external fun getOppositeAxisPlacements(placement: Placement, flipAlignment: Boolean, direction: Alignment, rtl: Boolean?): Array<Placement>","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositeAxisPlacements","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-opposite-axis-placements.html","searchKeys":["getOppositeAxisPlacements","external fun getOppositeAxisPlacements(placement: Placement, flipAlignment: Boolean, direction: Alignment, rtl: Boolean?): Array<Placement>","dev.fritz2.headless.foundation.utils.floatingui.utils.getOppositeAxisPlacements"]},{"name":"external fun getPaddingObject(padding: Padding): SideObject","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getPaddingObject","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-padding-object.html","searchKeys":["getPaddingObject","external fun getPaddingObject(padding: Padding): SideObject","dev.fritz2.headless.foundation.utils.floatingui.utils.getPaddingObject"]},{"name":"external fun getPlacementList(alignment: Alignment?, autoAlignment: Boolean, allowedPlacements: Array<Placement>): Array<Placement>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.getPlacementList","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/get-placement-list.html","searchKeys":["getPlacementList","external fun getPlacementList(alignment: Alignment?, autoAlignment: Boolean, allowedPlacements: Array<Placement>): Array<Placement>","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.getPlacementList"]},{"name":"external fun getRectsByLine(rects: Array<ClientRectObject>): Array<ClientRectObject>","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.getRectsByLine","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/get-rects-by-line.html","searchKeys":["getRectsByLine","external fun getRectsByLine(rects: Array<ClientRectObject>): Array<ClientRectObject>","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.getRectsByLine"]},{"name":"external fun getSide(placement: Placement): Side","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getSide","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-side.html","searchKeys":["getSide","external fun getSide(placement: Placement): Side","dev.fritz2.headless.foundation.utils.floatingui.utils.getSide"]},{"name":"external fun getSideAxis(placement: Placement): Axis","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.getSideAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/get-side-axis.html","searchKeys":["getSideAxis","external fun getSideAxis(placement: Placement): Axis","dev.fritz2.headless.foundation.utils.floatingui.utils.getSideAxis"]},{"name":"external fun hide(options: HideOptions?): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.hide","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/hide.html","searchKeys":["hide","external fun hide(options: HideOptions?): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.hide"]},{"name":"external fun inline(options: InlineOptions? = definedExternally): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.inline","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/inline.html","searchKeys":["inline","external fun inline(options: InlineOptions? = definedExternally): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.inline"]},{"name":"external fun limitShift(options: LimitShiftOptions? = definedExternally): ShiftOptionsLimiter","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.limitShift","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/limit-shift.html","searchKeys":["limitShift","external fun limitShift(options: LimitShiftOptions? = definedExternally): ShiftOptionsLimiter","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.limitShift"]},{"name":"external fun offset(options: OffsetOptions): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.offset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/offset.html","searchKeys":["offset","external fun offset(options: OffsetOptions): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.offset"]},{"name":"external fun rectToClientRect(rect: Rect): ClientRectObject","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.rectToClientRect","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/rect-to-client-rect.html","searchKeys":["rectToClientRect","external fun rectToClientRect(rect: Rect): ClientRectObject","dev.fritz2.headless.foundation.utils.floatingui.utils.rectToClientRect"]},{"name":"external fun scrollIntoView(node: Node, options: ScrollIntoViewOptions)","description":"dev.fritz2.headless.foundation.utils.scrollintoview.scrollIntoView","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/scroll-into-view.html","searchKeys":["scrollIntoView","external fun scrollIntoView(node: Node, options: ScrollIntoViewOptions)","dev.fritz2.headless.foundation.utils.scrollintoview.scrollIntoView"]},{"name":"external fun shift(options: ShiftOptions? = definedExternally): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.shift","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/shift.html","searchKeys":["shift","external fun shift(options: ShiftOptions? = definedExternally): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.shift"]},{"name":"external fun size(options: SizeOptions? = definedExternally): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.size","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/size.html","searchKeys":["size","external fun size(options: SizeOptions? = definedExternally): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.size"]},{"name":"external interface Arrow : Coords","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Arrow","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-arrow/index.html","searchKeys":["Arrow","external interface Arrow : Coords","dev.fritz2.headless.foundation.utils.floatingui.core.Arrow"]},{"name":"external interface ArrowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ArrowOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-arrow-options/index.html","searchKeys":["ArrowOptions","external interface ArrowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ArrowOptions"]},{"name":"external interface AutoPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.core.AutoPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-auto-placement/index.html","searchKeys":["AutoPlacement","external interface AutoPlacement","dev.fritz2.headless.foundation.utils.floatingui.core.AutoPlacement"]},{"name":"external interface AutoPlacementOptions : DetectOverflowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-auto-placement-options/index.html","searchKeys":["AutoPlacementOptions","external interface AutoPlacementOptions : DetectOverflowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions"]},{"name":"external interface AutoUpdateOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/-auto-update-options/index.html","searchKeys":["AutoUpdateOptions","external interface AutoUpdateOptions","dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions"]},{"name":"external interface ClientRectObject : Rect, SideObject","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.ClientRectObject","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-client-rect-object/index.html","searchKeys":["ClientRectObject","external interface ClientRectObject : Rect, SideObject","dev.fritz2.headless.foundation.utils.floatingui.utils.ClientRectObject"]},{"name":"external interface ComputePositionConfig","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-config/index.html","searchKeys":["ComputePositionConfig","external interface ComputePositionConfig","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig"]},{"name":"external interface ComputePositionReturn : Coords","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-return/index.html","searchKeys":["ComputePositionReturn","external interface ComputePositionReturn : Coords","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn"]},{"name":"external interface Coords","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Coords","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-coords/index.html","searchKeys":["Coords","external interface Coords","dev.fritz2.headless.foundation.utils.floatingui.core.Coords"]},{"name":"external interface DetectOverflowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-detect-overflow-options/index.html","searchKeys":["DetectOverflowOptions","external interface DetectOverflowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions"]},{"name":"external interface Dimensions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Dimensions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-dimensions/index.html","searchKeys":["Dimensions","external interface Dimensions","dev.fritz2.headless.foundation.utils.floatingui.core.Dimensions"]},{"name":"external interface ElementRects","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.ElementRects","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-element-rects/index.html","searchKeys":["ElementRects","external interface ElementRects","dev.fritz2.headless.foundation.utils.floatingui.utils.ElementRects"]},{"name":"external interface Elements","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Elements","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-elements/index.html","searchKeys":["Elements","external interface Elements","dev.fritz2.headless.foundation.utils.floatingui.core.Elements"]},{"name":"external interface Flip","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Flip","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-flip/index.html","searchKeys":["Flip","external interface Flip","dev.fritz2.headless.foundation.utils.floatingui.core.Flip"]},{"name":"external interface FlipOptions : DetectOverflowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/index.html","searchKeys":["FlipOptions","external interface FlipOptions : DetectOverflowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions"]},{"name":"external interface Hide","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Hide","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-hide/index.html","searchKeys":["Hide","external interface Hide","dev.fritz2.headless.foundation.utils.floatingui.core.Hide"]},{"name":"external interface HideOptions : DetectOverflowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-hide-options/index.html","searchKeys":["HideOptions","external interface HideOptions : DetectOverflowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideOptions"]},{"name":"external interface InlineOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-inline-options/index.html","searchKeys":["InlineOptions","external interface InlineOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions"]},{"name":"external interface LimitShiftOffset","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOffset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-offset/index.html","searchKeys":["LimitShiftOffset","external interface LimitShiftOffset","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOffset"]},{"name":"external interface LimitShiftOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-options/index.html","searchKeys":["LimitShiftOptions","external interface LimitShiftOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions"]},{"name":"external interface Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Middleware","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware/index.html","searchKeys":["Middleware","external interface Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.Middleware"]},{"name":"external interface MiddlewareData","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-data/index.html","searchKeys":["MiddlewareData","external interface MiddlewareData","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareData"]},{"name":"external interface MiddlewareReturn : Coords","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareReturn","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-return/index.html","searchKeys":["MiddlewareReturn","external interface MiddlewareReturn : Coords","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareReturn"]},{"name":"external interface MiddlewareState : Coords","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-state/index.html","searchKeys":["MiddlewareState","external interface MiddlewareState : Coords","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareState"]},{"name":"external interface OffsetOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-offset-options/index.html","searchKeys":["OffsetOptions","external interface OffsetOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions"]},{"name":"external interface Overflows","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Overflows","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-overflows/index.html","searchKeys":["Overflows","external interface Overflows","dev.fritz2.headless.foundation.utils.floatingui.core.Overflows"]},{"name":"external interface Platform","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Platform","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-platform/index.html","searchKeys":["Platform","external interface Platform","dev.fritz2.headless.foundation.utils.floatingui.core.Platform"]},{"name":"external interface Rect","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Rect","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-rect/index.html","searchKeys":["Rect","external interface Rect","dev.fritz2.headless.foundation.utils.floatingui.utils.Rect"]},{"name":"external interface Reset","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Reset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-reset/index.html","searchKeys":["Reset","external interface Reset","dev.fritz2.headless.foundation.utils.floatingui.core.Reset"]},{"name":"external interface ScrollIntoViewOptions","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-into-view-options/index.html","searchKeys":["ScrollIntoViewOptions","external interface ScrollIntoViewOptions","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions"]},{"name":"external interface ShiftOptions : DetectOverflowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options/index.html","searchKeys":["ShiftOptions","external interface ShiftOptions : DetectOverflowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions"]},{"name":"external interface ShiftOptionsLimiter","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptionsLimiter","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options-limiter/index.html","searchKeys":["ShiftOptionsLimiter","external interface ShiftOptionsLimiter","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptionsLimiter"]},{"name":"external interface SideObject","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-object/index.html","searchKeys":["SideObject","external interface SideObject","dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject"]},{"name":"external interface SizeOptions : DetectOverflowOptions","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptions","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-size-options/index.html","searchKeys":["SizeOptions","external interface SizeOptions : DetectOverflowOptions","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptions"]},{"name":"external interface SizeOptionsArgs : MiddlewareState","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptionsArgs","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-size-options-args/index.html","searchKeys":["SizeOptionsArgs","external interface SizeOptionsArgs : MiddlewareState","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptionsArgs"]},{"name":"fun <C : HTMLElement, T> RenderContext.checkboxGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: CheckboxGroup<C, T>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.checkboxGroup","location":"headless/dev.fritz2.headless.components/checkbox-group.html","searchKeys":["checkboxGroup","fun <C : HTMLElement, T> RenderContext.checkboxGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: CheckboxGroup<C, T>.() -> Unit): Tag<C>","dev.fritz2.headless.components.checkboxGroup"]},{"name":"fun <C : HTMLElement, T> RenderContext.radioGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: RadioGroup<C, T>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.radioGroup","location":"headless/dev.fritz2.headless.components/radio-group.html","searchKeys":["radioGroup","fun <C : HTMLElement, T> RenderContext.radioGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: RadioGroup<C, T>.() -> Unit): Tag<C>","dev.fritz2.headless.components.radioGroup"]},{"name":"fun <C : HTMLElement> Modal.modalPanel(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Modal.ModalPanel<C>.() -> Unit)","description":"dev.fritz2.headless.components.Modal.modalPanel","location":"headless/dev.fritz2.headless.components/-modal/modal-panel.html","searchKeys":["modalPanel","fun <C : HTMLElement> Modal.modalPanel(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Modal.ModalPanel<C>.() -> Unit)","dev.fritz2.headless.components.Modal.modalPanel"]},{"name":"fun <C : HTMLElement> RenderContext.disclosure(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Disclosure<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.disclosure","location":"headless/dev.fritz2.headless.components/disclosure.html","searchKeys":["disclosure","fun <C : HTMLElement> RenderContext.disclosure(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Disclosure<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.disclosure"]},{"name":"fun <C : HTMLElement> RenderContext.inputField(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: InputField<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.inputField","location":"headless/dev.fritz2.headless.components/input-field.html","searchKeys":["inputField","fun <C : HTMLElement> RenderContext.inputField(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: InputField<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.inputField"]},{"name":"fun <C : HTMLElement> RenderContext.menu(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Menu<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.menu","location":"headless/dev.fritz2.headless.components/menu.html","searchKeys":["menu","fun <C : HTMLElement> RenderContext.menu(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Menu<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.menu"]},{"name":"fun <C : HTMLElement> RenderContext.popOver(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: PopOver<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.popOver","location":"headless/dev.fritz2.headless.components/pop-over.html","searchKeys":["popOver","fun <C : HTMLElement> RenderContext.popOver(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: PopOver<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.popOver"]},{"name":"fun <C : HTMLElement> RenderContext.portal(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, content: Tag<C>.(close: suspend (Unit) -> Unit) -> Unit = {})","description":"dev.fritz2.headless.foundation.portal","location":"headless/dev.fritz2.headless.foundation/portal.html","searchKeys":["portal","fun <C : HTMLElement> RenderContext.portal(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, content: Tag<C>.(close: suspend (Unit) -> Unit) -> Unit = {})","dev.fritz2.headless.foundation.portal"]},{"name":"fun <C : HTMLElement> RenderContext.switch(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Switch<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.switch","location":"headless/dev.fritz2.headless.components/switch.html","searchKeys":["switch","fun <C : HTMLElement> RenderContext.switch(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Switch<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.switch"]},{"name":"fun <C : HTMLElement> RenderContext.switchWithLabel(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: SwitchWithLabel<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.switchWithLabel","location":"headless/dev.fritz2.headless.components/switch-with-label.html","searchKeys":["switchWithLabel","fun <C : HTMLElement> RenderContext.switchWithLabel(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: SwitchWithLabel<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.switchWithLabel"]},{"name":"fun <C : HTMLElement> RenderContext.tabGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: TabGroup<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.tabGroup","location":"headless/dev.fritz2.headless.components/tab-group.html","searchKeys":["tabGroup","fun <C : HTMLElement> RenderContext.tabGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: TabGroup<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.tabGroup"]},{"name":"fun <C : HTMLElement> RenderContext.textArea(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: TextArea<C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.textArea","location":"headless/dev.fritz2.headless.components/text-area.html","searchKeys":["textArea","fun <C : HTMLElement> RenderContext.textArea(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: TextArea<C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.textArea"]},{"name":"fun <C : HTMLElement> Tag<HTMLElement>.tooltip(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Tooltip<C>.() -> Unit)","description":"dev.fritz2.headless.components.tooltip","location":"headless/dev.fritz2.headless.components/tooltip.html","searchKeys":["tooltip","fun <C : HTMLElement> Tag<HTMLElement>.tooltip(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Tooltip<C>.() -> Unit)","dev.fritz2.headless.components.tooltip"]},{"name":"fun <C, R, P> C.hook(h: Hook<C, R, P>, payload: P): Unit?","description":"dev.fritz2.headless.foundation.hook","location":"headless/dev.fritz2.headless.foundation/hook.html","searchKeys":["hook","fun <C, R, P> C.hook(h: Hook<C, R, P>, payload: P): Unit?","dev.fritz2.headless.foundation.hook"]},{"name":"fun <C, R, P> C.hook(h: Hook<C, R, TagPayload<P>>, classes: String?, id: String?, payload: P): Unit?","description":"dev.fritz2.headless.foundation.hook","location":"headless/dev.fritz2.headless.foundation/hook.html","searchKeys":["hook","fun <C, R, P> C.hook(h: Hook<C, R, TagPayload<P>>, classes: String?, id: String?, payload: P): Unit?","dev.fritz2.headless.foundation.hook"]},{"name":"fun <C, R> C.hook(h: Hook<C, R, Unit>): Unit?","description":"dev.fritz2.headless.foundation.hook","location":"headless/dev.fritz2.headless.foundation/hook.html","searchKeys":["hook","fun <C, R> C.hook(h: Hook<C, R, Unit>): Unit?","dev.fritz2.headless.foundation.hook"]},{"name":"fun <C, R> C.hook(vararg h: Hook<C, R, Unit>)","description":"dev.fritz2.headless.foundation.hook","location":"headless/dev.fritz2.headless.foundation/hook.html","searchKeys":["hook","fun <C, R> C.hook(vararg h: Hook<C, R, Unit>)","dev.fritz2.headless.foundation.hook"]},{"name":"fun <CB : HTMLElement> RenderContext.disclosureButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","description":"dev.fritz2.headless.components.Disclosure.disclosureButton","location":"headless/dev.fritz2.headless.components/-disclosure/disclosure-button.html","searchKeys":["disclosureButton","fun <CB : HTMLElement> RenderContext.disclosureButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","dev.fritz2.headless.components.Disclosure.disclosureButton"]},{"name":"fun <CB : HTMLElement> RenderContext.listboxButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","description":"dev.fritz2.headless.components.Listbox.listboxButton","location":"headless/dev.fritz2.headless.components/-listbox/listbox-button.html","searchKeys":["listboxButton","fun <CB : HTMLElement> RenderContext.listboxButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","dev.fritz2.headless.components.Listbox.listboxButton"]},{"name":"fun <CB : HTMLElement> RenderContext.menuButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","description":"dev.fritz2.headless.components.Menu.menuButton","location":"headless/dev.fritz2.headless.components/-menu/menu-button.html","searchKeys":["menuButton","fun <CB : HTMLElement> RenderContext.menuButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","dev.fritz2.headless.components.Menu.menuButton"]},{"name":"fun <CB : HTMLElement> RenderContext.popOverButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","description":"dev.fritz2.headless.components.PopOver.popOverButton","location":"headless/dev.fritz2.headless.components/-pop-over/pop-over-button.html","searchKeys":["popOverButton","fun <CB : HTMLElement> RenderContext.popOverButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CB>>, content: Tag<CB>.() -> Unit): Tag<CB>","dev.fritz2.headless.components.PopOver.popOverButton"]},{"name":"fun <CC : HTMLElement> RenderContext.disclosureCloseButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CC>>, content: Tag<CC>.() -> Unit): Tag<CC>","description":"dev.fritz2.headless.components.Disclosure.DisclosurePanel.disclosureCloseButton","location":"headless/dev.fritz2.headless.components/-disclosure/-disclosure-panel/disclosure-close-button.html","searchKeys":["disclosureCloseButton","fun <CC : HTMLElement> RenderContext.disclosureCloseButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CC>>, content: Tag<CC>.() -> Unit): Tag<CC>","dev.fritz2.headless.components.Disclosure.DisclosurePanel.disclosureCloseButton"]},{"name":"fun <CD : HTMLElement> RenderContext.inputDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CD>>, content: Tag<CD>.() -> Unit): Tag<CD>","description":"dev.fritz2.headless.components.InputField.inputDescription","location":"headless/dev.fritz2.headless.components/-input-field/input-description.html","searchKeys":["inputDescription","fun <CD : HTMLElement> RenderContext.inputDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CD>>, content: Tag<CD>.() -> Unit): Tag<CD>","dev.fritz2.headless.components.InputField.inputDescription"]},{"name":"fun <CD : HTMLElement> RenderContext.modalDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CD>>, content: Tag<CD>.() -> Unit): Tag<CD>","description":"dev.fritz2.headless.components.Modal.ModalPanel.modalDescription","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/modal-description.html","searchKeys":["modalDescription","fun <CD : HTMLElement> RenderContext.modalDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CD>>, content: Tag<CD>.() -> Unit): Tag<CD>","dev.fritz2.headless.components.Modal.ModalPanel.modalDescription"]},{"name":"fun <CD : HTMLElement> RenderContext.textareaDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CD>>, content: Tag<CD>.() -> Unit): Tag<CD>","description":"dev.fritz2.headless.components.TextArea.textareaDescription","location":"headless/dev.fritz2.headless.components/-text-area/textarea-description.html","searchKeys":["textareaDescription","fun <CD : HTMLElement> RenderContext.textareaDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CD>>, content: Tag<CD>.() -> Unit): Tag<CD>","dev.fritz2.headless.components.TextArea.textareaDescription"]},{"name":"fun <CI : HTMLElement> RenderContext.dataCollectionItem(item: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: DataCollection.DataCollectionItems.DataCollectionItem<CI, CI, T, C>.() -> Unit): Tag<CI>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.dataCollectionItem","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/data-collection-item.html","searchKeys":["dataCollectionItem","fun <CI : HTMLElement> RenderContext.dataCollectionItem(item: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: DataCollection.DataCollectionItems.DataCollectionItem<CI, CI, T, C>.() -> Unit): Tag<CI>","dev.fritz2.headless.components.DataCollection.DataCollectionItems.dataCollectionItem"]},{"name":"fun <CI : HTMLElement> RenderContext.dataCollectionItems(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: DataCollection.DataCollectionItems<CI, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.DataCollection.dataCollectionItems","location":"headless/dev.fritz2.headless.components/-data-collection/data-collection-items.html","searchKeys":["dataCollectionItems","fun <CI : HTMLElement> RenderContext.dataCollectionItems(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: DataCollection.DataCollectionItems<CI, T, C>.() -> Unit)","dev.fritz2.headless.components.DataCollection.dataCollectionItems"]},{"name":"fun <CI : HTMLElement> RenderContext.listboxItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: Listbox.ListboxItems<CI, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.listboxItems","location":"headless/dev.fritz2.headless.components/-listbox/listbox-items.html","searchKeys":["listboxItems","fun <CI : HTMLElement> RenderContext.listboxItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: Listbox.ListboxItems<CI, T, C>.() -> Unit)","dev.fritz2.headless.components.Listbox.listboxItems"]},{"name":"fun <CI : HTMLElement> RenderContext.menuItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: Menu.MenuItems<CI, C>.() -> Unit)","description":"dev.fritz2.headless.components.Menu.menuItems","location":"headless/dev.fritz2.headless.components/-menu/menu-items.html","searchKeys":["menuItems","fun <CI : HTMLElement> RenderContext.menuItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CI>>, initialize: Menu.MenuItems<CI, C>.() -> Unit)","dev.fritz2.headless.components.Menu.menuItems"]},{"name":"fun <CL : HTMLElement> RenderContext.checkboxGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.CheckboxGroup.checkboxGroupLabel","location":"headless/dev.fritz2.headless.components/-checkbox-group/checkbox-group-label.html","searchKeys":["checkboxGroupLabel","fun <CL : HTMLElement> RenderContext.checkboxGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.CheckboxGroup.checkboxGroupLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.checkboxGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionDescription","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/checkbox-group-option-description.html","searchKeys":["checkboxGroupOptionDescription","fun <CL : HTMLElement> RenderContext.checkboxGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionDescription"]},{"name":"fun <CL : HTMLElement> RenderContext.checkboxGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionLabel","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/checkbox-group-option-label.html","searchKeys":["checkboxGroupOptionLabel","fun <CL : HTMLElement> RenderContext.checkboxGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.comboboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.Combobox.comboboxLabel","location":"headless/dev.fritz2.headless.components/-combobox/combobox-label.html","searchKeys":["comboboxLabel","fun <CL : HTMLElement> RenderContext.comboboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.Combobox.comboboxLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.inputLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.InputField.inputLabel","location":"headless/dev.fritz2.headless.components/-input-field/input-label.html","searchKeys":["inputLabel","fun <CL : HTMLElement> RenderContext.inputLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.InputField.inputLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.listboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.Listbox.listboxLabel","location":"headless/dev.fritz2.headless.components/-listbox/listbox-label.html","searchKeys":["listboxLabel","fun <CL : HTMLElement> RenderContext.listboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.Listbox.listboxLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.radioGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.RadioGroup.radioGroupLabel","location":"headless/dev.fritz2.headless.components/-radio-group/radio-group-label.html","searchKeys":["radioGroupLabel","fun <CL : HTMLElement> RenderContext.radioGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.RadioGroup.radioGroupLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.radioGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionDescription","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/radio-group-option-description.html","searchKeys":["radioGroupOptionDescription","fun <CL : HTMLElement> RenderContext.radioGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionDescription"]},{"name":"fun <CL : HTMLElement> RenderContext.radioGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionLabel","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/radio-group-option-label.html","searchKeys":["radioGroupOptionLabel","fun <CL : HTMLElement> RenderContext.radioGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.switchDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.SwitchWithLabel.switchDescription","location":"headless/dev.fritz2.headless.components/-switch-with-label/switch-description.html","searchKeys":["switchDescription","fun <CL : HTMLElement> RenderContext.switchDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.SwitchWithLabel.switchDescription"]},{"name":"fun <CL : HTMLElement> RenderContext.switchLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.SwitchWithLabel.switchLabel","location":"headless/dev.fritz2.headless.components/-switch-with-label/switch-label.html","searchKeys":["switchLabel","fun <CL : HTMLElement> RenderContext.switchLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.SwitchWithLabel.switchLabel"]},{"name":"fun <CL : HTMLElement> RenderContext.tabList(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, initialize: TabGroup.TabList<CL, C>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.TabGroup.tabList","location":"headless/dev.fritz2.headless.components/-tab-group/tab-list.html","searchKeys":["tabList","fun <CL : HTMLElement> RenderContext.tabList(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, initialize: TabGroup.TabList<CL, C>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.TabGroup.tabList"]},{"name":"fun <CL : HTMLElement> RenderContext.textareaLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","description":"dev.fritz2.headless.components.TextArea.textareaLabel","location":"headless/dev.fritz2.headless.components/-text-area/textarea-label.html","searchKeys":["textareaLabel","fun <CL : HTMLElement> RenderContext.textareaLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CL>>, content: Tag<CL>.() -> Unit): Tag<CL>","dev.fritz2.headless.components.TextArea.textareaLabel"]},{"name":"fun <CM : HTMLElement> RenderContext.listboxItem(entry: T, classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CM>>, initialize: Listbox.ListboxItems.ListboxItem<CM, CI, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.ListboxItems.listboxItem","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/listbox-item.html","searchKeys":["listboxItem","fun <CM : HTMLElement> RenderContext.listboxItem(entry: T, classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CM>>, initialize: Listbox.ListboxItems.ListboxItem<CM, CI, T, C>.() -> Unit)","dev.fritz2.headless.components.Listbox.ListboxItems.listboxItem"]},{"name":"fun <CM : HTMLElement> RenderContext.menuItem(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CM>>, initialize: Menu.MenuItems.MenuItem<CM, CI, C>.() -> Unit)","description":"dev.fritz2.headless.components.Menu.MenuItems.menuItem","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/menu-item.html","searchKeys":["menuItem","fun <CM : HTMLElement> RenderContext.menuItem(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CM>>, initialize: Menu.MenuItems.MenuItem<CM, CI, C>.() -> Unit)","dev.fritz2.headless.components.Menu.MenuItems.menuItem"]},{"name":"fun <CO : HTMLElement> RenderContext.checkboxGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CO>>, initialize: CheckboxGroup.CheckboxGroupOption<CO, C, T>.() -> Unit): Tag<CO>","description":"dev.fritz2.headless.components.CheckboxGroup.checkboxGroupOption","location":"headless/dev.fritz2.headless.components/-checkbox-group/checkbox-group-option.html","searchKeys":["checkboxGroupOption","fun <CO : HTMLElement> RenderContext.checkboxGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CO>>, initialize: CheckboxGroup.CheckboxGroupOption<CO, C, T>.() -> Unit): Tag<CO>","dev.fritz2.headless.components.CheckboxGroup.checkboxGroupOption"]},{"name":"fun <CO : HTMLElement> RenderContext.modalOverlay(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CO>>, content: Tag<CO>.() -> Unit): Tag<CO>","description":"dev.fritz2.headless.components.Modal.ModalPanel.modalOverlay","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/modal-overlay.html","searchKeys":["modalOverlay","fun <CO : HTMLElement> RenderContext.modalOverlay(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CO>>, content: Tag<CO>.() -> Unit): Tag<CO>","dev.fritz2.headless.components.Modal.ModalPanel.modalOverlay"]},{"name":"fun <CO : HTMLElement> RenderContext.radioGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CO>>, initialize: RadioGroup.RadioGroupOption<CO, C, T>.() -> Unit): Tag<CO>","description":"dev.fritz2.headless.components.RadioGroup.radioGroupOption","location":"headless/dev.fritz2.headless.components/-radio-group/radio-group-option.html","searchKeys":["radioGroupOption","fun <CO : HTMLElement> RenderContext.radioGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CO>>, initialize: RadioGroup.RadioGroupOption<CO, C, T>.() -> Unit): Tag<CO>","dev.fritz2.headless.components.RadioGroup.radioGroupOption"]},{"name":"fun <CP : HTMLElement> RenderContext.disclosurePanel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CP>>, initialize: Disclosure.DisclosurePanel<CP, C>.() -> Unit)","description":"dev.fritz2.headless.components.Disclosure.disclosurePanel","location":"headless/dev.fritz2.headless.components/-disclosure/disclosure-panel.html","searchKeys":["disclosurePanel","fun <CP : HTMLElement> RenderContext.disclosurePanel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CP>>, initialize: Disclosure.DisclosurePanel<CP, C>.() -> Unit)","dev.fritz2.headless.components.Disclosure.disclosurePanel"]},{"name":"fun <CP : HTMLElement> RenderContext.popOverPanel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CP>>, initialize: PopOver.PopOverPanel<CP, C>.() -> Unit)","description":"dev.fritz2.headless.components.PopOver.popOverPanel","location":"headless/dev.fritz2.headless.components/-pop-over/pop-over-panel.html","searchKeys":["popOverPanel","fun <CP : HTMLElement> RenderContext.popOverPanel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CP>>, initialize: PopOver.PopOverPanel<CP, C>.() -> Unit)","dev.fritz2.headless.components.PopOver.popOverPanel"]},{"name":"fun <CP : HTMLElement> RenderContext.tabPanels(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CP>>, initialize: TabGroup.TabPanels<CP, C>.() -> Unit): Tag<CP>","description":"dev.fritz2.headless.components.TabGroup.tabPanels","location":"headless/dev.fritz2.headless.components/-tab-group/tab-panels.html","searchKeys":["tabPanels","fun <CP : HTMLElement> RenderContext.tabPanels(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CP>>, initialize: TabGroup.TabPanels<CP, C>.() -> Unit): Tag<CP>","dev.fritz2.headless.components.TabGroup.tabPanels"]},{"name":"fun <CS : HTMLElement> RenderContext.dataCollectionSortButton(comparatorAscending: Comparator<T>, comparatorDescending: Comparator<T>, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CS>>, initialize: DataCollection.DataCollectionSortButton<CS, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.DataCollection.dataCollectionSortButton","location":"headless/dev.fritz2.headless.components/-data-collection/data-collection-sort-button.html","searchKeys":["dataCollectionSortButton","fun <CS : HTMLElement> RenderContext.dataCollectionSortButton(comparatorAscending: Comparator<T>, comparatorDescending: Comparator<T>, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CS>>, initialize: DataCollection.DataCollectionSortButton<CS, T, C>.() -> Unit)","dev.fritz2.headless.components.DataCollection.dataCollectionSortButton"]},{"name":"fun <CS : HTMLElement> RenderContext.dataCollectionSortButton(sort: Sorting<T>, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CS>>, initialize: DataCollection.DataCollectionSortButton<CS, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.DataCollection.dataCollectionSortButton","location":"headless/dev.fritz2.headless.components/-data-collection/data-collection-sort-button.html","searchKeys":["dataCollectionSortButton","fun <CS : HTMLElement> RenderContext.dataCollectionSortButton(sort: Sorting<T>, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CS>>, initialize: DataCollection.DataCollectionSortButton<CS, T, C>.() -> Unit)","dev.fritz2.headless.components.DataCollection.dataCollectionSortButton"]},{"name":"fun <CT : HTMLElement> RenderContext.checkboxGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionToggle","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/checkbox-group-option-toggle.html","searchKeys":["checkboxGroupOptionToggle","fun <CT : HTMLElement> RenderContext.checkboxGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionToggle"]},{"name":"fun <CT : HTMLElement> RenderContext.modalTitle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","description":"dev.fritz2.headless.components.Modal.ModalPanel.modalTitle","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/modal-title.html","searchKeys":["modalTitle","fun <CT : HTMLElement> RenderContext.modalTitle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","dev.fritz2.headless.components.Modal.ModalPanel.modalTitle"]},{"name":"fun <CT : HTMLElement> RenderContext.panel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit)","description":"dev.fritz2.headless.components.TabGroup.TabPanels.panel","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-panels/panel.html","searchKeys":["panel","fun <CT : HTMLElement> RenderContext.panel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit)","dev.fritz2.headless.components.TabGroup.TabPanels.panel"]},{"name":"fun <CT : HTMLElement> RenderContext.radioGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionToggle","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/radio-group-option-toggle.html","searchKeys":["radioGroupOptionToggle","fun <CT : HTMLElement> RenderContext.radioGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionToggle"]},{"name":"fun <CT : HTMLElement> RenderContext.switchToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","description":"dev.fritz2.headless.components.SwitchWithLabel.switchToggle","location":"headless/dev.fritz2.headless.components/-switch-with-label/switch-toggle.html","searchKeys":["switchToggle","fun <CT : HTMLElement> RenderContext.switchToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, content: Tag<CT>.() -> Unit): Tag<CT>","dev.fritz2.headless.components.SwitchWithLabel.switchToggle"]},{"name":"fun <CT : HTMLElement> RenderContext.tab(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, initialize: TabGroup.TabList.Tab<CT, CL, C>.() -> Unit): Tag<CT>","description":"dev.fritz2.headless.components.TabGroup.TabList.tab","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/tab.html","searchKeys":["tab","fun <CT : HTMLElement> RenderContext.tab(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CT>>, initialize: TabGroup.TabList.Tab<CT, CL, C>.() -> Unit): Tag<CT>","dev.fritz2.headless.components.TabGroup.TabList.tab"]},{"name":"fun <CV : HTMLElement> RenderContext.checkboxGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","description":"dev.fritz2.headless.components.CheckboxGroup.checkboxGroupValidationMessages","location":"headless/dev.fritz2.headless.components/-checkbox-group/checkbox-group-validation-messages.html","searchKeys":["checkboxGroupValidationMessages","fun <CV : HTMLElement> RenderContext.checkboxGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","dev.fritz2.headless.components.CheckboxGroup.checkboxGroupValidationMessages"]},{"name":"fun <CV : HTMLElement> RenderContext.inputValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","description":"dev.fritz2.headless.components.InputField.inputValidationMessages","location":"headless/dev.fritz2.headless.components/-input-field/input-validation-messages.html","searchKeys":["inputValidationMessages","fun <CV : HTMLElement> RenderContext.inputValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","dev.fritz2.headless.components.InputField.inputValidationMessages"]},{"name":"fun <CV : HTMLElement> RenderContext.listboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.listboxValidationMessages","location":"headless/dev.fritz2.headless.components/-listbox/listbox-validation-messages.html","searchKeys":["listboxValidationMessages","fun <CV : HTMLElement> RenderContext.listboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","dev.fritz2.headless.components.Listbox.listboxValidationMessages"]},{"name":"fun <CV : HTMLElement> RenderContext.radioGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","description":"dev.fritz2.headless.components.RadioGroup.radioGroupValidationMessages","location":"headless/dev.fritz2.headless.components/-radio-group/radio-group-validation-messages.html","searchKeys":["radioGroupValidationMessages","fun <CV : HTMLElement> RenderContext.radioGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","dev.fritz2.headless.components.RadioGroup.radioGroupValidationMessages"]},{"name":"fun <CV : HTMLElement> RenderContext.switchValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","description":"dev.fritz2.headless.components.AbstractSwitch.switchValidationMessages","location":"headless/dev.fritz2.headless.components/-abstract-switch/switch-validation-messages.html","searchKeys":["switchValidationMessages","fun <CV : HTMLElement> RenderContext.switchValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","dev.fritz2.headless.components.AbstractSwitch.switchValidationMessages"]},{"name":"fun <CV : HTMLElement> RenderContext.textareaValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","description":"dev.fritz2.headless.components.TextArea.textareaValidationMessages","location":"headless/dev.fritz2.headless.components/-text-area/textarea-validation-messages.html","searchKeys":["textareaValidationMessages","fun <CV : HTMLElement> RenderContext.textareaValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<CV>>, initialize: ValidationMessages<CV>.() -> Unit)","dev.fritz2.headless.components.TextArea.textareaValidationMessages"]},{"name":"fun <E : HTMLElement, T> RenderContext.combobox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<E>>, initialize: Combobox<E, T>.() -> Unit): Tag<E>","description":"dev.fritz2.headless.components.combobox","location":"headless/dev.fritz2.headless.components/combobox.html","searchKeys":["combobox","fun <E : HTMLElement, T> RenderContext.combobox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<E>>, initialize: Combobox<E, T>.() -> Unit): Tag<E>","dev.fritz2.headless.components.combobox"]},{"name":"fun <E : HTMLElement> toast(containerName: String, duration: Long = 5000, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<E>>, initialize: Toast<E>.() -> Unit)","description":"dev.fritz2.headless.components.toast","location":"headless/dev.fritz2.headless.components/toast.html","searchKeys":["toast","fun <E : HTMLElement> toast(containerName: String, duration: Long = 5000, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<E>>, initialize: Toast<E>.() -> Unit)","dev.fritz2.headless.components.toast"]},{"name":"fun <E : HTMLElement> toastContainer(name: String, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<E>>)","description":"dev.fritz2.headless.components.toastContainer","location":"headless/dev.fritz2.headless.components/toast-container.html","searchKeys":["toastContainer","fun <E : HTMLElement> toastContainer(name: String, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<E>>)","dev.fritz2.headless.components.toastContainer"]},{"name":"fun <EI : HTMLElement> comboboxItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<EI>>, initialize: Combobox.ComboboxItems<EI, E, T>.() -> Unit)","description":"dev.fritz2.headless.components.Combobox.comboboxItems","location":"headless/dev.fritz2.headless.components/-combobox/combobox-items.html","searchKeys":["comboboxItems","fun <EI : HTMLElement> comboboxItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<EI>>, initialize: Combobox.ComboboxItems<EI, E, T>.() -> Unit)","dev.fritz2.headless.components.Combobox.comboboxItems"]},{"name":"fun <EJ : HTMLElement> RenderContext.comboboxItem(item: Combobox.Item<T>, classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<EJ>>, initialize: Combobox.ComboboxItems.ComboboxItem<EJ, EI, E, T>.() -> Unit): Tag<EJ>","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.comboboxItem","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/combobox-item.html","searchKeys":["comboboxItem","fun <EJ : HTMLElement> RenderContext.comboboxItem(item: Combobox.Item<T>, classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<EJ>>, initialize: Combobox.ComboboxItems.ComboboxItem<EJ, EI, E, T>.() -> Unit): Tag<EJ>","dev.fritz2.headless.components.Combobox.ComboboxItems.comboboxItem"]},{"name":"fun <ER : HTMLElement> RenderContext.comboboxPanelReference(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<ER>>, initialize: Tag<ER>.() -> Unit): Tag<ER>","description":"dev.fritz2.headless.components.Combobox.comboboxPanelReference","location":"headless/dev.fritz2.headless.components/-combobox/combobox-panel-reference.html","searchKeys":["comboboxPanelReference","fun <ER : HTMLElement> RenderContext.comboboxPanelReference(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<ER>>, initialize: Tag<ER>.() -> Unit): Tag<ER>","dev.fritz2.headless.components.Combobox.comboboxPanelReference"]},{"name":"fun <EV : HTMLElement> RenderContext.comboboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<EV>>, initialize: ValidationMessages<EV>.() -> Unit)","description":"dev.fritz2.headless.components.Combobox.comboboxValidationMessages","location":"headless/dev.fritz2.headless.components/-combobox/combobox-validation-messages.html","searchKeys":["comboboxValidationMessages","fun <EV : HTMLElement> RenderContext.comboboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<EV>>, initialize: ValidationMessages<EV>.() -> Unit)","dev.fritz2.headless.components.Combobox.comboboxValidationMessages"]},{"name":"fun <N : Element> Tag<N>.attrIfNotSet(name: String, value: String)","description":"dev.fritz2.headless.foundation.attrIfNotSet","location":"headless/dev.fritz2.headless.foundation/attr-if-not-set.html","searchKeys":["attrIfNotSet","fun <N : Element> Tag<N>.attrIfNotSet(name: String, value: String)","dev.fritz2.headless.foundation.attrIfNotSet"]},{"name":"fun <T, C : HTMLElement> RenderContext.dataCollection(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: DataCollection<T, C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.dataCollection","location":"headless/dev.fritz2.headless.components/data-collection.html","searchKeys":["dataCollection","fun <T, C : HTMLElement> RenderContext.dataCollection(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: DataCollection<T, C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.dataCollection"]},{"name":"fun <T, C : HTMLElement> RenderContext.listbox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Listbox<T, C>.() -> Unit): Tag<C>","description":"dev.fritz2.headless.components.listbox","location":"headless/dev.fritz2.headless.components/listbox.html","searchKeys":["listbox","fun <T, C : HTMLElement> RenderContext.listbox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, tag: TagFactory<Tag<C>>, initialize: Listbox<T, C>.() -> Unit): Tag<C>","dev.fritz2.headless.components.listbox"]},{"name":"fun <T> Inspector<T>.errorMessage(message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.errorMessage","location":"headless/dev.fritz2.headless.validation/error-message.html","searchKeys":["errorMessage","fun <T> Inspector<T>.errorMessage(message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.errorMessage"]},{"name":"fun <T> Inspector<T>.infoMessage(message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.infoMessage","location":"headless/dev.fritz2.headless.validation/info-message.html","searchKeys":["infoMessage","fun <T> Inspector<T>.infoMessage(message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.infoMessage"]},{"name":"fun <T> Inspector<T>.successMessage(message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.successMessage","location":"headless/dev.fritz2.headless.validation/success-message.html","searchKeys":["successMessage","fun <T> Inspector<T>.successMessage(message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.successMessage"]},{"name":"fun <T> Inspector<T>.warningMessage(message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.warningMessage","location":"headless/dev.fritz2.headless.validation/warning-message.html","searchKeys":["warningMessage","fun <T> Inspector<T>.warningMessage(message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.warningMessage"]},{"name":"fun <T> List<T>.rotateNext(element: T): T?","description":"dev.fritz2.headless.foundation.rotateNext","location":"headless/dev.fritz2.headless.foundation/rotate-next.html","searchKeys":["rotateNext","fun <T> List<T>.rotateNext(element: T): T?","dev.fritz2.headless.foundation.rotateNext"]},{"name":"fun <T> List<T>.rotatePrevious(element: T): T?","description":"dev.fritz2.headless.foundation.rotatePrevious","location":"headless/dev.fritz2.headless.foundation/rotate-previous.html","searchKeys":["rotatePrevious","fun <T> List<T>.rotatePrevious(element: T): T?","dev.fritz2.headless.foundation.rotatePrevious"]},{"name":"fun <T> RenderContext.checkboxGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: CheckboxGroup<HTMLDivElement, T>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.checkboxGroup","location":"headless/dev.fritz2.headless.components/checkbox-group.html","searchKeys":["checkboxGroup","fun <T> RenderContext.checkboxGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: CheckboxGroup<HTMLDivElement, T>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.checkboxGroup"]},{"name":"fun <T> RenderContext.combobox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox<HTMLDivElement, T>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.combobox","location":"headless/dev.fritz2.headless.components/combobox.html","searchKeys":["combobox","fun <T> RenderContext.combobox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox<HTMLDivElement, T>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.combobox"]},{"name":"fun <T> RenderContext.dataCollection(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: DataCollection<T, HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.dataCollection","location":"headless/dev.fritz2.headless.components/data-collection.html","searchKeys":["dataCollection","fun <T> RenderContext.dataCollection(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: DataCollection<T, HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.dataCollection"]},{"name":"fun <T> RenderContext.listbox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Listbox<T, HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.listbox","location":"headless/dev.fritz2.headless.components/listbox.html","searchKeys":["listbox","fun <T> RenderContext.listbox(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Listbox<T, HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.listbox"]},{"name":"fun <T> RenderContext.radioGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: RadioGroup<HTMLDivElement, T>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.radioGroup","location":"headless/dev.fritz2.headless.components/radio-group.html","searchKeys":["radioGroup","fun <T> RenderContext.radioGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: RadioGroup<HTMLDivElement, T>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.radioGroup"]},{"name":"fun <T> obj(apply: T.() -> Unit): T","description":"dev.fritz2.headless.foundation.utils.floatingui.obj","location":"headless/dev.fritz2.headless.foundation.utils.floatingui/obj.html","searchKeys":["obj","fun <T> obj(apply: T.() -> Unit): T","dev.fritz2.headless.foundation.utils.floatingui.obj"]},{"name":"fun Modal.modalPanel(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Modal.ModalPanel<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.Modal.modalPanel","location":"headless/dev.fritz2.headless.components/-modal/modal-panel.html","searchKeys":["modalPanel","fun Modal.modalPanel(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Modal.ModalPanel<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.Modal.modalPanel"]},{"name":"fun OpenClose.closeOnDismiss()","description":"dev.fritz2.headless.foundation.PopUpPanel.closeOnDismiss","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/close-on-dismiss.html","searchKeys":["closeOnDismiss","fun OpenClose.closeOnDismiss()","dev.fritz2.headless.foundation.PopUpPanel.closeOnDismiss"]},{"name":"fun RenderContext.checkboxGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.CheckboxGroup.checkboxGroupLabel","location":"headless/dev.fritz2.headless.components/-checkbox-group/checkbox-group-label.html","searchKeys":["checkboxGroupLabel","fun RenderContext.checkboxGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.CheckboxGroup.checkboxGroupLabel"]},{"name":"fun RenderContext.checkboxGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: CheckboxGroup.CheckboxGroupOption<HTMLDivElement, C, T>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.CheckboxGroup.checkboxGroupOption","location":"headless/dev.fritz2.headless.components/-checkbox-group/checkbox-group-option.html","searchKeys":["checkboxGroupOption","fun RenderContext.checkboxGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: CheckboxGroup.CheckboxGroupOption<HTMLDivElement, C, T>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.CheckboxGroup.checkboxGroupOption"]},{"name":"fun RenderContext.checkboxGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLSpanElement>.() -> Unit): Tag<HTMLSpanElement>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionDescription","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/checkbox-group-option-description.html","searchKeys":["checkboxGroupOptionDescription","fun RenderContext.checkboxGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLSpanElement>.() -> Unit): Tag<HTMLSpanElement>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionDescription"]},{"name":"fun RenderContext.checkboxGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionLabel","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/checkbox-group-option-label.html","searchKeys":["checkboxGroupOptionLabel","fun RenderContext.checkboxGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionLabel"]},{"name":"fun RenderContext.checkboxGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionToggle","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/checkbox-group-option-toggle.html","searchKeys":["checkboxGroupOptionToggle","fun RenderContext.checkboxGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.checkboxGroupOptionToggle"]},{"name":"fun RenderContext.checkboxGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.CheckboxGroup.checkboxGroupValidationMessages","location":"headless/dev.fritz2.headless.components/-checkbox-group/checkbox-group-validation-messages.html","searchKeys":["checkboxGroupValidationMessages","fun RenderContext.checkboxGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.CheckboxGroup.checkboxGroupValidationMessages"]},{"name":"fun RenderContext.comboboxInput(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox.ComboboxInput<E, T>.() -> Unit): Tag<HTMLInputElement>","description":"dev.fritz2.headless.components.Combobox.comboboxInput","location":"headless/dev.fritz2.headless.components/-combobox/combobox-input.html","searchKeys":["comboboxInput","fun RenderContext.comboboxInput(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox.ComboboxInput<E, T>.() -> Unit): Tag<HTMLInputElement>","dev.fritz2.headless.components.Combobox.comboboxInput"]},{"name":"fun RenderContext.comboboxItem(item: Combobox.Item<T>, classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox.ComboboxItems.ComboboxItem<HTMLDivElement, EI, E, T>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.comboboxItem","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/combobox-item.html","searchKeys":["comboboxItem","fun RenderContext.comboboxItem(item: Combobox.Item<T>, classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox.ComboboxItems.ComboboxItem<HTMLDivElement, EI, E, T>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.Combobox.ComboboxItems.comboboxItem"]},{"name":"fun RenderContext.comboboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.Combobox.comboboxLabel","location":"headless/dev.fritz2.headless.components/-combobox/combobox-label.html","searchKeys":["comboboxLabel","fun RenderContext.comboboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.Combobox.comboboxLabel"]},{"name":"fun RenderContext.comboboxPanelReference(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.Combobox.comboboxPanelReference","location":"headless/dev.fritz2.headless.components/-combobox/combobox-panel-reference.html","searchKeys":["comboboxPanelReference","fun RenderContext.comboboxPanelReference(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.Combobox.comboboxPanelReference"]},{"name":"fun RenderContext.comboboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.Combobox.comboboxValidationMessages","location":"headless/dev.fritz2.headless.components/-combobox/combobox-validation-messages.html","searchKeys":["comboboxValidationMessages","fun RenderContext.comboboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.Combobox.comboboxValidationMessages"]},{"name":"fun RenderContext.dataCollectionItem(item: T, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionItems.DataCollectionItem<HTMLDivElement, CI, T, C>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.dataCollectionItem","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/data-collection-item.html","searchKeys":["dataCollectionItem","fun RenderContext.dataCollectionItem(item: T, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionItems.DataCollectionItem<HTMLDivElement, CI, T, C>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.DataCollection.DataCollectionItems.dataCollectionItem"]},{"name":"fun RenderContext.dataCollectionItems(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionItems<HTMLDivElement, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.DataCollection.dataCollectionItems","location":"headless/dev.fritz2.headless.components/-data-collection/data-collection-items.html","searchKeys":["dataCollectionItems","fun RenderContext.dataCollectionItems(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionItems<HTMLDivElement, T, C>.() -> Unit)","dev.fritz2.headless.components.DataCollection.dataCollectionItems"]},{"name":"fun RenderContext.dataCollectionSortButton(comparatorAscending: Comparator<T>, comparatorDescending: Comparator<T>, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionSortButton<HTMLButtonElement, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.DataCollection.dataCollectionSortButton","location":"headless/dev.fritz2.headless.components/-data-collection/data-collection-sort-button.html","searchKeys":["dataCollectionSortButton","fun RenderContext.dataCollectionSortButton(comparatorAscending: Comparator<T>, comparatorDescending: Comparator<T>, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionSortButton<HTMLButtonElement, T, C>.() -> Unit)","dev.fritz2.headless.components.DataCollection.dataCollectionSortButton"]},{"name":"fun RenderContext.dataCollectionSortButton(sort: Sorting<T>, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionSortButton<HTMLButtonElement, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.DataCollection.dataCollectionSortButton","location":"headless/dev.fritz2.headless.components/-data-collection/data-collection-sort-button.html","searchKeys":["dataCollectionSortButton","fun RenderContext.dataCollectionSortButton(sort: Sorting<T>, classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: DataCollection.DataCollectionSortButton<HTMLButtonElement, T, C>.() -> Unit)","dev.fritz2.headless.components.DataCollection.dataCollectionSortButton"]},{"name":"fun RenderContext.disclosure(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Disclosure<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.disclosure","location":"headless/dev.fritz2.headless.components/disclosure.html","searchKeys":["disclosure","fun RenderContext.disclosure(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Disclosure<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.disclosure"]},{"name":"fun RenderContext.disclosureButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.Disclosure.disclosureButton","location":"headless/dev.fritz2.headless.components/-disclosure/disclosure-button.html","searchKeys":["disclosureButton","fun RenderContext.disclosureButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.Disclosure.disclosureButton"]},{"name":"fun RenderContext.disclosureCloseButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.Disclosure.DisclosurePanel.disclosureCloseButton","location":"headless/dev.fritz2.headless.components/-disclosure/-disclosure-panel/disclosure-close-button.html","searchKeys":["disclosureCloseButton","fun RenderContext.disclosureCloseButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.Disclosure.DisclosurePanel.disclosureCloseButton"]},{"name":"fun RenderContext.disclosurePanel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Disclosure.DisclosurePanel<HTMLDivElement, C>.() -> Unit)","description":"dev.fritz2.headless.components.Disclosure.disclosurePanel","location":"headless/dev.fritz2.headless.components/-disclosure/disclosure-panel.html","searchKeys":["disclosurePanel","fun RenderContext.disclosurePanel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Disclosure.DisclosurePanel<HTMLDivElement, C>.() -> Unit)","dev.fritz2.headless.components.Disclosure.disclosurePanel"]},{"name":"fun RenderContext.inputDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLParagraphElement>.() -> Unit): Tag<HTMLParagraphElement>","description":"dev.fritz2.headless.components.InputField.inputDescription","location":"headless/dev.fritz2.headless.components/-input-field/input-description.html","searchKeys":["inputDescription","fun RenderContext.inputDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLParagraphElement>.() -> Unit): Tag<HTMLParagraphElement>","dev.fritz2.headless.components.InputField.inputDescription"]},{"name":"fun RenderContext.inputField(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: InputField<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.inputField","location":"headless/dev.fritz2.headless.components/input-field.html","searchKeys":["inputField","fun RenderContext.inputField(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: InputField<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.inputField"]},{"name":"fun RenderContext.inputLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.InputField.inputLabel","location":"headless/dev.fritz2.headless.components/-input-field/input-label.html","searchKeys":["inputLabel","fun RenderContext.inputLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.InputField.inputLabel"]},{"name":"fun RenderContext.inputTextfield(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLInputElement>.() -> Unit): Tag<HTMLInputElement>","description":"dev.fritz2.headless.components.InputField.inputTextfield","location":"headless/dev.fritz2.headless.components/-input-field/input-textfield.html","searchKeys":["inputTextfield","fun RenderContext.inputTextfield(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLInputElement>.() -> Unit): Tag<HTMLInputElement>","dev.fritz2.headless.components.InputField.inputTextfield"]},{"name":"fun RenderContext.inputValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.InputField.inputValidationMessages","location":"headless/dev.fritz2.headless.components/-input-field/input-validation-messages.html","searchKeys":["inputValidationMessages","fun RenderContext.inputValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.InputField.inputValidationMessages"]},{"name":"fun RenderContext.listboxButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.Listbox.listboxButton","location":"headless/dev.fritz2.headless.components/-listbox/listbox-button.html","searchKeys":["listboxButton","fun RenderContext.listboxButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.Listbox.listboxButton"]},{"name":"fun RenderContext.listboxItem(entry: T, classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Listbox.ListboxItems.ListboxItem<HTMLButtonElement, CI, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.ListboxItems.listboxItem","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/listbox-item.html","searchKeys":["listboxItem","fun RenderContext.listboxItem(entry: T, classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Listbox.ListboxItems.ListboxItem<HTMLButtonElement, CI, T, C>.() -> Unit)","dev.fritz2.headless.components.Listbox.ListboxItems.listboxItem"]},{"name":"fun RenderContext.listboxItems(classes: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Listbox.ListboxItems<HTMLDivElement, T, C>.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.listboxItems","location":"headless/dev.fritz2.headless.components/-listbox/listbox-items.html","searchKeys":["listboxItems","fun RenderContext.listboxItems(classes: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Listbox.ListboxItems<HTMLDivElement, T, C>.() -> Unit)","dev.fritz2.headless.components.Listbox.listboxItems"]},{"name":"fun RenderContext.listboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.Listbox.listboxLabel","location":"headless/dev.fritz2.headless.components/-listbox/listbox-label.html","searchKeys":["listboxLabel","fun RenderContext.listboxLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.Listbox.listboxLabel"]},{"name":"fun RenderContext.listboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.Listbox.listboxValidationMessages","location":"headless/dev.fritz2.headless.components/-listbox/listbox-validation-messages.html","searchKeys":["listboxValidationMessages","fun RenderContext.listboxValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.Listbox.listboxValidationMessages"]},{"name":"fun RenderContext.menu(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Menu<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.menu","location":"headless/dev.fritz2.headless.components/menu.html","searchKeys":["menu","fun RenderContext.menu(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Menu<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.menu"]},{"name":"fun RenderContext.menuButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.Menu.menuButton","location":"headless/dev.fritz2.headless.components/-menu/menu-button.html","searchKeys":["menuButton","fun RenderContext.menuButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.Menu.menuButton"]},{"name":"fun RenderContext.menuItem(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Menu.MenuItems.MenuItem<HTMLButtonElement, CI, C>.() -> Unit)","description":"dev.fritz2.headless.components.Menu.MenuItems.menuItem","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/menu-item.html","searchKeys":["menuItem","fun RenderContext.menuItem(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Menu.MenuItems.MenuItem<HTMLButtonElement, CI, C>.() -> Unit)","dev.fritz2.headless.components.Menu.MenuItems.menuItem"]},{"name":"fun RenderContext.menuItems(classes: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Menu.MenuItems<HTMLDivElement, C>.() -> Unit)","description":"dev.fritz2.headless.components.Menu.menuItems","location":"headless/dev.fritz2.headless.components/-menu/menu-items.html","searchKeys":["menuItems","fun RenderContext.menuItems(classes: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Menu.MenuItems<HTMLDivElement, C>.() -> Unit)","dev.fritz2.headless.components.Menu.menuItems"]},{"name":"fun RenderContext.modalDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLParagraphElement>.() -> Unit): Tag<HTMLParagraphElement>","description":"dev.fritz2.headless.components.Modal.ModalPanel.modalDescription","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/modal-description.html","searchKeys":["modalDescription","fun RenderContext.modalDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLParagraphElement>.() -> Unit): Tag<HTMLParagraphElement>","dev.fritz2.headless.components.Modal.ModalPanel.modalDescription"]},{"name":"fun RenderContext.modalOverlay(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.Modal.ModalPanel.modalOverlay","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/modal-overlay.html","searchKeys":["modalOverlay","fun RenderContext.modalOverlay(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.Modal.ModalPanel.modalOverlay"]},{"name":"fun RenderContext.modalTitle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLHeadingElement>.() -> Unit): Tag<HTMLHeadingElement>","description":"dev.fritz2.headless.components.Modal.ModalPanel.modalTitle","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/modal-title.html","searchKeys":["modalTitle","fun RenderContext.modalTitle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLHeadingElement>.() -> Unit): Tag<HTMLHeadingElement>","dev.fritz2.headless.components.Modal.ModalPanel.modalTitle"]},{"name":"fun RenderContext.panel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.TabGroup.TabPanels.panel","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-panels/panel.html","searchKeys":["panel","fun RenderContext.panel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.TabGroup.TabPanels.panel"]},{"name":"fun RenderContext.popOver(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: PopOver<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.popOver","location":"headless/dev.fritz2.headless.components/pop-over.html","searchKeys":["popOver","fun RenderContext.popOver(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: PopOver<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.popOver"]},{"name":"fun RenderContext.popOverButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.PopOver.popOverButton","location":"headless/dev.fritz2.headless.components/-pop-over/pop-over-button.html","searchKeys":["popOverButton","fun RenderContext.popOverButton(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.PopOver.popOverButton"]},{"name":"fun RenderContext.popOverPanel(classes: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: PopOver.PopOverPanel<HTMLDivElement, C>.() -> Unit)","description":"dev.fritz2.headless.components.PopOver.popOverPanel","location":"headless/dev.fritz2.headless.components/-pop-over/pop-over-panel.html","searchKeys":["popOverPanel","fun RenderContext.popOverPanel(classes: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: PopOver.PopOverPanel<HTMLDivElement, C>.() -> Unit)","dev.fritz2.headless.components.PopOver.popOverPanel"]},{"name":"fun RenderContext.portal(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.(close: suspend (Unit) -> Unit) -> Unit)","description":"dev.fritz2.headless.foundation.portal","location":"headless/dev.fritz2.headless.foundation/portal.html","searchKeys":["portal","fun RenderContext.portal(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.(close: suspend (Unit) -> Unit) -> Unit)","dev.fritz2.headless.foundation.portal"]},{"name":"fun RenderContext.portalRoot(scopeContext: ScopeContext.() -> Unit = {}): RenderContext","description":"dev.fritz2.headless.foundation.portalRoot","location":"headless/dev.fritz2.headless.foundation/portal-root.html","searchKeys":["portalRoot","fun RenderContext.portalRoot(scopeContext: ScopeContext.() -> Unit = {}): RenderContext","dev.fritz2.headless.foundation.portalRoot"]},{"name":"fun RenderContext.radioGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.RadioGroup.radioGroupLabel","location":"headless/dev.fritz2.headless.components/-radio-group/radio-group-label.html","searchKeys":["radioGroupLabel","fun RenderContext.radioGroupLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.RadioGroup.radioGroupLabel"]},{"name":"fun RenderContext.radioGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: RadioGroup.RadioGroupOption<HTMLDivElement, C, T>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.RadioGroup.radioGroupOption","location":"headless/dev.fritz2.headless.components/-radio-group/radio-group-option.html","searchKeys":["radioGroupOption","fun RenderContext.radioGroupOption(option: T, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: RadioGroup.RadioGroupOption<HTMLDivElement, C, T>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.RadioGroup.radioGroupOption"]},{"name":"fun RenderContext.radioGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLSpanElement>.() -> Unit): Tag<HTMLSpanElement>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionDescription","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/radio-group-option-description.html","searchKeys":["radioGroupOptionDescription","fun RenderContext.radioGroupOptionDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLSpanElement>.() -> Unit): Tag<HTMLSpanElement>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionDescription"]},{"name":"fun RenderContext.radioGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionLabel","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/radio-group-option-label.html","searchKeys":["radioGroupOptionLabel","fun RenderContext.radioGroupOptionLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionLabel"]},{"name":"fun RenderContext.radioGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionToggle","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/radio-group-option-toggle.html","searchKeys":["radioGroupOptionToggle","fun RenderContext.radioGroupOptionToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.radioGroupOptionToggle"]},{"name":"fun RenderContext.radioGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.RadioGroup.radioGroupValidationMessages","location":"headless/dev.fritz2.headless.components/-radio-group/radio-group-validation-messages.html","searchKeys":["radioGroupValidationMessages","fun RenderContext.radioGroupValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.RadioGroup.radioGroupValidationMessages"]},{"name":"fun RenderContext.switch(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Switch<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.switch","location":"headless/dev.fritz2.headless.components/switch.html","searchKeys":["switch","fun RenderContext.switch(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Switch<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.switch"]},{"name":"fun RenderContext.switchDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLSpanElement>.() -> Unit): Tag<HTMLSpanElement>","description":"dev.fritz2.headless.components.SwitchWithLabel.switchDescription","location":"headless/dev.fritz2.headless.components/-switch-with-label/switch-description.html","searchKeys":["switchDescription","fun RenderContext.switchDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLSpanElement>.() -> Unit): Tag<HTMLSpanElement>","dev.fritz2.headless.components.SwitchWithLabel.switchDescription"]},{"name":"fun RenderContext.switchLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.SwitchWithLabel.switchLabel","location":"headless/dev.fritz2.headless.components/-switch-with-label/switch-label.html","searchKeys":["switchLabel","fun RenderContext.switchLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.SwitchWithLabel.switchLabel"]},{"name":"fun RenderContext.switchToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.SwitchWithLabel.switchToggle","location":"headless/dev.fritz2.headless.components/-switch-with-label/switch-toggle.html","searchKeys":["switchToggle","fun RenderContext.switchToggle(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLButtonElement>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.SwitchWithLabel.switchToggle"]},{"name":"fun RenderContext.switchValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.AbstractSwitch.switchValidationMessages","location":"headless/dev.fritz2.headless.components/-abstract-switch/switch-validation-messages.html","searchKeys":["switchValidationMessages","fun RenderContext.switchValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.AbstractSwitch.switchValidationMessages"]},{"name":"fun RenderContext.switchWithLabel(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: SwitchWithLabel<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.switchWithLabel","location":"headless/dev.fritz2.headless.components/switch-with-label.html","searchKeys":["switchWithLabel","fun RenderContext.switchWithLabel(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: SwitchWithLabel<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.switchWithLabel"]},{"name":"fun RenderContext.tab(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup.TabList.Tab<HTMLButtonElement, CL, C>.() -> Unit): Tag<HTMLButtonElement>","description":"dev.fritz2.headless.components.TabGroup.TabList.tab","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/tab.html","searchKeys":["tab","fun RenderContext.tab(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup.TabList.Tab<HTMLButtonElement, CL, C>.() -> Unit): Tag<HTMLButtonElement>","dev.fritz2.headless.components.TabGroup.TabList.tab"]},{"name":"fun RenderContext.tabGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.tabGroup","location":"headless/dev.fritz2.headless.components/tab-group.html","searchKeys":["tabGroup","fun RenderContext.tabGroup(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.tabGroup"]},{"name":"fun RenderContext.tabList(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup.TabList<HTMLDivElement, C>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.TabGroup.tabList","location":"headless/dev.fritz2.headless.components/-tab-group/tab-list.html","searchKeys":["tabList","fun RenderContext.tabList(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup.TabList<HTMLDivElement, C>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.TabGroup.tabList"]},{"name":"fun RenderContext.tabPanels(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup.TabPanels<HTMLDivElement, C>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.TabGroup.tabPanels","location":"headless/dev.fritz2.headless.components/-tab-group/tab-panels.html","searchKeys":["tabPanels","fun RenderContext.tabPanels(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TabGroup.TabPanels<HTMLDivElement, C>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.TabGroup.tabPanels"]},{"name":"fun RenderContext.textArea(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TextArea<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","description":"dev.fritz2.headless.components.textArea","location":"headless/dev.fritz2.headless.components/text-area.html","searchKeys":["textArea","fun RenderContext.textArea(classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: TextArea<HTMLDivElement>.() -> Unit): Tag<HTMLDivElement>","dev.fritz2.headless.components.textArea"]},{"name":"fun RenderContext.textareaDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLParagraphElement>.() -> Unit): Tag<HTMLParagraphElement>","description":"dev.fritz2.headless.components.TextArea.textareaDescription","location":"headless/dev.fritz2.headless.components/-text-area/textarea-description.html","searchKeys":["textareaDescription","fun RenderContext.textareaDescription(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLParagraphElement>.() -> Unit): Tag<HTMLParagraphElement>","dev.fritz2.headless.components.TextArea.textareaDescription"]},{"name":"fun RenderContext.textareaLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","description":"dev.fritz2.headless.components.TextArea.textareaLabel","location":"headless/dev.fritz2.headless.components/-text-area/textarea-label.html","searchKeys":["textareaLabel","fun RenderContext.textareaLabel(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: Tag<HTMLLabelElement>.() -> Unit): Tag<HTMLLabelElement>","dev.fritz2.headless.components.TextArea.textareaLabel"]},{"name":"fun RenderContext.textareaTextfield(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTextAreaElement>.() -> Unit): Tag<HTMLTextAreaElement>","description":"dev.fritz2.headless.components.TextArea.textareaTextfield","location":"headless/dev.fritz2.headless.components/-text-area/textarea-textfield.html","searchKeys":["textareaTextfield","fun RenderContext.textareaTextfield(classes: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTextAreaElement>.() -> Unit): Tag<HTMLTextAreaElement>","dev.fritz2.headless.components.TextArea.textareaTextfield"]},{"name":"fun RenderContext.textareaValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.TextArea.textareaValidationMessages","location":"headless/dev.fritz2.headless.components/-text-area/textarea-validation-messages.html","searchKeys":["textareaValidationMessages","fun RenderContext.textareaValidationMessages(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: ValidationMessages<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.TextArea.textareaValidationMessages"]},{"name":"fun ScrollIntoViewOptionsInit(behavior: ScrollBehavior? = null, mode: ScrollMode? = null, block: ScrollPosition? = null, inline: ScrollPosition? = null): ScrollIntoViewOptions","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptionsInit","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-into-view-options-init.html","searchKeys":["ScrollIntoViewOptionsInit","fun ScrollIntoViewOptionsInit(behavior: ScrollBehavior? = null, mode: ScrollMode? = null, block: ScrollPosition? = null, inline: ScrollPosition? = null): ScrollIntoViewOptions","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptionsInit"]},{"name":"fun Tag<HTMLElement>.setInitialFocus()","description":"dev.fritz2.headless.foundation.setInitialFocus","location":"headless/dev.fritz2.headless.foundation/set-initial-focus.html","searchKeys":["setInitialFocus","fun Tag<HTMLElement>.setInitialFocus()","dev.fritz2.headless.foundation.setInitialFocus"]},{"name":"fun Tag<HTMLElement>.tooltip(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Tooltip<HTMLDivElement>.() -> Unit)","description":"dev.fritz2.headless.components.tooltip","location":"headless/dev.fritz2.headless.components/tooltip.html","searchKeys":["tooltip","fun Tag<HTMLElement>.tooltip(classes: String? = null, id: String? = null, internalScope: ScopeContext.() -> Unit = {}, initialize: Tooltip<HTMLDivElement>.() -> Unit)","dev.fritz2.headless.components.tooltip"]},{"name":"fun Tag<HTMLElement>.trapFocusInMountpoint(restoreFocus: Boolean = true, setInitialFocus: InitialFocus = TryToSet)","description":"dev.fritz2.headless.foundation.trapFocusInMountpoint","location":"headless/dev.fritz2.headless.foundation/trap-focus-in-mountpoint.html","searchKeys":["trapFocusInMountpoint","fun Tag<HTMLElement>.trapFocusInMountpoint(restoreFocus: Boolean = true, setInitialFocus: InitialFocus = TryToSet)","dev.fritz2.headless.foundation.trapFocusInMountpoint"]},{"name":"fun Tag<HTMLElement>.trapFocusWhenever(condition: Flow<Boolean>, restoreFocus: Boolean = true, setInitialFocus: InitialFocus = TryToSet)","description":"dev.fritz2.headless.foundation.trapFocusWhenever","location":"headless/dev.fritz2.headless.foundation/trap-focus-whenever.html","searchKeys":["trapFocusWhenever","fun Tag<HTMLElement>.trapFocusWhenever(condition: Flow<Boolean>, restoreFocus: Boolean = true, setInitialFocus: InitialFocus = TryToSet)","dev.fritz2.headless.foundation.trapFocusWhenever"]},{"name":"fun addComponentStructureInfo(comment: String, scope: Scope, context: RenderContext): Unit?","description":"dev.fritz2.headless.foundation.addComponentStructureInfo","location":"headless/dev.fritz2.headless.foundation/add-component-structure-info.html","searchKeys":["addComponentStructureInfo","fun addComponentStructureInfo(comment: String, scope: Scope, context: RenderContext): Unit?","dev.fritz2.headless.foundation.addComponentStructureInfo"]},{"name":"fun addMiddleware(middleware: Middleware)","description":"dev.fritz2.headless.foundation.PopUpPanel.addMiddleware","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/add-middleware.html","searchKeys":["addMiddleware","fun addMiddleware(middleware: Middleware)","dev.fritz2.headless.foundation.PopUpPanel.addMiddleware"]},{"name":"fun also(expr: R.() -> Unit)","description":"dev.fritz2.headless.foundation.Hook.also","location":"headless/dev.fritz2.headless.foundation/-hook/also.html","searchKeys":["also","fun also(expr: R.() -> Unit)","dev.fritz2.headless.foundation.Hook.also"]},{"name":"fun arrow(init: ArrowOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.arrow","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/arrow.html","searchKeys":["arrow","fun arrow(init: ArrowOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.arrow"]},{"name":"fun arrow(size: String = \"popup-arrow-default\", offset: Int = 5)","description":"dev.fritz2.headless.foundation.PopUpPanel.arrow","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/arrow.html","searchKeys":["arrow","fun arrow(size: String = \"popup-arrow-default\", offset: Int = 5)","dev.fritz2.headless.foundation.PopUpPanel.arrow"]},{"name":"fun autoPlacement(init: AutoPlacementOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.autoPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/auto-placement.html","searchKeys":["autoPlacement","fun autoPlacement(init: AutoPlacementOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.autoPlacement"]},{"name":"fun autoSelectMatch()","description":"dev.fritz2.headless.components.Combobox.SelectionStrategyProperty.autoSelectMatch","location":"headless/dev.fritz2.headless.components/-combobox/-selection-strategy-property/auto-select-match.html","searchKeys":["autoSelectMatch","fun autoSelectMatch()","dev.fritz2.headless.components.Combobox.SelectionStrategyProperty.autoSelectMatch"]},{"name":"fun comboboxItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox.ComboboxItems<HTMLDivElement, E, T>.() -> Unit)","description":"dev.fritz2.headless.components.Combobox.comboboxItems","location":"headless/dev.fritz2.headless.components/-combobox/combobox-items.html","searchKeys":["comboboxItems","fun comboboxItems(classes: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Combobox.ComboboxItems<HTMLDivElement, E, T>.() -> Unit)","dev.fritz2.headless.components.Combobox.comboboxItems"]},{"name":"fun default()","description":"dev.fritz2.headless.components.Combobox.FilterFunctionProperty.default","location":"headless/dev.fritz2.headless.components/-combobox/-filter-function-property/default.html","searchKeys":["default","fun default()","dev.fritz2.headless.components.Combobox.FilterFunctionProperty.default"]},{"name":"fun eagerly()","description":"dev.fritz2.headless.components.Combobox.DropdownOpeningHook.eagerly","location":"headless/dev.fritz2.headless.components/-combobox/-dropdown-opening-hook/eagerly.html","searchKeys":["eagerly","fun eagerly()","dev.fritz2.headless.components.Combobox.DropdownOpeningHook.eagerly"]},{"name":"fun errorMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.errorMessage","location":"headless/dev.fritz2.headless.validation/error-message.html","searchKeys":["errorMessage","fun errorMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.errorMessage"]},{"name":"fun filterByText(toString: (T) -> String = { it.toString() }): SimpleHandler<String>","description":"dev.fritz2.headless.components.DataCollection.filterByText","location":"headless/dev.fritz2.headless.components/-data-collection/filter-by-text.html","searchKeys":["filterByText","fun filterByText(toString: (T) -> String = { it.toString() }): SimpleHandler<String>","dev.fritz2.headless.components.DataCollection.filterByText"]},{"name":"fun flip(init: FlipOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.flip","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/flip.html","searchKeys":["flip","fun flip(init: FlipOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.flip"]},{"name":"fun focusIn(container: HTMLElement, focusOptions: FocusOptions): FocusResult","description":"dev.fritz2.headless.foundation.focusIn","location":"headless/dev.fritz2.headless.foundation/focus-in.html","searchKeys":["focusIn","fun focusIn(container: HTMLElement, focusOptions: FocusOptions): FocusResult","dev.fritz2.headless.foundation.focusIn"]},{"name":"fun getFocusableElements(container: HTMLElement? = document.body): List<HTMLElement>","description":"dev.fritz2.headless.foundation.getFocusableElements","location":"headless/dev.fritz2.headless.foundation/get-focusable-elements.html","searchKeys":["getFocusableElements","fun getFocusableElements(container: HTMLElement? = document.body): List<HTMLElement>","dev.fritz2.headless.foundation.getFocusableElements"]},{"name":"fun hide(init: HideOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.hide","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/hide.html","searchKeys":["hide","fun hide(init: HideOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.hide"]},{"name":"fun infoMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.infoMessage","location":"headless/dev.fritz2.headless.validation/info-message.html","searchKeys":["infoMessage","fun infoMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.infoMessage"]},{"name":"fun init()","description":"dev.fritz2.headless.components.Modal.init","location":"headless/dev.fritz2.headless.components/-modal/init.html","searchKeys":["init","fun init()","dev.fritz2.headless.components.Modal.init"]},{"name":"fun inline(init: InlineOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.inline","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/inline.html","searchKeys":["inline","fun inline(init: InlineOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.inline"]},{"name":"fun isElementWithinFocusableElements(element: HTMLElement, container: HTMLElement? = document.body): Boolean","description":"dev.fritz2.headless.foundation.isElementWithinFocusableElements","location":"headless/dev.fritz2.headless.foundation/is-element-within-focusable-elements.html","searchKeys":["isElementWithinFocusableElements","fun isElementWithinFocusableElements(element: HTMLElement, container: HTMLElement? = document.body): Boolean","dev.fritz2.headless.foundation.isElementWithinFocusableElements"]},{"name":"fun lazily()","description":"dev.fritz2.headless.components.Combobox.DropdownOpeningHook.lazily","location":"headless/dev.fritz2.headless.components/-combobox/-dropdown-opening-hook/lazily.html","searchKeys":["lazily","fun lazily()","dev.fritz2.headless.components.Combobox.DropdownOpeningHook.lazily"]},{"name":"fun limitShift(init: LimitShiftOptions.() -> Unit): ShiftOptionsLimiter","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.limitShift","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/limit-shift.html","searchKeys":["limitShift","fun limitShift(init: LimitShiftOptions.() -> Unit): ShiftOptionsLimiter","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.limitShift"]},{"name":"fun manual()","description":"dev.fritz2.headless.components.Combobox.SelectionStrategyProperty.manual","location":"headless/dev.fritz2.headless.components/-combobox/-selection-strategy-property/manual.html","searchKeys":["manual","fun manual()","dev.fritz2.headless.components.Combobox.SelectionStrategyProperty.manual"]},{"name":"fun modal(id: String? = null, initialize: Modal.() -> Unit)","description":"dev.fritz2.headless.components.modal","location":"headless/dev.fritz2.headless.components/modal.html","searchKeys":["modal","fun modal(id: String? = null, initialize: Modal.() -> Unit)","dev.fritz2.headless.components.modal"]},{"name":"fun offset(init: OffsetOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.offset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/offset.html","searchKeys":["offset","fun offset(init: OffsetOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.offset"]},{"name":"fun offset(mainAxis: Number): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.offset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/offset.html","searchKeys":["offset","fun offset(mainAxis: Number): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.offset"]},{"name":"fun onDismiss(action: () -> Unit)","description":"dev.fritz2.headless.foundation.PopUpPanel.onDismiss","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/on-dismiss.html","searchKeys":["onDismiss","fun onDismiss(action: () -> Unit)","dev.fritz2.headless.foundation.PopUpPanel.onDismiss"]},{"name":"fun rect(rect: Rect): RootBoundary","description":"dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues.rect","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-root-boundary-values/rect.html","searchKeys":["rect","fun rect(rect: Rect): RootBoundary","dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues.rect"]},{"name":"fun render()","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.render","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.CheckboxGroup.render","location":"headless/dev.fritz2.headless.components/-checkbox-group/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.CheckboxGroup.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Combobox.ComboboxInput.render","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-input/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Combobox.ComboboxInput.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Combobox.render","location":"headless/dev.fritz2.headless.components/-combobox/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Combobox.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.render","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-item/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.render","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.DataCollection.DataCollectionItems.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.render","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-sort-button/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.DataCollection.render","location":"headless/dev.fritz2.headless.components/-data-collection/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.DataCollection.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Disclosure.render","location":"headless/dev.fritz2.headless.components/-disclosure/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Disclosure.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.render","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Listbox.render","location":"headless/dev.fritz2.headless.components/-listbox/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Listbox.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.render","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Menu.render","location":"headless/dev.fritz2.headless.components/-menu/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Menu.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Modal.ModalPanel.render","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Modal.ModalPanel.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.PopOver.render","location":"headless/dev.fritz2.headless.components/-pop-over/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.PopOver.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.render","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.RadioGroup.render","location":"headless/dev.fritz2.headless.components/-radio-group/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.RadioGroup.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab.render","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.TabGroup.TabList.Tab.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.TabGroup.TabList.render","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.TabGroup.TabList.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.TabGroup.TabPanels.render","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-panels/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.TabGroup.TabPanels.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.TabGroup.render","location":"headless/dev.fritz2.headless.components/-tab-group/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.TabGroup.render"]},{"name":"fun render()","description":"dev.fritz2.headless.components.Textfield.render","location":"headless/dev.fritz2.headless.components/-textfield/render.html","searchKeys":["render","fun render()","dev.fritz2.headless.components.Textfield.render"]},{"name":"fun sanitizeSelection(availableItems: Flow<List<T>>, data: CollectionData<T>)","description":"dev.fritz2.headless.components.SelectionMode.sanitizeSelection","location":"headless/dev.fritz2.headless.components/-selection-mode/sanitize-selection.html","searchKeys":["sanitizeSelection","fun sanitizeSelection(availableItems: Flow<List<T>>, data: CollectionData<T>)","dev.fritz2.headless.components.SelectionMode.sanitizeSelection"]},{"name":"fun selectItem(itemToSelect: Flow<T>, data: CollectionData<T>)","description":"dev.fritz2.headless.components.SelectionMode.selectItem","location":"headless/dev.fritz2.headless.components/-selection-mode/select-item.html","searchKeys":["selectItem","fun selectItem(itemToSelect: Flow<T>, data: CollectionData<T>)","dev.fritz2.headless.components.SelectionMode.selectItem"]},{"name":"fun setInitialFocus(tag: HTMLElement)","description":"dev.fritz2.headless.foundation.setInitialFocus","location":"headless/dev.fritz2.headless.foundation/set-initial-focus.html","searchKeys":["setInitialFocus","fun setInitialFocus(tag: HTMLElement)","dev.fritz2.headless.foundation.setInitialFocus"]},{"name":"fun shift(init: ShiftOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.shift","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/shift.html","searchKeys":["shift","fun shift(init: ShiftOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.shift"]},{"name":"fun size(init: SizeOptions.() -> Unit): Middleware","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.size","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/size.html","searchKeys":["size","fun size(init: SizeOptions.() -> Unit): Middleware","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.size"]},{"name":"fun sortingDirection(s: Sorting<T>): Flow<SortDirection>","description":"dev.fritz2.headless.components.DataCollection.sortingDirection","location":"headless/dev.fritz2.headless.components/-data-collection/sorting-direction.html","searchKeys":["sortingDirection","fun sortingDirection(s: Sorting<T>): Flow<SortDirection>","dev.fritz2.headless.components.DataCollection.sortingDirection"]},{"name":"fun successMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.successMessage","location":"headless/dev.fritz2.headless.validation/success-message.html","searchKeys":["successMessage","fun successMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.successMessage"]},{"name":"fun toast(containerName: String, duration: Long = 5000, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Toast<HTMLLIElement>.() -> Unit)","description":"dev.fritz2.headless.components.toast","location":"headless/dev.fritz2.headless.components/toast.html","searchKeys":["toast","fun toast(containerName: String, duration: Long = 5000, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, initialize: Toast<HTMLLIElement>.() -> Unit)","dev.fritz2.headless.components.toast"]},{"name":"fun toastContainer(name: String, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {})","description":"dev.fritz2.headless.components.toastContainer","location":"headless/dev.fritz2.headless.components/toast-container.html","searchKeys":["toastContainer","fun toastContainer(name: String, classes: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {})","dev.fritz2.headless.components.toastContainer"]},{"name":"fun use(item: T)","description":"dev.fritz2.headless.foundation.Property.use","location":"headless/dev.fritz2.headless.foundation/-property/use.html","searchKeys":["use","fun use(item: T)","dev.fritz2.headless.foundation.Property.use"]},{"name":"fun use(other: SelectionMode<T>)","description":"dev.fritz2.headless.components.SelectionMode.use","location":"headless/dev.fritz2.headless.components/-selection-mode/use.html","searchKeys":["use","fun use(other: SelectionMode<T>)","dev.fritz2.headless.components.SelectionMode.use"]},{"name":"fun valueOf(value: String): Direction","description":"dev.fritz2.headless.foundation.Direction.valueOf","location":"headless/dev.fritz2.headless.foundation/-direction/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Direction","dev.fritz2.headless.foundation.Direction.valueOf"]},{"name":"fun valueOf(value: String): FocusResult","description":"dev.fritz2.headless.foundation.FocusResult.valueOf","location":"headless/dev.fritz2.headless.foundation/-focus-result/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FocusResult","dev.fritz2.headless.foundation.FocusResult.valueOf"]},{"name":"fun valueOf(value: String): InitialFocus","description":"dev.fritz2.headless.foundation.InitialFocus.valueOf","location":"headless/dev.fritz2.headless.foundation/-initial-focus/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): InitialFocus","dev.fritz2.headless.foundation.InitialFocus.valueOf"]},{"name":"fun valueOf(value: String): Orientation","description":"dev.fritz2.headless.foundation.Orientation.valueOf","location":"headless/dev.fritz2.headless.foundation/-orientation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Orientation","dev.fritz2.headless.foundation.Orientation.valueOf"]},{"name":"fun valueOf(value: String): PopUpPanelSize","description":"dev.fritz2.headless.foundation.PopUpPanelSize.valueOf","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PopUpPanelSize","dev.fritz2.headless.foundation.PopUpPanelSize.valueOf"]},{"name":"fun valueOf(value: String): ScrollBehavior","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.valueOf","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-behavior/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ScrollBehavior","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.valueOf"]},{"name":"fun valueOf(value: String): ScrollMode","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.valueOf","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ScrollMode","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.valueOf"]},{"name":"fun valueOf(value: String): ScrollPosition","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.valueOf","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ScrollPosition","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.valueOf"]},{"name":"fun valueOf(value: String): Severity","description":"dev.fritz2.headless.validation.Severity.valueOf","location":"headless/dev.fritz2.headless.validation/-severity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Severity","dev.fritz2.headless.validation.Severity.valueOf"]},{"name":"fun valueOf(value: String): SortDirection","description":"dev.fritz2.headless.foundation.SortDirection.valueOf","location":"headless/dev.fritz2.headless.foundation/-sort-direction/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SortDirection","dev.fritz2.headless.foundation.SortDirection.valueOf"]},{"name":"fun values(): Array<Direction>","description":"dev.fritz2.headless.foundation.Direction.values","location":"headless/dev.fritz2.headless.foundation/-direction/values.html","searchKeys":["values","fun values(): Array<Direction>","dev.fritz2.headless.foundation.Direction.values"]},{"name":"fun values(): Array<FocusResult>","description":"dev.fritz2.headless.foundation.FocusResult.values","location":"headless/dev.fritz2.headless.foundation/-focus-result/values.html","searchKeys":["values","fun values(): Array<FocusResult>","dev.fritz2.headless.foundation.FocusResult.values"]},{"name":"fun values(): Array<InitialFocus>","description":"dev.fritz2.headless.foundation.InitialFocus.values","location":"headless/dev.fritz2.headless.foundation/-initial-focus/values.html","searchKeys":["values","fun values(): Array<InitialFocus>","dev.fritz2.headless.foundation.InitialFocus.values"]},{"name":"fun values(): Array<Orientation>","description":"dev.fritz2.headless.foundation.Orientation.values","location":"headless/dev.fritz2.headless.foundation/-orientation/values.html","searchKeys":["values","fun values(): Array<Orientation>","dev.fritz2.headless.foundation.Orientation.values"]},{"name":"fun values(): Array<PopUpPanelSize>","description":"dev.fritz2.headless.foundation.PopUpPanelSize.values","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/values.html","searchKeys":["values","fun values(): Array<PopUpPanelSize>","dev.fritz2.headless.foundation.PopUpPanelSize.values"]},{"name":"fun values(): Array<ScrollBehavior>","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.values","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-behavior/values.html","searchKeys":["values","fun values(): Array<ScrollBehavior>","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.values"]},{"name":"fun values(): Array<ScrollMode>","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.values","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/values.html","searchKeys":["values","fun values(): Array<ScrollMode>","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.values"]},{"name":"fun values(): Array<ScrollPosition>","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.values","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/values.html","searchKeys":["values","fun values(): Array<ScrollPosition>","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.values"]},{"name":"fun values(): Array<Severity>","description":"dev.fritz2.headless.validation.Severity.values","location":"headless/dev.fritz2.headless.validation/-severity/values.html","searchKeys":["values","fun values(): Array<Severity>","dev.fritz2.headless.validation.Severity.values"]},{"name":"fun values(): Array<SortDirection>","description":"dev.fritz2.headless.foundation.SortDirection.values","location":"headless/dev.fritz2.headless.foundation/-sort-direction/values.html","searchKeys":["values","fun values(): Array<SortDirection>","dev.fritz2.headless.foundation.SortDirection.values"]},{"name":"fun warningMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","description":"dev.fritz2.headless.validation.warningMessage","location":"headless/dev.fritz2.headless.validation/warning-message.html","searchKeys":["warningMessage","fun warningMessage(path: String, message: String, details: String? = null): ComponentValidationMessage","dev.fritz2.headless.validation.warningMessage"]},{"name":"ifNeeded","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.ifNeeded","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/if-needed/index.html","searchKeys":["ifNeeded","ifNeeded","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.ifNeeded"]},{"name":"inner class CheckboxGroupOption<CO : HTMLElement>(tag: Tag<CO>, option: T, val optionId: String) : Tag<CO> ","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/index.html","searchKeys":["CheckboxGroupOption","inner class CheckboxGroupOption<CO : HTMLElement>(tag: Tag<CO>, option: T, val optionId: String) : Tag<CO> ","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption"]},{"name":"inner class ComboboxInput(tag: Tag<HTMLInputElement>) : Tag<HTMLInputElement> ","description":"dev.fritz2.headless.components.Combobox.ComboboxInput","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-input/index.html","searchKeys":["ComboboxInput","inner class ComboboxInput(tag: Tag<HTMLInputElement>) : Tag<HTMLInputElement> ","dev.fritz2.headless.components.Combobox.ComboboxInput"]},{"name":"inner class ComboboxItem<EJ : HTMLElement>(tag: Tag<EJ>, val active: Flow<Boolean>, val selected: Flow<Boolean>) : Tag<EJ> ","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/-combobox-item/index.html","searchKeys":["ComboboxItem","inner class ComboboxItem<EJ : HTMLElement>(tag: Tag<EJ>, val active: Flow<Boolean>, val selected: Flow<Boolean>) : Tag<EJ> ","dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem"]},{"name":"inner class ComboboxItems<EI : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<EI>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<EI> ","description":"dev.fritz2.headless.components.Combobox.ComboboxItems","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/index.html","searchKeys":["ComboboxItems","inner class ComboboxItems<EI : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<EI>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<EI> ","dev.fritz2.headless.components.Combobox.ComboboxItems"]},{"name":"inner class DataCollectionItem<CI : HTMLElement>(item: T, val collectionItemId: String?, tag: Tag<CI>) : Tag<CI> ","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-item/index.html","searchKeys":["DataCollectionItem","inner class DataCollectionItem<CI : HTMLElement>(item: T, val collectionItemId: String?, tag: Tag<CI>) : Tag<CI> ","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem"]},{"name":"inner class DataCollectionItems<CI : HTMLElement>(tag: Tag<CI>, val collectionId: String?) : Tag<CI> ","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/index.html","searchKeys":["DataCollectionItems","inner class DataCollectionItems<CI : HTMLElement>(tag: Tag<CI>, val collectionId: String?) : Tag<CI> ","dev.fritz2.headless.components.DataCollection.DataCollectionItems"]},{"name":"inner class DataCollectionSortButton<CS : HTMLElement>(val sorting: Sorting<T>, tag: Tag<CS>) : Tag<CS> ","description":"dev.fritz2.headless.components.DataCollection.DataCollectionSortButton","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-sort-button/index.html","searchKeys":["DataCollectionSortButton","inner class DataCollectionSortButton<CS : HTMLElement>(val sorting: Sorting<T>, tag: Tag<CS>) : Tag<CS> ","dev.fritz2.headless.components.DataCollection.DataCollectionSortButton"]},{"name":"inner class DisclosurePanel<CP : HTMLElement>(tag: Tag<CP>) : Tag<CP> ","description":"dev.fritz2.headless.components.Disclosure.DisclosurePanel","location":"headless/dev.fritz2.headless.components/-disclosure/-disclosure-panel/index.html","searchKeys":["DisclosurePanel","inner class DisclosurePanel<CP : HTMLElement>(tag: Tag<CP>) : Tag<CP> ","dev.fritz2.headless.components.Disclosure.DisclosurePanel"]},{"name":"inner class DropdownOpeningHook : Hook<Tag<HTMLInputElement>, Unit, Unit> ","description":"dev.fritz2.headless.components.Combobox.DropdownOpeningHook","location":"headless/dev.fritz2.headless.components/-combobox/-dropdown-opening-hook/index.html","searchKeys":["DropdownOpeningHook","inner class DropdownOpeningHook : Hook<Tag<HTMLInputElement>, Unit, Unit> ","dev.fritz2.headless.components.Combobox.DropdownOpeningHook"]},{"name":"inner class FilterFunctionProperty : Property<(Sequence<T>, String) -> Sequence<T>> ","description":"dev.fritz2.headless.components.Combobox.FilterFunctionProperty","location":"headless/dev.fritz2.headless.components/-combobox/-filter-function-property/index.html","searchKeys":["FilterFunctionProperty","inner class FilterFunctionProperty : Property<(Sequence<T>, String) -> Sequence<T>> ","dev.fritz2.headless.components.Combobox.FilterFunctionProperty"]},{"name":"inner class ItemsHook : Hook<Combobox<E, T>, Unit, Unit> ","description":"dev.fritz2.headless.components.Combobox.ItemsHook","location":"headless/dev.fritz2.headless.components/-combobox/-items-hook/index.html","searchKeys":["ItemsHook","inner class ItemsHook : Hook<Combobox<E, T>, Unit, Unit> ","dev.fritz2.headless.components.Combobox.ItemsHook"]},{"name":"inner class ListboxItem<CM : HTMLElement>(val entry: T, tag: Tag<CM>, val index: Int) : Tag<CM> ","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/index.html","searchKeys":["ListboxItem","inner class ListboxItem<CM : HTMLElement>(val entry: T, tag: Tag<CM>, val index: Int) : Tag<CM> ","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem"]},{"name":"inner class ListboxItems<CI : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<CI> ","description":"dev.fritz2.headless.components.Listbox.ListboxItems","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/index.html","searchKeys":["ListboxItems","inner class ListboxItems<CI : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<CI> ","dev.fritz2.headless.components.Listbox.ListboxItems"]},{"name":"inner class MenuItem<CM : HTMLElement>(tag: Tag<CM>, val index: Int) : Tag<CM> ","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/index.html","searchKeys":["MenuItem","inner class MenuItem<CM : HTMLElement>(tag: Tag<CM>, val index: Int) : Tag<CM> ","dev.fritz2.headless.components.Menu.MenuItems.MenuItem"]},{"name":"inner class MenuItems<CI : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<CI> ","description":"dev.fritz2.headless.components.Menu.MenuItems","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/index.html","searchKeys":["MenuItems","inner class MenuItems<CI : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<CI>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<CI> ","dev.fritz2.headless.components.Menu.MenuItems"]},{"name":"inner class ModalPanel<C : HTMLElement>(tag: Tag<C>, explicitId: String? = null) : Tag<C> ","description":"dev.fritz2.headless.components.Modal.ModalPanel","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/index.html","searchKeys":["ModalPanel","inner class ModalPanel<C : HTMLElement>(tag: Tag<C>, explicitId: String? = null) : Tag<C> ","dev.fritz2.headless.components.Modal.ModalPanel"]},{"name":"inner class PopOverPanel<C : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<C> ","description":"dev.fritz2.headless.components.PopOver.PopOverPanel","location":"headless/dev.fritz2.headless.components/-pop-over/-pop-over-panel/index.html","searchKeys":["PopOverPanel","inner class PopOverPanel<C : HTMLElement>(renderContext: RenderContext, tagFactory: TagFactory<Tag<C>>, classes: String?, scope: ScopeContext.() -> Unit) : PopUpPanel<C> ","dev.fritz2.headless.components.PopOver.PopOverPanel"]},{"name":"inner class RadioGroupOption<CO : HTMLElement>(tag: Tag<CO>, option: T, val optionId: String) : Tag<CO> ","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/index.html","searchKeys":["RadioGroupOption","inner class RadioGroupOption<CO : HTMLElement>(tag: Tag<CO>, option: T, val optionId: String) : Tag<CO> ","dev.fritz2.headless.components.RadioGroup.RadioGroupOption"]},{"name":"inner class SelectionStrategyProperty : Property<(String, Sequence<T>) -> Combobox.QueryResult<T>> ","description":"dev.fritz2.headless.components.Combobox.SelectionStrategyProperty","location":"headless/dev.fritz2.headless.components/-combobox/-selection-strategy-property/index.html","searchKeys":["SelectionStrategyProperty","inner class SelectionStrategyProperty : Property<(String, Sequence<T>) -> Combobox.QueryResult<T>> ","dev.fritz2.headless.components.Combobox.SelectionStrategyProperty"]},{"name":"inner class Tab<CT : HTMLElement>(tag: Tag<CT>, val index: Int) : Tag<CT> ","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/index.html","searchKeys":["Tab","inner class Tab<CT : HTMLElement>(tag: Tag<CT>, val index: Int) : Tag<CT> ","dev.fritz2.headless.components.TabGroup.TabList.Tab"]},{"name":"inner class TabList<CL : HTMLElement>(tag: Tag<CL>) : Tag<CL> ","description":"dev.fritz2.headless.components.TabGroup.TabList","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/index.html","searchKeys":["TabList","inner class TabList<CL : HTMLElement>(tag: Tag<CL>) : Tag<CL> ","dev.fritz2.headless.components.TabGroup.TabList"]},{"name":"inner class TabPanels<CP : HTMLElement>(tag: Tag<CP>) : Tag<CP> ","description":"dev.fritz2.headless.components.TabGroup.TabPanels","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-panels/index.html","searchKeys":["TabPanels","inner class TabPanels<CP : HTMLElement>(tag: Tag<CP>) : Tag<CP> ","dev.fritz2.headless.components.TabGroup.TabPanels"]},{"name":"nearest","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.nearest","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/nearest/index.html","searchKeys":["nearest","nearest","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.nearest"]},{"name":"object AlignedPlacementValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/index.html","searchKeys":["AlignedPlacementValues","object AlignedPlacementValues","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues"]},{"name":"object AlignmentValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignmentValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-alignment-values/index.html","searchKeys":["AlignmentValues","object AlignmentValues","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignmentValues"]},{"name":"object Aria","description":"dev.fritz2.headless.foundation.Aria","location":"headless/dev.fritz2.headless.foundation/-aria/index.html","searchKeys":["Aria","object Aria","dev.fritz2.headless.foundation.Aria"]},{"name":"object AxisValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AxisValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-axis-values/index.html","searchKeys":["AxisValues","object AxisValues","dev.fritz2.headless.foundation.utils.floatingui.utils.AxisValues"]},{"name":"object Companion","description":"dev.fritz2.headless.components.CheckboxGroup.Companion","location":"headless/dev.fritz2.headless.components/-checkbox-group/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.CheckboxGroup.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.DataCollection.Companion","location":"headless/dev.fritz2.headless.components/-data-collection/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.DataCollection.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.InputField.Companion","location":"headless/dev.fritz2.headless.components/-input-field/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.InputField.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.Listbox.Companion","location":"headless/dev.fritz2.headless.components/-listbox/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.Listbox.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.RadioGroup.Companion","location":"headless/dev.fritz2.headless.components/-radio-group/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.RadioGroup.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.Switch.Companion","location":"headless/dev.fritz2.headless.components/-switch/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.Switch.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.SwitchWithLabel.Companion","location":"headless/dev.fritz2.headless.components/-switch-with-label/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.SwitchWithLabel.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.components.TextArea.Companion","location":"headless/dev.fritz2.headless.components/-text-area/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.components.TextArea.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.foundation.PopUpPanel.Companion","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.foundation.PopUpPanel.Companion"]},{"name":"object Companion","description":"dev.fritz2.headless.foundation.ValidationMessages.Companion","location":"headless/dev.fritz2.headless.foundation/-validation-messages/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.headless.foundation.ValidationMessages.Companion"]},{"name":"object ElementContextValues","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ElementContextValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-element-context-values/index.html","searchKeys":["ElementContextValues","object ElementContextValues","dev.fritz2.headless.foundation.utils.floatingui.core.ElementContextValues"]},{"name":"object HasPopup","description":"dev.fritz2.headless.foundation.Aria.HasPopup","location":"headless/dev.fritz2.headless.foundation/-aria/-has-popup/index.html","searchKeys":["HasPopup","object HasPopup","dev.fritz2.headless.foundation.Aria.HasPopup"]},{"name":"object HideStrategyValues","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategyValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-hide-strategy-values/index.html","searchKeys":["HideStrategyValues","object HideStrategyValues","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategyValues"]},{"name":"object LengthValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.LengthValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-length-values/index.html","searchKeys":["LengthValues","object LengthValues","dev.fritz2.headless.foundation.utils.floatingui.utils.LengthValues"]},{"name":"object PlacementValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/index.html","searchKeys":["PlacementValues","object PlacementValues","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues"]},{"name":"object Role","description":"dev.fritz2.headless.foundation.Aria.Role","location":"headless/dev.fritz2.headless.foundation/-aria/-role/index.html","searchKeys":["Role","object Role","dev.fritz2.headless.foundation.Aria.Role"]},{"name":"object RootBoundaryValues","description":"dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-root-boundary-values/index.html","searchKeys":["RootBoundaryValues","object RootBoundaryValues","dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues"]},{"name":"object SideValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-values/index.html","searchKeys":["SideValues","object SideValues","dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues"]},{"name":"object StrategyValues","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.StrategyValues","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-strategy-values/index.html","searchKeys":["StrategyValues","object StrategyValues","dev.fritz2.headless.foundation.utils.floatingui.utils.StrategyValues"]},{"name":"open fun render()","description":"dev.fritz2.headless.foundation.PopUpPanel.render","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/render.html","searchKeys":["render","open fun render()","dev.fritz2.headless.foundation.PopUpPanel.render"]},{"name":"open override fun render()","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.render","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/render.html","searchKeys":["render","open override fun render()","dev.fritz2.headless.components.Combobox.ComboboxItems.render"]},{"name":"open override fun render()","description":"dev.fritz2.headless.components.Listbox.ListboxItems.render","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/render.html","searchKeys":["render","open override fun render()","dev.fritz2.headless.components.Listbox.ListboxItems.render"]},{"name":"open override fun render()","description":"dev.fritz2.headless.components.Menu.MenuItems.render","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/render.html","searchKeys":["render","open override fun render()","dev.fritz2.headless.components.Menu.MenuItems.render"]},{"name":"open override fun render()","description":"dev.fritz2.headless.components.Switch.render","location":"headless/dev.fritz2.headless.components/-switch/render.html","searchKeys":["render","open override fun render()","dev.fritz2.headless.components.Switch.render"]},{"name":"open override fun render()","description":"dev.fritz2.headless.components.SwitchWithLabel.render","location":"headless/dev.fritz2.headless.components/-switch-with-label/render.html","searchKeys":["render","open override fun render()","dev.fritz2.headless.components.SwitchWithLabel.render"]},{"name":"open override fun toString(): String","description":"dev.fritz2.headless.validation.ComponentValidationMessage.toString","location":"headless/dev.fritz2.headless.validation/-component-validation-message/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.fritz2.headless.validation.ComponentValidationMessage.toString"]},{"name":"open override val isError: Boolean","description":"dev.fritz2.headless.validation.ComponentValidationMessage.isError","location":"headless/dev.fritz2.headless.validation/-component-validation-message/is-error.html","searchKeys":["isError","open override val isError: Boolean","dev.fritz2.headless.validation.ComponentValidationMessage.isError"]},{"name":"open override val job: Job","description":"dev.fritz2.headless.components.Modal.job","location":"headless/dev.fritz2.headless.components/-modal/job.html","searchKeys":["job","open override val job: Job","dev.fritz2.headless.components.Modal.job"]},{"name":"open override val job: Job","description":"dev.fritz2.headless.components.SelectionMode.job","location":"headless/dev.fritz2.headless.components/-selection-mode/job.html","searchKeys":["job","open override val job: Job","dev.fritz2.headless.components.SelectionMode.job"]},{"name":"open override val path: String","description":"dev.fritz2.headless.validation.ComponentValidationMessage.path","location":"headless/dev.fritz2.headless.validation/-component-validation-message/path.html","searchKeys":["path","open override val path: String","dev.fritz2.headless.validation.ComponentValidationMessage.path"]},{"name":"open val middlewareData: MiddlewareData?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn.middlewareData","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-return/middleware-data.html","searchKeys":["middlewareData","open val middlewareData: MiddlewareData?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn.middlewareData"]},{"name":"open val placement: Placement?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn.placement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-return/placement.html","searchKeys":["placement","open val placement: Placement?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn.placement"]},{"name":"open val strategy: Strategy?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn.strategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-return/strategy.html","searchKeys":["strategy","open val strategy: Strategy?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionReturn.strategy"]},{"name":"open var alignment: Alignment?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.alignment","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-auto-placement-options/alignment.html","searchKeys":["alignment","open var alignment: Alignment?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.alignment"]},{"name":"open var alignmentAxis: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions.alignmentAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-offset-options/alignment-axis.html","searchKeys":["alignmentAxis","open var alignmentAxis: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions.alignmentAxis"]},{"name":"open var allowedPlacements: Array<Placement>?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.allowedPlacements","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-auto-placement-options/allowed-placements.html","searchKeys":["allowedPlacements","open var allowedPlacements: Array<Placement>?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.allowedPlacements"]},{"name":"open var altBoundary: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.altBoundary","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-detect-overflow-options/alt-boundary.html","searchKeys":["altBoundary","open var altBoundary: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.altBoundary"]},{"name":"open var ancestorResize: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.ancestorResize","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/-auto-update-options/ancestor-resize.html","searchKeys":["ancestorResize","open var ancestorResize: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.ancestorResize"]},{"name":"open var ancestorScroll: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.ancestorScroll","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/-auto-update-options/ancestor-scroll.html","searchKeys":["ancestorScroll","open var ancestorScroll: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.ancestorScroll"]},{"name":"open var animationFrame: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.animationFrame","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/-auto-update-options/animation-frame.html","searchKeys":["animationFrame","open var animationFrame: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.animationFrame"]},{"name":"open var autoAlignment: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.autoAlignment","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-auto-placement-options/auto-alignment.html","searchKeys":["autoAlignment","open var autoAlignment: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.autoAlignment"]},{"name":"open var availableHeight: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptionsArgs.availableHeight","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-size-options-args/available-height.html","searchKeys":["availableHeight","open var availableHeight: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptionsArgs.availableHeight"]},{"name":"open var availableWidth: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptionsArgs.availableWidth","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-size-options-args/available-width.html","searchKeys":["availableWidth","open var availableWidth: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.SizeOptionsArgs.availableWidth"]},{"name":"open var behavior: String?","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.behavior","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-into-view-options/behavior.html","searchKeys":["behavior","open var behavior: String?","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.behavior"]},{"name":"open var block: String?","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.block","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-into-view-options/block.html","searchKeys":["block","open var block: String?","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.block"]},{"name":"open var bottom: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.bottom","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-object/bottom.html","searchKeys":["bottom","open var bottom: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.bottom"]},{"name":"open var boundary: Boundary?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.boundary","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-detect-overflow-options/boundary.html","searchKeys":["boundary","open var boundary: Boundary?","dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.boundary"]},{"name":"open var crossAxis: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.crossAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-auto-placement-options/cross-axis.html","searchKeys":["crossAxis","open var crossAxis: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.AutoPlacementOptions.crossAxis"]},{"name":"open var crossAxis: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.crossAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/cross-axis.html","searchKeys":["crossAxis","open var crossAxis: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.crossAxis"]},{"name":"open var crossAxis: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions.crossAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-options/cross-axis.html","searchKeys":["crossAxis","open var crossAxis: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions.crossAxis"]},{"name":"open var crossAxis: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions.crossAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options/cross-axis.html","searchKeys":["crossAxis","open var crossAxis: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions.crossAxis"]},{"name":"open var crossAxis: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOffset.crossAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-offset/cross-axis.html","searchKeys":["crossAxis","open var crossAxis: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOffset.crossAxis"]},{"name":"open var crossAxis: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions.crossAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-offset-options/cross-axis.html","searchKeys":["crossAxis","open var crossAxis: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions.crossAxis"]},{"name":"open var data: Map<String, dynamic>?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareReturn.data","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-return/data.html","searchKeys":["data","open var data: Map<String, dynamic>?","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareReturn.data"]},{"name":"open var element: Any?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ArrowOptions.element","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-arrow-options/element.html","searchKeys":["element","open var element: Any?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ArrowOptions.element"]},{"name":"open var elementContext: ElementContext?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.elementContext","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-detect-overflow-options/element-context.html","searchKeys":["elementContext","open var elementContext: ElementContext?","dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.elementContext"]},{"name":"open var elementResize: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.elementResize","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/-auto-update-options/element-resize.html","searchKeys":["elementResize","open var elementResize: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.elementResize"]},{"name":"open var fallbackAxisSideDirection: String?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.fallbackAxisSideDirection","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/fallback-axis-side-direction.html","searchKeys":["fallbackAxisSideDirection","open var fallbackAxisSideDirection: String?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.fallbackAxisSideDirection"]},{"name":"open var fallbackPlacements: Array<Placement>?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.fallbackPlacements","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/fallback-placements.html","searchKeys":["fallbackPlacements","open var fallbackPlacements: Array<Placement>?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.fallbackPlacements"]},{"name":"open var fallbackStrategy: String?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.fallbackStrategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/fallback-strategy.html","searchKeys":["fallbackStrategy","open var fallbackStrategy: String?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.fallbackStrategy"]},{"name":"open var flipAlignment: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.flipAlignment","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/flip-alignment.html","searchKeys":["flipAlignment","open var flipAlignment: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.flipAlignment"]},{"name":"open var floating: Rect?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.ElementRects.floating","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-element-rects/floating.html","searchKeys":["floating","open var floating: Rect?","dev.fritz2.headless.foundation.utils.floatingui.utils.ElementRects.floating"]},{"name":"open var fn: (state: MiddlewareState) -> Coords?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptionsLimiter.fn","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options-limiter/fn.html","searchKeys":["fn","open var fn: (state: MiddlewareState) -> Coords?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptionsLimiter.fn"]},{"name":"open var fn: (state: MiddlewareState) -> Promise<MiddlewareReturn>?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Middleware.fn","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware/fn.html","searchKeys":["fn","open var fn: (state: MiddlewareState) -> Promise<MiddlewareReturn>?","dev.fritz2.headless.foundation.utils.floatingui.core.Middleware.fn"]},{"name":"open var height: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.height","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-rect/height.html","searchKeys":["height","open var height: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.height"]},{"name":"open var inline: String?","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.inline","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-into-view-options/inline.html","searchKeys":["inline","open var inline: String?","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.inline"]},{"name":"open var layoutShift: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.layoutShift","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.dom/-auto-update-options/layout-shift.html","searchKeys":["layoutShift","open var layoutShift: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.dom.AutoUpdateOptions.layoutShift"]},{"name":"open var left: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.left","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-object/left.html","searchKeys":["left","open var left: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.left"]},{"name":"open var limiter: ShiftOptionsLimiter?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions.limiter","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options/limiter.html","searchKeys":["limiter","open var limiter: ShiftOptionsLimiter?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions.limiter"]},{"name":"open var mainAxis: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.mainAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-flip-options/main-axis.html","searchKeys":["mainAxis","open var mainAxis: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.FlipOptions.mainAxis"]},{"name":"open var mainAxis: Boolean?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions.mainAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-options/main-axis.html","searchKeys":["mainAxis","open var mainAxis: Boolean?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions.mainAxis"]},{"name":"open var mainAxis: Boundary?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions.mainAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options/main-axis.html","searchKeys":["mainAxis","open var mainAxis: Boundary?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptions.mainAxis"]},{"name":"open var mainAxis: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOffset.mainAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-offset/main-axis.html","searchKeys":["mainAxis","open var mainAxis: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOffset.mainAxis"]},{"name":"open var mainAxis: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions.mainAxis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-offset-options/main-axis.html","searchKeys":["mainAxis","open var mainAxis: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.OffsetOptions.mainAxis"]},{"name":"open var middleware: Array<Middleware>?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.middleware","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-config/middleware.html","searchKeys":["middleware","open var middleware: Array<Middleware>?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.middleware"]},{"name":"open var name: String?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Middleware.name","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware/name.html","searchKeys":["name","open var name: String?","dev.fritz2.headless.foundation.utils.floatingui.core.Middleware.name"]},{"name":"open var offset: LimitShiftOffset?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions.offset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-limit-shift-options/offset.html","searchKeys":["offset","open var offset: LimitShiftOffset?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.LimitShiftOptions.offset"]},{"name":"open var options: Any?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptionsLimiter.options","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-shift-options-limiter/options.html","searchKeys":["options","open var options: Any?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ShiftOptionsLimiter.options"]},{"name":"open var options: dynamic","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Middleware.options","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware/options.html","searchKeys":["options","open var options: dynamic","dev.fritz2.headless.foundation.utils.floatingui.core.Middleware.options"]},{"name":"open var padding: Padding?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.padding","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-detect-overflow-options/padding.html","searchKeys":["padding","open var padding: Padding?","dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.padding"]},{"name":"open var padding: Padding?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ArrowOptions.padding","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-arrow-options/padding.html","searchKeys":["padding","open var padding: Padding?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.ArrowOptions.padding"]},{"name":"open var padding: Padding?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions.padding","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-inline-options/padding.html","searchKeys":["padding","open var padding: Padding?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions.padding"]},{"name":"open var placement: Placement?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.placement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-config/placement.html","searchKeys":["placement","open var placement: Placement?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.placement"]},{"name":"open var placement: Placement?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Reset.placement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-reset/placement.html","searchKeys":["placement","open var placement: Placement?","dev.fritz2.headless.foundation.utils.floatingui.core.Reset.placement"]},{"name":"open var platform: Platform?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.platform","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-config/platform.html","searchKeys":["platform","open var platform: Platform?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.platform"]},{"name":"open var rects: ElementRects?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Reset.rects","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-reset/rects.html","searchKeys":["rects","open var rects: ElementRects?","dev.fritz2.headless.foundation.utils.floatingui.core.Reset.rects"]},{"name":"open var reference: Rect?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.ElementRects.reference","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-element-rects/reference.html","searchKeys":["reference","open var reference: Rect?","dev.fritz2.headless.foundation.utils.floatingui.utils.ElementRects.reference"]},{"name":"open var reset: Reset?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareReturn.reset","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-return/reset.html","searchKeys":["reset","open var reset: Reset?","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareReturn.reset"]},{"name":"open var right: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.right","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-object/right.html","searchKeys":["right","open var right: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.right"]},{"name":"open var rootBoundary: RootBoundary?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.rootBoundary","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-detect-overflow-options/root-boundary.html","searchKeys":["rootBoundary","open var rootBoundary: RootBoundary?","dev.fritz2.headless.foundation.utils.floatingui.core.DetectOverflowOptions.rootBoundary"]},{"name":"open var scrollMode: String?","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.scrollMode","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-into-view-options/scroll-mode.html","searchKeys":["scrollMode","open var scrollMode: String?","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollIntoViewOptions.scrollMode"]},{"name":"open var strategy: HideStrategy?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideOptions.strategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-hide-options/strategy.html","searchKeys":["strategy","open var strategy: HideStrategy?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideOptions.strategy"]},{"name":"open var strategy: Strategy?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.strategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-compute-position-config/strategy.html","searchKeys":["strategy","open var strategy: Strategy?","dev.fritz2.headless.foundation.utils.floatingui.core.ComputePositionConfig.strategy"]},{"name":"open var top: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.top","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-object/top.html","searchKeys":["top","open var top: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.SideObject.top"]},{"name":"open var value: T?","description":"dev.fritz2.headless.foundation.Property.value","location":"headless/dev.fritz2.headless.foundation/-property/value.html","searchKeys":["value","open var value: T?","dev.fritz2.headless.foundation.Property.value"]},{"name":"open var width: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.width","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-rect/width.html","searchKeys":["width","open var width: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.width"]},{"name":"open var x: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Coords.x","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-coords/x.html","searchKeys":["x","open var x: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.Coords.x"]},{"name":"open var x: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions.x","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-inline-options/x.html","searchKeys":["x","open var x: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions.x"]},{"name":"open var x: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.x","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-rect/x.html","searchKeys":["x","open var x: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.x"]},{"name":"open var y: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Coords.y","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-coords/y.html","searchKeys":["y","open var y: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.Coords.y"]},{"name":"open var y: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions.y","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-inline-options/y.html","searchKeys":["y","open var y: Number?","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.InlineOptions.y"]},{"name":"open var y: Number?","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.y","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-rect/y.html","searchKeys":["y","open var y: Number?","dev.fritz2.headless.foundation.utils.floatingui.utils.Rect.y"]},{"name":"operator fun invoke(): String","description":"dev.fritz2.headless.foundation.AriaReferenceHook.invoke","location":"headless/dev.fritz2.headless.foundation/-aria-reference-hook/invoke.html","searchKeys":["invoke","operator fun invoke(): String","dev.fritz2.headless.foundation.AriaReferenceHook.invoke"]},{"name":"operator fun invoke(behavior: ScrollBehavior = ScrollBehavior.smooth, mode: ScrollMode = ScrollMode.ifNeeded, vertical: ScrollPosition = ScrollPosition.nearest, horizontal: ScrollPosition = ScrollPosition.nearest)","description":"dev.fritz2.headless.components.ScrollIntoViewProperty.invoke","location":"headless/dev.fritz2.headless.components/-scroll-into-view-property/invoke.html","searchKeys":["invoke","operator fun invoke(behavior: ScrollBehavior = ScrollBehavior.smooth, mode: ScrollMode = ScrollMode.ifNeeded, vertical: ScrollPosition = ScrollPosition.nearest, horizontal: ScrollPosition = ScrollPosition.nearest)","dev.fritz2.headless.components.ScrollIntoViewProperty.invoke"]},{"name":"operator fun invoke(data: Flow<List<T>>, idProvider: IdProvider<T, *>? = null, id: String? = null)","description":"dev.fritz2.headless.components.CollectionDataProperty.invoke","location":"headless/dev.fritz2.headless.components/-collection-data-property/invoke.html","searchKeys":["invoke","operator fun invoke(data: Flow<List<T>>, idProvider: IdProvider<T, *>? = null, id: String? = null)","dev.fritz2.headless.components.CollectionDataProperty.invoke"]},{"name":"operator fun invoke(data: List<T>, idProvider: IdProvider<T, *>? = null, id: String? = null)","description":"dev.fritz2.headless.components.CollectionDataProperty.invoke","location":"headless/dev.fritz2.headless.components/-collection-data-property/invoke.html","searchKeys":["invoke","operator fun invoke(data: List<T>, idProvider: IdProvider<T, *>? = null, id: String? = null)","dev.fritz2.headless.components.CollectionDataProperty.invoke"]},{"name":"operator fun invoke(fieldSelector: T.() -> String)","description":"dev.fritz2.headless.components.Combobox.FilterFunctionProperty.invoke","location":"headless/dev.fritz2.headless.components/-combobox/-filter-function-property/invoke.html","searchKeys":["invoke","operator fun invoke(fieldSelector: T.() -> String)","dev.fritz2.headless.components.Combobox.FilterFunctionProperty.invoke"]},{"name":"operator fun invoke(filter: (Sequence<T>, String) -> Sequence<T>)","description":"dev.fritz2.headless.components.Combobox.FilterFunctionProperty.invoke","location":"headless/dev.fritz2.headless.components/-combobox/-filter-function-property/invoke.html","searchKeys":["invoke","operator fun invoke(filter: (Sequence<T>, String) -> Sequence<T>)","dev.fritz2.headless.components.Combobox.FilterFunctionProperty.invoke"]},{"name":"operator fun invoke(id: String): String","description":"dev.fritz2.headless.foundation.AriaReferenceHook.invoke","location":"headless/dev.fritz2.headless.foundation/-aria-reference-hook/invoke.html","searchKeys":["invoke","operator fun invoke(id: String): String","dev.fritz2.headless.foundation.AriaReferenceHook.invoke"]},{"name":"operator fun invoke(id: String? = null, data: Flow<T>, messages: Flow<List<ComponentValidationMessage>>? = null, handler: WithJob.(Flow<T>) -> Unit? = null)","description":"dev.fritz2.headless.foundation.DatabindingProperty.invoke","location":"headless/dev.fritz2.headless.foundation/-databinding-property/invoke.html","searchKeys":["invoke","operator fun invoke(id: String? = null, data: Flow<T>, messages: Flow<List<ComponentValidationMessage>>? = null, handler: WithJob.(Flow<T>) -> Unit? = null)","dev.fritz2.headless.foundation.DatabindingProperty.invoke"]},{"name":"operator fun invoke(items: Flow<List<T>>)","description":"dev.fritz2.headless.components.Combobox.ItemsHook.invoke","location":"headless/dev.fritz2.headless.components/-combobox/-items-hook/invoke.html","searchKeys":["invoke","operator fun invoke(items: Flow<List<T>>)","dev.fritz2.headless.components.Combobox.ItemsHook.invoke"]},{"name":"operator fun invoke(items: List<T>)","description":"dev.fritz2.headless.components.Combobox.ItemsHook.invoke","location":"headless/dev.fritz2.headless.components/-combobox/-items-hook/invoke.html","searchKeys":["invoke","operator fun invoke(items: List<T>)","dev.fritz2.headless.components.Combobox.ItemsHook.invoke"]},{"name":"operator fun invoke(options: ScrollIntoViewOptions)","description":"dev.fritz2.headless.components.ScrollIntoViewProperty.invoke","location":"headless/dev.fritz2.headless.components/-scroll-into-view-property/invoke.html","searchKeys":["invoke","operator fun invoke(options: ScrollIntoViewOptions)","dev.fritz2.headless.components.ScrollIntoViewProperty.invoke"]},{"name":"operator fun invoke(store: Store<List<T>>, idProvider: IdProvider<T, *>? = null)","description":"dev.fritz2.headless.components.CollectionDataProperty.invoke","location":"headless/dev.fritz2.headless.components/-collection-data-property/invoke.html","searchKeys":["invoke","operator fun invoke(store: Store<List<T>>, idProvider: IdProvider<T, *>? = null)","dev.fritz2.headless.components.CollectionDataProperty.invoke"]},{"name":"operator fun invoke(store: Store<T>)","description":"dev.fritz2.headless.foundation.DatabindingProperty.invoke","location":"headless/dev.fritz2.headless.foundation/-databinding-property/invoke.html","searchKeys":["invoke","operator fun invoke(store: Store<T>)","dev.fritz2.headless.foundation.DatabindingProperty.invoke"]},{"name":"operator fun invoke(value: Boolean?)","description":"dev.fritz2.headless.foundation.BooleanAttributeHook.invoke","location":"headless/dev.fritz2.headless.foundation/-boolean-attribute-hook/invoke.html","searchKeys":["invoke","operator fun invoke(value: Boolean?)","dev.fritz2.headless.foundation.BooleanAttributeHook.invoke"]},{"name":"operator fun invoke(value: Flow<Boolean>)","description":"dev.fritz2.headless.foundation.BooleanAttributeHook.invoke","location":"headless/dev.fritz2.headless.foundation/-boolean-attribute-hook/invoke.html","searchKeys":["invoke","operator fun invoke(value: Flow<Boolean>)","dev.fritz2.headless.foundation.BooleanAttributeHook.invoke"]},{"name":"operator fun invoke(value: Flow<I>): TagHook<R, P, I>","description":"dev.fritz2.headless.foundation.TagHook.invoke","location":"headless/dev.fritz2.headless.foundation/-tag-hook/invoke.html","searchKeys":["invoke","operator fun invoke(value: Flow<I>): TagHook<R, P, I>","dev.fritz2.headless.foundation.TagHook.invoke"]},{"name":"operator fun invoke(value: Flow<T>)","description":"dev.fritz2.headless.foundation.AttributeHook.invoke","location":"headless/dev.fritz2.headless.foundation/-attribute-hook/invoke.html","searchKeys":["invoke","operator fun invoke(value: Flow<T>)","dev.fritz2.headless.foundation.AttributeHook.invoke"]},{"name":"operator fun invoke(value: I): TagHook<R, P, I>","description":"dev.fritz2.headless.foundation.TagHook.invoke","location":"headless/dev.fritz2.headless.foundation/-tag-hook/invoke.html","searchKeys":["invoke","operator fun invoke(value: I): TagHook<R, P, I>","dev.fritz2.headless.foundation.TagHook.invoke"]},{"name":"operator fun invoke(value: T?)","description":"dev.fritz2.headless.foundation.AttributeHook.invoke","location":"headless/dev.fritz2.headless.foundation/-attribute-hook/invoke.html","searchKeys":["invoke","operator fun invoke(value: T?)","dev.fritz2.headless.foundation.AttributeHook.invoke"]},{"name":"sealed interface QueryResult<T>","description":"dev.fritz2.headless.components.Combobox.QueryResult","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/index.html","searchKeys":["QueryResult","sealed interface QueryResult<T>","dev.fritz2.headless.components.Combobox.QueryResult"]},{"name":"smooth","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.smooth","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-behavior/smooth/index.html","searchKeys":["smooth","smooth","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.smooth"]},{"name":"start","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.start","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/start/index.html","searchKeys":["start","start","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.start"]},{"name":"suspend fun Tag<HTMLElement>.setFocus(maxRetries: Int = 10)","description":"dev.fritz2.headless.foundation.setFocus","location":"headless/dev.fritz2.headless.foundation/set-focus.html","searchKeys":["setFocus","suspend fun Tag<HTMLElement>.setFocus(maxRetries: Int = 10)","dev.fritz2.headless.foundation.setFocus"]},{"name":"typealias AlignedPlacement = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement/index.html","searchKeys":["AlignedPlacement","typealias AlignedPlacement = String","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacement"]},{"name":"typealias Alignment = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Alignment","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-alignment/index.html","searchKeys":["Alignment","typealias Alignment = String","dev.fritz2.headless.foundation.utils.floatingui.utils.Alignment"]},{"name":"typealias Axis = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Axis","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-axis/index.html","searchKeys":["Axis","typealias Axis = String","dev.fritz2.headless.foundation.utils.floatingui.utils.Axis"]},{"name":"typealias Boundary = Any","description":"dev.fritz2.headless.foundation.utils.floatingui.core.Boundary","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-boundary/index.html","searchKeys":["Boundary","typealias Boundary = Any","dev.fritz2.headless.foundation.utils.floatingui.core.Boundary"]},{"name":"typealias Effect<C, R, P> = C.(P, R.() -> Unit?) -> Unit","description":"dev.fritz2.headless.foundation.Effect","location":"headless/dev.fritz2.headless.foundation/-effect/index.html","searchKeys":["Effect","typealias Effect<C, R, P> = C.(P, R.() -> Unit?) -> Unit","dev.fritz2.headless.foundation.Effect"]},{"name":"typealias ElementContext = String","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ElementContext","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-element-context/index.html","searchKeys":["ElementContext","typealias ElementContext = String","dev.fritz2.headless.foundation.utils.floatingui.core.ElementContext"]},{"name":"typealias FloatingElement = Element","description":"dev.fritz2.headless.foundation.utils.floatingui.core.FloatingElement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-floating-element/index.html","searchKeys":["FloatingElement","typealias FloatingElement = Element","dev.fritz2.headless.foundation.utils.floatingui.core.FloatingElement"]},{"name":"typealias HideStrategy = String","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-hide-strategy/index.html","searchKeys":["HideStrategy","typealias HideStrategy = String","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategy"]},{"name":"typealias Length = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Length","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-length/index.html","searchKeys":["Length","typealias Length = String","dev.fritz2.headless.foundation.utils.floatingui.utils.Length"]},{"name":"typealias MiddlewareArguments = MiddlewareState","description":"dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareArguments","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-middleware-arguments/index.html","searchKeys":["MiddlewareArguments","typealias MiddlewareArguments = MiddlewareState","dev.fritz2.headless.foundation.utils.floatingui.core.MiddlewareArguments"]},{"name":"typealias Padding = Number","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Padding","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-padding/index.html","searchKeys":["Padding","typealias Padding = Number","dev.fritz2.headless.foundation.utils.floatingui.utils.Padding"]},{"name":"typealias Placement = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Placement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement/index.html","searchKeys":["Placement","typealias Placement = String","dev.fritz2.headless.foundation.utils.floatingui.utils.Placement"]},{"name":"typealias ReferenceElement = Element","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ReferenceElement","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-reference-element/index.html","searchKeys":["ReferenceElement","typealias ReferenceElement = Element","dev.fritz2.headless.foundation.utils.floatingui.core.ReferenceElement"]},{"name":"typealias RootBoundary = Any","description":"dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundary","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-root-boundary/index.html","searchKeys":["RootBoundary","typealias RootBoundary = Any","dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundary"]},{"name":"typealias Side = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Side","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side/index.html","searchKeys":["Side","typealias Side = String","dev.fritz2.headless.foundation.utils.floatingui.utils.Side"]},{"name":"typealias Strategy = String","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.Strategy","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-strategy/index.html","searchKeys":["Strategy","typealias Strategy = String","dev.fritz2.headless.foundation.utils.floatingui.utils.Strategy"]},{"name":"typealias TagFactory<C> = (RenderContext, String?, String?, ScopeContext.() -> Unit, C.() -> Unit) -> C","description":"dev.fritz2.headless.foundation.TagFactory","location":"headless/dev.fritz2.headless.foundation/-tag-factory/index.html","searchKeys":["TagFactory","typealias TagFactory<C> = (RenderContext, String?, String?, ScopeContext.() -> Unit, C.() -> Unit) -> C","dev.fritz2.headless.foundation.TagFactory"]},{"name":"typealias TagPayload<P> = Triple<String?, String?, P>","description":"dev.fritz2.headless.foundation.TagPayload","location":"headless/dev.fritz2.headless.foundation/-tag-payload/index.html","searchKeys":["TagPayload","typealias TagPayload<P> = Triple<String?, String?, P>","dev.fritz2.headless.foundation.TagPayload"]},{"name":"val SHOW_COMPONENT_STRUCTURE: Scope.Key<Boolean>","description":"dev.fritz2.headless.foundation.SHOW_COMPONENT_STRUCTURE","location":"headless/dev.fritz2.headless.foundation/-s-h-o-w_-c-o-m-p-o-n-e-n-t_-s-t-r-u-c-t-u-r-e.html","searchKeys":["SHOW_COMPONENT_STRUCTURE","val SHOW_COMPONENT_STRUCTURE: Scope.Key<Boolean>","dev.fritz2.headless.foundation.SHOW_COMPONENT_STRUCTURE"]},{"name":"val absolute: Strategy","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.StrategyValues.absolute","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-strategy-values/absolute.html","searchKeys":["absolute","val absolute: Strategy","dev.fritz2.headless.foundation.utils.floatingui.utils.StrategyValues.absolute"]},{"name":"val active: Flow<Boolean>","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem.active","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/-combobox-item/active.html","searchKeys":["active","val active: Flow<Boolean>","dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem.active"]},{"name":"val active: Flow<Boolean>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.active","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-item/active.html","searchKeys":["active","val active: Flow<Boolean>","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.active"]},{"name":"val active: Flow<Boolean>","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.active","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/active.html","searchKeys":["active","val active: Flow<Boolean>","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.active"]},{"name":"val active: Flow<Boolean>","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.active","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/active.html","searchKeys":["active","val active: Flow<Boolean>","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.active"]},{"name":"val active: Flow<Boolean>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.active","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/active.html","searchKeys":["active","val active: Flow<Boolean>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.active"]},{"name":"val active: Flow<Boolean>","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab.active","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/active.html","searchKeys":["active","val active: Flow<Boolean>","dev.fritz2.headless.components.TabGroup.TabList.Tab.active"]},{"name":"val bottom: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.bottom","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/bottom.html","searchKeys":["bottom","val bottom: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.bottom"]},{"name":"val bottom: Side","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.bottom","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-values/bottom.html","searchKeys":["bottom","val bottom: Side","dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.bottom"]},{"name":"val bottomEnd: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.bottomEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/bottom-end.html","searchKeys":["bottomEnd","val bottomEnd: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.bottomEnd"]},{"name":"val bottomEnd: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.bottomEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/bottom-end.html","searchKeys":["bottomEnd","val bottomEnd: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.bottomEnd"]},{"name":"val bottomStart: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.bottomStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/bottom-start.html","searchKeys":["bottomStart","val bottomStart: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.bottomStart"]},{"name":"val bottomStart: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.bottomStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/bottom-start.html","searchKeys":["bottomStart","val bottomStart: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.bottomStart"]},{"name":"val close: Handler<Unit>","description":"dev.fritz2.headless.components.Toast.close","location":"headless/dev.fritz2.headless.components/-toast/close.html","searchKeys":["close","val close: Handler<Unit>","dev.fritz2.headless.components.Toast.close"]},{"name":"val close: SimpleHandler<Unit>","description":"dev.fritz2.headless.foundation.OpenClose.close","location":"headless/dev.fritz2.headless.foundation/-open-close/close.html","searchKeys":["close","val close: SimpleHandler<Unit>","dev.fritz2.headless.foundation.OpenClose.close"]},{"name":"val collectionId: String?","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.collectionId","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/collection-id.html","searchKeys":["collectionId","val collectionId: String?","dev.fritz2.headless.components.DataCollection.DataCollectionItems.collectionId"]},{"name":"val collectionItemId: String?","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.collectionItemId","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-item/collection-item-id.html","searchKeys":["collectionItemId","val collectionItemId: String?","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.collectionItemId"]},{"name":"val comparatorAscending: Comparator<T>","description":"dev.fritz2.headless.foundation.Sorting.comparatorAscending","location":"headless/dev.fritz2.headless.foundation/-sorting/comparator-ascending.html","searchKeys":["comparatorAscending","val comparatorAscending: Comparator<T>","dev.fritz2.headless.foundation.Sorting.comparatorAscending"]},{"name":"val comparatorDescending: Comparator<T>","description":"dev.fritz2.headless.foundation.Sorting.comparatorDescending","location":"headless/dev.fritz2.headless.foundation/-sorting/comparator-descending.html","searchKeys":["comparatorDescending","val comparatorDescending: Comparator<T>","dev.fritz2.headless.foundation.Sorting.comparatorDescending"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.AbstractSwitch.componentId","location":"headless/dev.fritz2.headless.components/-abstract-switch/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.AbstractSwitch.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.CheckboxGroup.componentId","location":"headless/dev.fritz2.headless.components/-checkbox-group/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.CheckboxGroup.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.DataCollection.componentId","location":"headless/dev.fritz2.headless.components/-data-collection/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.DataCollection.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.Disclosure.componentId","location":"headless/dev.fritz2.headless.components/-disclosure/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.Disclosure.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.Listbox.componentId","location":"headless/dev.fritz2.headless.components/-listbox/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.Listbox.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.Menu.componentId","location":"headless/dev.fritz2.headless.components/-menu/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.Menu.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.Modal.ModalPanel.componentId","location":"headless/dev.fritz2.headless.components/-modal/-modal-panel/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.Modal.ModalPanel.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.Modal.componentId","location":"headless/dev.fritz2.headless.components/-modal/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.Modal.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.PopOver.componentId","location":"headless/dev.fritz2.headless.components/-pop-over/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.PopOver.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.RadioGroup.componentId","location":"headless/dev.fritz2.headless.components/-radio-group/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.RadioGroup.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.TabGroup.componentId","location":"headless/dev.fritz2.headless.components/-tab-group/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.TabGroup.componentId"]},{"name":"val componentId: String","description":"dev.fritz2.headless.components.Textfield.componentId","location":"headless/dev.fritz2.headless.components/-textfield/component-id.html","searchKeys":["componentId","val componentId: String","dev.fritz2.headless.components.Textfield.componentId"]},{"name":"val computedPosition: Flow<ComputePositionReturn>","description":"dev.fritz2.headless.foundation.PopUpPanel.computedPosition","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/computed-position.html","searchKeys":["computedPosition","val computedPosition: Flow<ComputePositionReturn>","dev.fritz2.headless.foundation.PopUpPanel.computedPosition"]},{"name":"val data: CollectionDataProperty<T>","description":"dev.fritz2.headless.components.DataCollection.data","location":"headless/dev.fritz2.headless.components/-data-collection/data.html","searchKeys":["data","val data: CollectionDataProperty<T>","dev.fritz2.headless.components.DataCollection.data"]},{"name":"val data: Flow<List<T>>","description":"dev.fritz2.headless.components.CollectionData.data","location":"headless/dev.fritz2.headless.components/-collection-data/data.html","searchKeys":["data","val data: Flow<List<T>>","dev.fritz2.headless.components.CollectionData.data"]},{"name":"val data: Flow<T>","description":"dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.data","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-data-binding/data.html","searchKeys":["data","val data: Flow<T>","dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.data"]},{"name":"val data: Flow<T>","description":"dev.fritz2.headless.foundation.DatabindingProperty.data","location":"headless/dev.fritz2.headless.foundation/-databinding-property/data.html","searchKeys":["data","val data: Flow<T>","dev.fritz2.headless.foundation.DatabindingProperty.data"]},{"name":"val details: String? = null","description":"dev.fritz2.headless.validation.ComponentValidationMessage.details","location":"headless/dev.fritz2.headless.validation/-component-validation-message/details.html","searchKeys":["details","val details: String? = null","dev.fritz2.headless.validation.ComponentValidationMessage.details"]},{"name":"val direction: Flow<SortDirection>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.direction","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-sort-button/direction.html","searchKeys":["direction","val direction: Flow<SortDirection>","dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.direction"]},{"name":"val direction: SortDirection","description":"dev.fritz2.headless.foundation.SortingOrder.direction","location":"headless/dev.fritz2.headless.foundation/-sorting-order/direction.html","searchKeys":["direction","val direction: SortDirection","dev.fritz2.headless.foundation.SortingOrder.direction"]},{"name":"val disable: SimpleHandler<Boolean>","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.disable","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/disable.html","searchKeys":["disable","val disable: SimpleHandler<Boolean>","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.disable"]},{"name":"val disable: SimpleHandler<Boolean>","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.disable","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/disable.html","searchKeys":["disable","val disable: SimpleHandler<Boolean>","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.disable"]},{"name":"val disable: SimpleHandler<Boolean>","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab.disable","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/disable.html","searchKeys":["disable","val disable: SimpleHandler<Boolean>","dev.fritz2.headless.components.TabGroup.TabList.Tab.disable"]},{"name":"val disabled: Flow<Boolean>","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.disabled","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/disabled.html","searchKeys":["disabled","val disabled: Flow<Boolean>","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.disabled"]},{"name":"val disabled: Flow<Boolean>","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.disabled","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/disabled.html","searchKeys":["disabled","val disabled: Flow<Boolean>","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.disabled"]},{"name":"val disabled: Flow<Boolean>","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab.disabled","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/disabled.html","searchKeys":["disabled","val disabled: Flow<Boolean>","dev.fritz2.headless.components.TabGroup.TabList.Tab.disabled"]},{"name":"val document: RootBoundary","description":"dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues.document","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-root-boundary-values/document.html","searchKeys":["document","val document: RootBoundary","dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues.document"]},{"name":"val enabled: Flow<Boolean>","description":"dev.fritz2.headless.components.AbstractSwitch.enabled","location":"headless/dev.fritz2.headless.components/-abstract-switch/enabled.html","searchKeys":["enabled","val enabled: Flow<Boolean>","dev.fritz2.headless.components.AbstractSwitch.enabled"]},{"name":"val end: Alignment","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignmentValues.end","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-alignment-values/end.html","searchKeys":["end","val end: Alignment","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignmentValues.end"]},{"name":"val entries: EnumEntries<Direction>","description":"dev.fritz2.headless.foundation.Direction.entries","location":"headless/dev.fritz2.headless.foundation/-direction/entries.html","searchKeys":["entries","val entries: EnumEntries<Direction>","dev.fritz2.headless.foundation.Direction.entries"]},{"name":"val entries: EnumEntries<FocusResult>","description":"dev.fritz2.headless.foundation.FocusResult.entries","location":"headless/dev.fritz2.headless.foundation/-focus-result/entries.html","searchKeys":["entries","val entries: EnumEntries<FocusResult>","dev.fritz2.headless.foundation.FocusResult.entries"]},{"name":"val entries: EnumEntries<InitialFocus>","description":"dev.fritz2.headless.foundation.InitialFocus.entries","location":"headless/dev.fritz2.headless.foundation/-initial-focus/entries.html","searchKeys":["entries","val entries: EnumEntries<InitialFocus>","dev.fritz2.headless.foundation.InitialFocus.entries"]},{"name":"val entries: EnumEntries<Orientation>","description":"dev.fritz2.headless.foundation.Orientation.entries","location":"headless/dev.fritz2.headless.foundation/-orientation/entries.html","searchKeys":["entries","val entries: EnumEntries<Orientation>","dev.fritz2.headless.foundation.Orientation.entries"]},{"name":"val entries: EnumEntries<PopUpPanelSize>","description":"dev.fritz2.headless.foundation.PopUpPanelSize.entries","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel-size/entries.html","searchKeys":["entries","val entries: EnumEntries<PopUpPanelSize>","dev.fritz2.headless.foundation.PopUpPanelSize.entries"]},{"name":"val entries: EnumEntries<ScrollBehavior>","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.entries","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-behavior/entries.html","searchKeys":["entries","val entries: EnumEntries<ScrollBehavior>","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollBehavior.entries"]},{"name":"val entries: EnumEntries<ScrollMode>","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.entries","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<ScrollMode>","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.entries"]},{"name":"val entries: EnumEntries<ScrollPosition>","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.entries","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-position/entries.html","searchKeys":["entries","val entries: EnumEntries<ScrollPosition>","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollPosition.entries"]},{"name":"val entries: EnumEntries<Severity>","description":"dev.fritz2.headless.validation.Severity.entries","location":"headless/dev.fritz2.headless.validation/-severity/entries.html","searchKeys":["entries","val entries: EnumEntries<Severity>","dev.fritz2.headless.validation.Severity.entries"]},{"name":"val entries: EnumEntries<SortDirection>","description":"dev.fritz2.headless.foundation.SortDirection.entries","location":"headless/dev.fritz2.headless.foundation/-sort-direction/entries.html","searchKeys":["entries","val entries: EnumEntries<SortDirection>","dev.fritz2.headless.foundation.SortDirection.entries"]},{"name":"val entry: T","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.entry","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/entry.html","searchKeys":["entry","val entry: T","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.entry"]},{"name":"val escaped: HideStrategy","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategyValues.escaped","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-hide-strategy-values/escaped.html","searchKeys":["escaped","val escaped: HideStrategy","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategyValues.escaped"]},{"name":"val filterBy: Combobox.FilterFunctionProperty<E, T>","description":"dev.fritz2.headless.components.Combobox.filterBy","location":"headless/dev.fritz2.headless.components/-combobox/filter-by.html","searchKeys":["filterBy","val filterBy: Combobox.FilterFunctionProperty<E, T>","dev.fritz2.headless.components.Combobox.filterBy"]},{"name":"val filterBy: Handler<(List<T>) -> List<T>?>","description":"dev.fritz2.headless.components.DataCollection.filterBy","location":"headless/dev.fritz2.headless.components/-data-collection/filter-by.html","searchKeys":["filterBy","val filterBy: Handler<(List<T>) -> List<T>?>","dev.fritz2.headless.components.DataCollection.filterBy"]},{"name":"val first: Boolean = false","description":"dev.fritz2.headless.foundation.FocusOptions.first","location":"headless/dev.fritz2.headless.foundation/-focus-options/first.html","searchKeys":["first","val first: Boolean = false","dev.fritz2.headless.foundation.FocusOptions.first"]},{"name":"val fixed: Strategy","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.StrategyValues.fixed","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-strategy-values/fixed.html","searchKeys":["fixed","val fixed: Strategy","dev.fritz2.headless.foundation.utils.floatingui.utils.StrategyValues.fixed"]},{"name":"val floating: ElementContext","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ElementContextValues.floating","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-element-context-values/floating.html","searchKeys":["floating","val floating: ElementContext","dev.fritz2.headless.foundation.utils.floatingui.core.ElementContextValues.floating"]},{"name":"val focus: Boolean","description":"dev.fritz2.headless.foundation.InitialFocus.focus","location":"headless/dev.fritz2.headless.foundation/-initial-focus/focus.html","searchKeys":["focus","val focus: Boolean","dev.fritz2.headless.foundation.InitialFocus.focus"]},{"name":"val handler: WithJob.(Flow<T>) -> Unit?","description":"dev.fritz2.headless.foundation.DatabindingProperty.handler","location":"headless/dev.fritz2.headless.foundation/-databinding-property/handler.html","searchKeys":["handler","val handler: WithJob.(Flow<T>) -> Unit?","dev.fritz2.headless.foundation.DatabindingProperty.handler"]},{"name":"val handler: WithJob.(Flow<T>) -> Unit? = null","description":"dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.handler","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-data-binding/handler.html","searchKeys":["handler","val handler: WithJob.(Flow<T>) -> Unit? = null","dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.handler"]},{"name":"val hasError: Flow<Boolean>","description":"dev.fritz2.headless.foundation.DatabindingProperty.hasError","location":"headless/dev.fritz2.headless.foundation/-databinding-property/has-error.html","searchKeys":["hasError","val hasError: Flow<Boolean>","dev.fritz2.headless.foundation.DatabindingProperty.hasError"]},{"name":"val height: Length","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.LengthValues.height","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-length-values/height.html","searchKeys":["height","val height: Length","dev.fritz2.headless.foundation.utils.floatingui.utils.LengthValues.height"]},{"name":"val id: String?","description":"dev.fritz2.headless.components.CollectionData.id","location":"headless/dev.fritz2.headless.components/-collection-data/id.html","searchKeys":["id","val id: String?","dev.fritz2.headless.components.CollectionData.id"]},{"name":"val id: String?","description":"dev.fritz2.headless.foundation.DatabindingProperty.id","location":"headless/dev.fritz2.headless.foundation/-databinding-property/id.html","searchKeys":["id","val id: String?","dev.fritz2.headless.foundation.DatabindingProperty.id"]},{"name":"val id: String? = null","description":"dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.id","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-data-binding/id.html","searchKeys":["id","val id: String? = null","dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.id"]},{"name":"val idProvider: IdProvider<T, *>?","description":"dev.fritz2.headless.components.CollectionData.idProvider","location":"headless/dev.fritz2.headless.components/-collection-data/id-provider.html","searchKeys":["idProvider","val idProvider: IdProvider<T, *>?","dev.fritz2.headless.components.CollectionData.idProvider"]},{"name":"val index: Int","description":"dev.fritz2.headless.components.Combobox.Item.index","location":"headless/dev.fritz2.headless.components/-combobox/-item/--index--.html","searchKeys":["index","val index: Int","dev.fritz2.headless.components.Combobox.Item.index"]},{"name":"val index: Int","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.index","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/--index--.html","searchKeys":["index","val index: Int","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.index"]},{"name":"val index: Int","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.index","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/--index--.html","searchKeys":["index","val index: Int","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.index"]},{"name":"val index: Int","description":"dev.fritz2.headless.components.TabGroup.TabList.Tab.index","location":"headless/dev.fritz2.headless.components/-tab-group/-tab-list/-tab/--index--.html","searchKeys":["index","val index: Int","dev.fritz2.headless.components.TabGroup.TabList.Tab.index"]},{"name":"val isSame: (T?, T) -> Boolean","description":"dev.fritz2.headless.components.CollectionData.isSame","location":"headless/dev.fritz2.headless.components/-collection-data/is-same.html","searchKeys":["isSame","val isSame: (T?, T) -> Boolean","dev.fritz2.headless.components.CollectionData.isSame"]},{"name":"val isSet: Boolean","description":"dev.fritz2.headless.components.SelectionMode.isSet","location":"headless/dev.fritz2.headless.components/-selection-mode/is-set.html","searchKeys":["isSet","val isSet: Boolean","dev.fritz2.headless.components.SelectionMode.isSet"]},{"name":"val isSet: Boolean","description":"dev.fritz2.headless.foundation.Property.isSet","location":"headless/dev.fritz2.headless.foundation/-property/is-set.html","searchKeys":["isSet","val isSet: Boolean","dev.fritz2.headless.foundation.Property.isSet"]},{"name":"val item: T","description":"dev.fritz2.headless.components.Combobox.QueryResult.ExactMatch.item","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-exact-match/item.html","searchKeys":["item","val item: T","dev.fritz2.headless.components.Combobox.QueryResult.ExactMatch.item"]},{"name":"val items: Combobox.ItemsHook<E, T>","description":"dev.fritz2.headless.components.Combobox.items","location":"headless/dev.fritz2.headless.components/-combobox/items.html","searchKeys":["items","val items: Combobox.ItemsHook<E, T>","dev.fritz2.headless.components.Combobox.items"]},{"name":"val items: List<Combobox.Item<T>>","description":"dev.fritz2.headless.components.Combobox.QueryResult.ItemList.items","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-item-list/items.html","searchKeys":["items","val items: List<Combobox.Item<T>>","dev.fritz2.headless.components.Combobox.QueryResult.ItemList.items"]},{"name":"val items: SharedFlow<List<T>>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.items","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/items.html","searchKeys":["items","val items: SharedFlow<List<T>>","dev.fritz2.headless.components.DataCollection.DataCollectionItems.items"]},{"name":"val last: Boolean = false","description":"dev.fritz2.headless.foundation.FocusOptions.last","location":"headless/dev.fritz2.headless.foundation/-focus-options/last.html","searchKeys":["last","val last: Boolean = false","dev.fritz2.headless.foundation.FocusOptions.last"]},{"name":"val left: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.left","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/left.html","searchKeys":["left","val left: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.left"]},{"name":"val left: Side","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.left","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-values/left.html","searchKeys":["left","val left: Side","dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.left"]},{"name":"val leftEnd: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.leftEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/left-end.html","searchKeys":["leftEnd","val leftEnd: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.leftEnd"]},{"name":"val leftEnd: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.leftEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/left-end.html","searchKeys":["leftEnd","val leftEnd: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.leftEnd"]},{"name":"val leftStart: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.leftStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/left-start.html","searchKeys":["leftStart","val leftStart: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.leftStart"]},{"name":"val leftStart: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.leftStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/left-start.html","searchKeys":["leftStart","val leftStart: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.leftStart"]},{"name":"val message: String","description":"dev.fritz2.headless.validation.ComponentValidationMessage.message","location":"headless/dev.fritz2.headless.validation/-component-validation-message/message.html","searchKeys":["message","val message: String","dev.fritz2.headless.validation.ComponentValidationMessage.message"]},{"name":"val messages: Flow<List<ComponentValidationMessage>>? = null","description":"dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.messages","location":"headless/dev.fritz2.headless.foundation/-databinding-property/-data-binding/messages.html","searchKeys":["messages","val messages: Flow<List<ComponentValidationMessage>>? = null","dev.fritz2.headless.foundation.DatabindingProperty.DataBinding.messages"]},{"name":"val msgs: Flow<List<ComponentValidationMessage>>","description":"dev.fritz2.headless.foundation.ValidationMessages.msgs","location":"headless/dev.fritz2.headless.foundation/-validation-messages/msgs.html","searchKeys":["msgs","val msgs: Flow<List<ComponentValidationMessage>>","dev.fritz2.headless.foundation.ValidationMessages.msgs"]},{"name":"val multi: DatabindingProperty<List<T>>","description":"dev.fritz2.headless.components.SelectionMode.multi","location":"headless/dev.fritz2.headless.components/-selection-mode/multi.html","searchKeys":["multi","val multi: DatabindingProperty<List<T>>","dev.fritz2.headless.components.SelectionMode.multi"]},{"name":"val next: Boolean = false","description":"dev.fritz2.headless.foundation.FocusOptions.next","location":"headless/dev.fritz2.headless.foundation/-focus-options/next.html","searchKeys":["next","val next: Boolean = false","dev.fritz2.headless.foundation.FocusOptions.next"]},{"name":"val noScroll: Boolean = false","description":"dev.fritz2.headless.foundation.FocusOptions.noScroll","location":"headless/dev.fritz2.headless.foundation/-focus-options/no-scroll.html","searchKeys":["noScroll","val noScroll: Boolean = false","dev.fritz2.headless.foundation.FocusOptions.noScroll"]},{"name":"val open: SimpleHandler<Unit>","description":"dev.fritz2.headless.foundation.OpenClose.open","location":"headless/dev.fritz2.headless.foundation/-open-close/open.html","searchKeys":["open","val open: SimpleHandler<Unit>","dev.fritz2.headless.foundation.OpenClose.open"]},{"name":"val openDropdown: Combobox.DropdownOpeningHook<E, T>","description":"dev.fritz2.headless.components.Combobox.openDropdown","location":"headless/dev.fritz2.headless.components/-combobox/open-dropdown.html","searchKeys":["openDropdown","val openDropdown: Combobox.DropdownOpeningHook<E, T>","dev.fritz2.headless.components.Combobox.openDropdown"]},{"name":"val openState: DatabindingProperty<Boolean>","description":"dev.fritz2.headless.foundation.OpenClose.openState","location":"headless/dev.fritz2.headless.foundation/-open-close/open-state.html","searchKeys":["openState","val openState: DatabindingProperty<Boolean>","dev.fritz2.headless.foundation.OpenClose.openState"]},{"name":"val opened: Flow<Boolean>","description":"dev.fritz2.headless.foundation.OpenClose.opened","location":"headless/dev.fritz2.headless.foundation/-open-close/opened.html","searchKeys":["opened","val opened: Flow<Boolean>","dev.fritz2.headless.foundation.OpenClose.opened"]},{"name":"val optionId: String","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.optionId","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/option-id.html","searchKeys":["optionId","val optionId: String","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.optionId"]},{"name":"val optionId: String","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.optionId","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/option-id.html","searchKeys":["optionId","val optionId: String","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.optionId"]},{"name":"val parameter: String","description":"dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.parameter","location":"headless/dev.fritz2.headless.foundation.utils.scrollintoview/-scroll-mode/parameter.html","searchKeys":["parameter","val parameter: String","dev.fritz2.headless.foundation.utils.scrollintoview.ScrollMode.parameter"]},{"name":"val previous: Boolean = false","description":"dev.fritz2.headless.foundation.FocusOptions.previous","location":"headless/dev.fritz2.headless.foundation/-focus-options/previous.html","searchKeys":["previous","val previous: Boolean = false","dev.fritz2.headless.foundation.FocusOptions.previous"]},{"name":"val query: String","description":"dev.fritz2.headless.components.Combobox.QueryResult.ItemList.query","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-item-list/query.html","searchKeys":["query","val query: String","dev.fritz2.headless.components.Combobox.QueryResult.ItemList.query"]},{"name":"val reference: ElementContext","description":"dev.fritz2.headless.foundation.utils.floatingui.core.ElementContextValues.reference","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-element-context-values/reference.html","searchKeys":["reference","val reference: ElementContext","dev.fritz2.headless.foundation.utils.floatingui.core.ElementContextValues.reference"]},{"name":"val referenceHidden: HideStrategy","description":"dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategyValues.referenceHidden","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core.middleware/-hide-strategy-values/reference-hidden.html","searchKeys":["referenceHidden","val referenceHidden: HideStrategy","dev.fritz2.headless.foundation.utils.floatingui.core.middleware.HideStrategyValues.referenceHidden"]},{"name":"val results: Flow<Combobox.QueryResult.ItemList<T>>","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.results","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/results.html","searchKeys":["results","val results: Flow<Combobox.QueryResult.ItemList<T>>","dev.fritz2.headless.components.Combobox.ComboboxItems.results"]},{"name":"val right: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.right","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/right.html","searchKeys":["right","val right: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.right"]},{"name":"val right: Side","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.right","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-values/right.html","searchKeys":["right","val right: Side","dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.right"]},{"name":"val rightEnd: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.rightEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/right-end.html","searchKeys":["rightEnd","val rightEnd: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.rightEnd"]},{"name":"val rightEnd: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.rightEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/right-end.html","searchKeys":["rightEnd","val rightEnd: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.rightEnd"]},{"name":"val rightStart: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.rightStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/right-start.html","searchKeys":["rightStart","val rightStart: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.rightStart"]},{"name":"val rightStart: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.rightStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/right-start.html","searchKeys":["rightStart","val rightStart: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.rightStart"]},{"name":"val scrollIntoView: ScrollIntoViewProperty","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.scrollIntoView","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/scroll-into-view.html","searchKeys":["scrollIntoView","val scrollIntoView: ScrollIntoViewProperty","dev.fritz2.headless.components.DataCollection.DataCollectionItems.scrollIntoView"]},{"name":"val selected: Flow<Boolean>","description":"dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.selected","location":"headless/dev.fritz2.headless.components/-checkbox-group/-checkbox-group-option/selected.html","searchKeys":["selected","val selected: Flow<Boolean>","dev.fritz2.headless.components.CheckboxGroup.CheckboxGroupOption.selected"]},{"name":"val selected: Flow<Boolean>","description":"dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem.selected","location":"headless/dev.fritz2.headless.components/-combobox/-combobox-items/-combobox-item/selected.html","searchKeys":["selected","val selected: Flow<Boolean>","dev.fritz2.headless.components.Combobox.ComboboxItems.ComboboxItem.selected"]},{"name":"val selected: Flow<Boolean>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.selected","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-items/-data-collection-item/selected.html","searchKeys":["selected","val selected: Flow<Boolean>","dev.fritz2.headless.components.DataCollection.DataCollectionItems.DataCollectionItem.selected"]},{"name":"val selected: Flow<Boolean>","description":"dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.selected","location":"headless/dev.fritz2.headless.components/-listbox/-listbox-items/-listbox-item/selected.html","searchKeys":["selected","val selected: Flow<Boolean>","dev.fritz2.headless.components.Listbox.ListboxItems.ListboxItem.selected"]},{"name":"val selected: Flow<Boolean>","description":"dev.fritz2.headless.components.RadioGroup.RadioGroupOption.selected","location":"headless/dev.fritz2.headless.components/-radio-group/-radio-group-option/selected.html","searchKeys":["selected","val selected: Flow<Boolean>","dev.fritz2.headless.components.RadioGroup.RadioGroupOption.selected"]},{"name":"val selected: Flow<Int>","description":"dev.fritz2.headless.components.TabGroup.selected","location":"headless/dev.fritz2.headless.components/-tab-group/selected.html","searchKeys":["selected","val selected: Flow<Int>","dev.fritz2.headless.components.TabGroup.selected"]},{"name":"val selected: Flow<Unit>","description":"dev.fritz2.headless.components.Menu.MenuItems.MenuItem.selected","location":"headless/dev.fritz2.headless.components/-menu/-menu-items/-menu-item/selected.html","searchKeys":["selected","val selected: Flow<Unit>","dev.fritz2.headless.components.Menu.MenuItems.MenuItem.selected"]},{"name":"val selection: SelectionMode<T>","description":"dev.fritz2.headless.components.DataCollection.selection","location":"headless/dev.fritz2.headless.components/-data-collection/selection.html","searchKeys":["selection","val selection: SelectionMode<T>","dev.fritz2.headless.components.DataCollection.selection"]},{"name":"val selectionStrategy: Combobox.SelectionStrategyProperty<E, T>","description":"dev.fritz2.headless.components.Combobox.selectionStrategy","location":"headless/dev.fritz2.headless.components/-combobox/selection-strategy.html","searchKeys":["selectionStrategy","val selectionStrategy: Combobox.SelectionStrategyProperty<E, T>","dev.fritz2.headless.components.Combobox.selectionStrategy"]},{"name":"val severity: Severity","description":"dev.fritz2.headless.validation.ComponentValidationMessage.severity","location":"headless/dev.fritz2.headless.validation/-component-validation-message/severity.html","searchKeys":["severity","val severity: Severity","dev.fritz2.headless.validation.ComponentValidationMessage.severity"]},{"name":"val single: DatabindingProperty<T?>","description":"dev.fritz2.headless.components.SelectionMode.single","location":"headless/dev.fritz2.headless.components/-selection-mode/single.html","searchKeys":["single","val single: DatabindingProperty<T?>","dev.fritz2.headless.components.SelectionMode.single"]},{"name":"val sortBy: Handler<SortingOrder<T>?>","description":"dev.fritz2.headless.components.DataCollection.sortBy","location":"headless/dev.fritz2.headless.components/-data-collection/sort-by.html","searchKeys":["sortBy","val sortBy: Handler<SortingOrder<T>?>","dev.fritz2.headless.components.DataCollection.sortBy"]},{"name":"val sorting: Sorting<T>","description":"dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.sorting","location":"headless/dev.fritz2.headless.components/-data-collection/-data-collection-sort-button/sorting.html","searchKeys":["sorting","val sorting: Sorting<T>","dev.fritz2.headless.components.DataCollection.DataCollectionSortButton.sorting"]},{"name":"val sorting: Sorting<T>","description":"dev.fritz2.headless.foundation.SortingOrder.sorting","location":"headless/dev.fritz2.headless.foundation/-sorting-order/sorting.html","searchKeys":["sorting","val sorting: Sorting<T>","dev.fritz2.headless.foundation.SortingOrder.sorting"]},{"name":"val start: Alignment","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignmentValues.start","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-alignment-values/start.html","searchKeys":["start","val start: Alignment","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignmentValues.start"]},{"name":"val toggle: SimpleHandler<Unit>","description":"dev.fritz2.headless.foundation.OpenClose.toggle","location":"headless/dev.fritz2.headless.foundation/-open-close/toggle.html","searchKeys":["toggle","val toggle: SimpleHandler<Unit>","dev.fritz2.headless.foundation.OpenClose.toggle"]},{"name":"val toggleSorting: SimpleHandler<Sorting<T>>","description":"dev.fritz2.headless.components.DataCollection.toggleSorting","location":"headless/dev.fritz2.headless.components/-data-collection/toggle-sorting.html","searchKeys":["toggleSorting","val toggleSorting: SimpleHandler<Sorting<T>>","dev.fritz2.headless.components.DataCollection.toggleSorting"]},{"name":"val top: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.top","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/top.html","searchKeys":["top","val top: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.top"]},{"name":"val top: Side","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.top","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-side-values/top.html","searchKeys":["top","val top: Side","dev.fritz2.headless.foundation.utils.floatingui.utils.SideValues.top"]},{"name":"val topEnd: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.topEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/top-end.html","searchKeys":["topEnd","val topEnd: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.topEnd"]},{"name":"val topEnd: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.topEnd","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/top-end.html","searchKeys":["topEnd","val topEnd: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.topEnd"]},{"name":"val topStart: AlignedPlacement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.topStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-aligned-placement-values/top-start.html","searchKeys":["topStart","val topStart: AlignedPlacement","dev.fritz2.headless.foundation.utils.floatingui.utils.AlignedPlacementValues.topStart"]},{"name":"val topStart: Placement","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.topStart","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-placement-values/top-start.html","searchKeys":["topStart","val topStart: Placement","dev.fritz2.headless.foundation.utils.floatingui.utils.PlacementValues.topStart"]},{"name":"val truncated: Boolean","description":"dev.fritz2.headless.components.Combobox.QueryResult.ItemList.truncated","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-item-list/truncated.html","searchKeys":["truncated","val truncated: Boolean","dev.fritz2.headless.components.Combobox.QueryResult.ItemList.truncated"]},{"name":"val validationMessages: Flow<List<ComponentValidationMessage>>","description":"dev.fritz2.headless.foundation.DatabindingProperty.validationMessages","location":"headless/dev.fritz2.headless.foundation/-databinding-property/validation-messages.html","searchKeys":["validationMessages","val validationMessages: Flow<List<ComponentValidationMessage>>","dev.fritz2.headless.foundation.DatabindingProperty.validationMessages"]},{"name":"val value: DatabindingProperty<Boolean>","description":"dev.fritz2.headless.components.AbstractSwitch.value","location":"headless/dev.fritz2.headless.components/-abstract-switch/value.html","searchKeys":["value","val value: DatabindingProperty<Boolean>","dev.fritz2.headless.components.AbstractSwitch.value"]},{"name":"val value: DatabindingProperty<Int>","description":"dev.fritz2.headless.components.TabGroup.value","location":"headless/dev.fritz2.headless.components/-tab-group/value.html","searchKeys":["value","val value: DatabindingProperty<Int>","dev.fritz2.headless.components.TabGroup.value"]},{"name":"val value: DatabindingProperty<List<T>>","description":"dev.fritz2.headless.components.CheckboxGroup.value","location":"headless/dev.fritz2.headless.components/-checkbox-group/value.html","searchKeys":["value","val value: DatabindingProperty<List<T>>","dev.fritz2.headless.components.CheckboxGroup.value"]},{"name":"val value: DatabindingProperty<String>","description":"dev.fritz2.headless.components.Textfield.value","location":"headless/dev.fritz2.headless.components/-textfield/value.html","searchKeys":["value","val value: DatabindingProperty<String>","dev.fritz2.headless.components.Textfield.value"]},{"name":"val value: DatabindingProperty<T>","description":"dev.fritz2.headless.components.Listbox.value","location":"headless/dev.fritz2.headless.components/-listbox/value.html","searchKeys":["value","val value: DatabindingProperty<T>","dev.fritz2.headless.components.Listbox.value"]},{"name":"val value: DatabindingProperty<T>","description":"dev.fritz2.headless.components.RadioGroup.value","location":"headless/dev.fritz2.headless.components/-radio-group/value.html","searchKeys":["value","val value: DatabindingProperty<T>","dev.fritz2.headless.components.RadioGroup.value"]},{"name":"val value: DatabindingProperty<T?>","description":"dev.fritz2.headless.components.Combobox.value","location":"headless/dev.fritz2.headless.components/-combobox/value.html","searchKeys":["value","val value: DatabindingProperty<T?>","dev.fritz2.headless.components.Combobox.value"]},{"name":"val value: Int","description":"dev.fritz2.headless.foundation.Direction.value","location":"headless/dev.fritz2.headless.foundation/-direction/value.html","searchKeys":["value","val value: Int","dev.fritz2.headless.foundation.Direction.value"]},{"name":"val value: T","description":"dev.fritz2.headless.components.Combobox.Item.value","location":"headless/dev.fritz2.headless.components/-combobox/-item/value.html","searchKeys":["value","val value: T","dev.fritz2.headless.components.Combobox.Item.value"]},{"name":"val viewport: RootBoundary","description":"dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues.viewport","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.core/-root-boundary-values/viewport.html","searchKeys":["viewport","val viewport: RootBoundary","dev.fritz2.headless.foundation.utils.floatingui.core.RootBoundaryValues.viewport"]},{"name":"val width: Length","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.LengthValues.width","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-length-values/width.html","searchKeys":["width","val width: Length","dev.fritz2.headless.foundation.utils.floatingui.utils.LengthValues.width"]},{"name":"val wrapAround: Boolean = false","description":"dev.fritz2.headless.foundation.FocusOptions.wrapAround","location":"headless/dev.fritz2.headless.foundation/-focus-options/wrap-around.html","searchKeys":["wrapAround","val wrapAround: Boolean = false","dev.fritz2.headless.foundation.FocusOptions.wrapAround"]},{"name":"val x: Axis","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AxisValues.x","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-axis-values/x.html","searchKeys":["x","val x: Axis","dev.fritz2.headless.foundation.utils.floatingui.utils.AxisValues.x"]},{"name":"val y: Axis","description":"dev.fritz2.headless.foundation.utils.floatingui.utils.AxisValues.y","location":"headless/dev.fritz2.headless.foundation.utils.floatingui.utils/-axis-values/y.html","searchKeys":["y","val y: Axis","dev.fritz2.headless.foundation.utils.floatingui.utils.AxisValues.y"]},{"name":"value class ExactMatch<T> : Combobox.QueryResult<T> ","description":"dev.fritz2.headless.components.Combobox.QueryResult.ExactMatch","location":"headless/dev.fritz2.headless.components/-combobox/-query-result/-exact-match/index.html","searchKeys":["ExactMatch","value class ExactMatch<T> : Combobox.QueryResult<T> ","dev.fritz2.headless.components.Combobox.QueryResult.ExactMatch"]},{"name":"var alsoExpr: R.() -> Unit?","description":"dev.fritz2.headless.foundation.Hook.alsoExpr","location":"headless/dev.fritz2.headless.foundation/-hook/also-expr.html","searchKeys":["alsoExpr","var alsoExpr: R.() -> Unit?","dev.fritz2.headless.foundation.Hook.alsoExpr"]},{"name":"var inputDebounceMillis: Long","description":"dev.fritz2.headless.components.Combobox.inputDebounceMillis","location":"headless/dev.fritz2.headless.components/-combobox/input-debounce-millis.html","searchKeys":["inputDebounceMillis","var inputDebounceMillis: Long","dev.fritz2.headless.components.Combobox.inputDebounceMillis"]},{"name":"var itemFormat: (T) -> String","description":"dev.fritz2.headless.components.Combobox.itemFormat","location":"headless/dev.fritz2.headless.components/-combobox/item-format.html","searchKeys":["itemFormat","var itemFormat: (T) -> String","dev.fritz2.headless.components.Combobox.itemFormat"]},{"name":"var maximumDisplayedItems: Int","description":"dev.fritz2.headless.components.Combobox.maximumDisplayedItems","location":"headless/dev.fritz2.headless.components/-combobox/maximum-displayed-items.html","searchKeys":["maximumDisplayedItems","var maximumDisplayedItems: Int","dev.fritz2.headless.components.Combobox.maximumDisplayedItems"]},{"name":"var orientation: Orientation","description":"dev.fritz2.headless.components.TabGroup.orientation","location":"headless/dev.fritz2.headless.components/-tab-group/orientation.html","searchKeys":["orientation","var orientation: Orientation","dev.fritz2.headless.components.TabGroup.orientation"]},{"name":"var renderDebounceMillis: Long","description":"dev.fritz2.headless.components.Combobox.renderDebounceMillis","location":"headless/dev.fritz2.headless.components/-combobox/render-debounce-millis.html","searchKeys":["renderDebounceMillis","var renderDebounceMillis: Long","dev.fritz2.headless.components.Combobox.renderDebounceMillis"]},{"name":"var restoreFocus: Boolean","description":"dev.fritz2.headless.components.Modal.restoreFocus","location":"headless/dev.fritz2.headless.components/-modal/restore-focus.html","searchKeys":["restoreFocus","var restoreFocus: Boolean","dev.fritz2.headless.components.Modal.restoreFocus"]},{"name":"var setInitialFocus: InitialFocus","description":"dev.fritz2.headless.components.Modal.setInitialFocus","location":"headless/dev.fritz2.headless.components/-modal/set-initial-focus.html","searchKeys":["setInitialFocus","var setInitialFocus: InitialFocus","dev.fritz2.headless.components.Modal.setInitialFocus"]},{"name":"var size: PopUpPanelSize","description":"dev.fritz2.headless.foundation.PopUpPanel.size","location":"headless/dev.fritz2.headless.foundation/-pop-up-panel/size.html","searchKeys":["size","var size: PopUpPanelSize","dev.fritz2.headless.foundation.PopUpPanel.size"]},{"name":"fun <T> Request.bodyJson(value: T, serializer: KSerializer<T>, json: Json = lenientJson): Request","description":"dev.fritz2.remote.bodyJson","location":"serialization/dev.fritz2.remote/body-json.html","searchKeys":["bodyJson","fun <T> Request.bodyJson(value: T, serializer: KSerializer<T>, json: Json = lenientJson): Request","dev.fritz2.remote.bodyJson"]},{"name":"inline fun <T> Request.bodyJson(value: T, json: Json = lenientJson): Request","description":"dev.fritz2.remote.bodyJson","location":"serialization/dev.fritz2.remote/body-json.html","searchKeys":["bodyJson","inline fun <T> Request.bodyJson(value: T, json: Json = lenientJson): Request","dev.fritz2.remote.bodyJson"]},{"name":"inline suspend fun <T> Response.decoded(json: Json = lenientJson): T","description":"dev.fritz2.remote.decoded","location":"serialization/dev.fritz2.remote/decoded.html","searchKeys":["decoded","inline suspend fun <T> Response.decoded(json: Json = lenientJson): T","dev.fritz2.remote.decoded"]},{"name":"suspend fun <T> Response.decoded(serializer: KSerializer<T>, json: Json = lenientJson): T","description":"dev.fritz2.remote.decoded","location":"serialization/dev.fritz2.remote/decoded.html","searchKeys":["decoded","suspend fun <T> Response.decoded(serializer: KSerializer<T>, json: Json = lenientJson): T","dev.fritz2.remote.decoded"]},{"name":"abstract class Authentication<P> : Middleware","description":"dev.fritz2.remote.Authentication","location":"core/dev.fritz2.remote/-authentication/index.html","searchKeys":["Authentication","abstract class Authentication<P> : Middleware","dev.fritz2.remote.Authentication"]},{"name":"abstract class WebComponent<E : Element>(observeAttributes: Boolean = true)","description":"dev.fritz2.webcomponents.WebComponent","location":"core/dev.fritz2.webcomponents/-web-component/index.html","searchKeys":["WebComponent","abstract class WebComponent<E : Element>(observeAttributes: Boolean = true)","dev.fritz2.webcomponents.WebComponent"]},{"name":"abstract fun <N : Node, W : WithDomNode<N>> register(element: W, content: (W) -> Unit): W","description":"dev.fritz2.core.RenderContext.register","location":"core/dev.fritz2.core/-render-context/register.html","searchKeys":["register","abstract fun <N : Node, W : WithDomNode<N>> register(element: W, content: (W) -> Unit): W","dev.fritz2.core.RenderContext.register"]},{"name":"abstract fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","description":"dev.fritz2.core.Patch.map","location":"core/dev.fritz2.core/-patch/map.html","searchKeys":["map","abstract fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","dev.fritz2.core.Patch.map"]},{"name":"abstract fun <X : Event> subscribe(eventName: String, capture: Boolean = false, selector: X.() -> Boolean = { true }): Listener<X, T>","description":"dev.fritz2.core.WithEvents.subscribe","location":"core/dev.fritz2.core/-with-events/subscribe.html","searchKeys":["subscribe","abstract fun <X : Event> subscribe(eventName: String, capture: Boolean = false, selector: X.() -> Boolean = { true }): Listener<X, T>","dev.fritz2.core.WithEvents.subscribe"]},{"name":"abstract fun RenderContext.init(element: HTMLElement, shadowRoot: ShadowRoot): HtmlTag<E>","description":"dev.fritz2.webcomponents.WebComponent.init","location":"core/dev.fritz2.webcomponents/-web-component/init.html","searchKeys":["init","abstract fun RenderContext.init(element: HTMLElement, shadowRoot: ShadowRoot): HtmlTag<E>","dev.fritz2.webcomponents.WebComponent.init"]},{"name":"abstract fun addAuthentication(request: Request, principal: P?): Request","description":"dev.fritz2.remote.Authentication.addAuthentication","location":"core/dev.fritz2.remote/-authentication/add-authentication.html","searchKeys":["addAuthentication","abstract fun addAuthentication(request: Request, principal: P?): Request","dev.fritz2.remote.Authentication.addAuthentication"]},{"name":"abstract fun afterMount(target: WithDomNode<Element>, payload: Any? = null, handler: DomLifecycleHandler)","description":"dev.fritz2.core.MountPoint.afterMount","location":"core/dev.fritz2.core/-mount-point/after-mount.html","searchKeys":["afterMount","abstract fun afterMount(target: WithDomNode<Element>, payload: Any? = null, handler: DomLifecycleHandler)","dev.fritz2.core.MountPoint.afterMount"]},{"name":"abstract fun asShort(): Short","description":"dev.fritz2.remote.SessionState.asShort","location":"core/dev.fritz2.remote/-session-state/as-short.html","searchKeys":["asShort","abstract fun asShort(): Short","dev.fritz2.remote.SessionState.asShort"]},{"name":"abstract fun authenticate()","description":"dev.fritz2.remote.Authentication.authenticate","location":"core/dev.fritz2.remote/-authentication/authenticate.html","searchKeys":["authenticate","abstract fun authenticate()","dev.fritz2.remote.Authentication.authenticate"]},{"name":"abstract fun beforeUnmount(target: WithDomNode<Element>, payload: Any? = null, handler: DomLifecycleHandler)","description":"dev.fritz2.core.MountPoint.beforeUnmount","location":"core/dev.fritz2.core/-mount-point/before-unmount.html","searchKeys":["beforeUnmount","abstract fun beforeUnmount(target: WithDomNode<Element>, payload: Any? = null, handler: DomLifecycleHandler)","dev.fritz2.core.MountPoint.beforeUnmount"]},{"name":"abstract fun className(value: Flow<String>, initial: String = \"\")","description":"dev.fritz2.core.Tag.className","location":"core/dev.fritz2.core/-tag/class-name.html","searchKeys":["className","abstract fun className(value: Flow<String>, initial: String = \"\")","dev.fritz2.core.Tag.className"]},{"name":"abstract fun className(value: String)","description":"dev.fritz2.core.Tag.className","location":"core/dev.fritz2.core/-tag/class-name.html","searchKeys":["className","abstract fun className(value: String)","dev.fritz2.core.Tag.className"]},{"name":"abstract fun deserialize(hash: String): T","description":"dev.fritz2.routing.Route.deserialize","location":"core/dev.fritz2.routing/-route/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(hash: String): T","dev.fritz2.routing.Route.deserialize"]},{"name":"abstract fun get(parent: P): T","description":"dev.fritz2.core.Lens.get","location":"core/dev.fritz2.core/-lens/get.html","searchKeys":["get","abstract fun get(parent: P): T","dev.fritz2.core.Lens.get"]},{"name":"abstract fun serialize(route: T): String","description":"dev.fritz2.routing.Route.serialize","location":"core/dev.fritz2.routing/-route/serialize.html","searchKeys":["serialize","abstract fun serialize(route: T): String","dev.fritz2.routing.Route.serialize"]},{"name":"abstract fun set(parent: P, value: T): P","description":"dev.fritz2.core.Lens.set","location":"core/dev.fritz2.core/-lens/set.html","searchKeys":["set","abstract fun set(parent: P, value: T): P","dev.fritz2.core.Lens.set"]},{"name":"abstract suspend fun enqueue(update: Update<D>)","description":"dev.fritz2.core.Store.enqueue","location":"core/dev.fritz2.core/-store/enqueue.html","searchKeys":["enqueue","abstract suspend fun enqueue(update: Update<D>)","dev.fritz2.core.Store.enqueue"]},{"name":"abstract suspend fun enrichRequest(request: Request): Request","description":"dev.fritz2.remote.Middleware.enrichRequest","location":"core/dev.fritz2.remote/-middleware/enrich-request.html","searchKeys":["enrichRequest","abstract suspend fun enrichRequest(request: Request): Request","dev.fritz2.remote.Middleware.enrichRequest"]},{"name":"abstract suspend fun handleResponse(response: Response): Response","description":"dev.fritz2.remote.Middleware.handleResponse","location":"core/dev.fritz2.remote/-middleware/handle-response.html","searchKeys":["handleResponse","abstract suspend fun handleResponse(response: Response): Response","dev.fritz2.remote.Middleware.handleResponse"]},{"name":"abstract val alt: Boolean","description":"dev.fritz2.core.ModifierShortcut.alt","location":"core/dev.fritz2.core/-modifier-shortcut/alt.html","searchKeys":["alt","abstract val alt: Boolean","dev.fritz2.core.ModifierShortcut.alt"]},{"name":"abstract val annex: RenderContext","description":"dev.fritz2.core.Tag.annex","location":"core/dev.fritz2.core/-tag/annex.html","searchKeys":["annex","abstract val annex: RenderContext","dev.fritz2.core.Tag.annex"]},{"name":"abstract val baseClass: String?","description":"dev.fritz2.core.Tag.baseClass","location":"core/dev.fritz2.core/-tag/base-class.html","searchKeys":["baseClass","abstract val baseClass: String?","dev.fritz2.core.Tag.baseClass"]},{"name":"abstract val ctrl: Boolean","description":"dev.fritz2.core.ModifierShortcut.ctrl","location":"core/dev.fritz2.core/-modifier-shortcut/ctrl.html","searchKeys":["ctrl","abstract val ctrl: Boolean","dev.fritz2.core.ModifierShortcut.ctrl"]},{"name":"abstract val current: D","description":"dev.fritz2.core.Store.current","location":"core/dev.fritz2.core/-store/current.html","searchKeys":["current","abstract val current: D","dev.fritz2.core.Store.current"]},{"name":"abstract val data: D","description":"dev.fritz2.core.Inspector.data","location":"core/dev.fritz2.core/-inspector/data.html","searchKeys":["data","abstract val data: D","dev.fritz2.core.Inspector.data"]},{"name":"abstract val data: Flow<D>","description":"dev.fritz2.core.Store.data","location":"core/dev.fritz2.core/-store/data.html","searchKeys":["data","abstract val data: Flow<D>","dev.fritz2.core.Store.data"]},{"name":"abstract val default: T","description":"dev.fritz2.routing.Route.default","location":"core/dev.fritz2.routing/-route/default.html","searchKeys":["default","abstract val default: T","dev.fritz2.routing.Route.default"]},{"name":"abstract val domNode: N","description":"dev.fritz2.core.WithDomNode.domNode","location":"core/dev.fritz2.core/-with-dom-node/dom-node.html","searchKeys":["domNode","abstract val domNode: N","dev.fritz2.core.WithDomNode.domNode"]},{"name":"abstract val id: String","description":"dev.fritz2.core.Lens.id","location":"core/dev.fritz2.core/-lens/id.html","searchKeys":["id","abstract val id: String","dev.fritz2.core.Lens.id"]},{"name":"abstract val id: String","description":"dev.fritz2.core.Store.id","location":"core/dev.fritz2.core/-store/id.html","searchKeys":["id","abstract val id: String","dev.fritz2.core.Store.id"]},{"name":"abstract val id: String?","description":"dev.fritz2.core.Tag.id","location":"core/dev.fritz2.core/-tag/id.html","searchKeys":["id","abstract val id: String?","dev.fritz2.core.Tag.id"]},{"name":"abstract val isError: Boolean","description":"dev.fritz2.validation.ValidationMessage.isError","location":"core/dev.fritz2.validation/-validation-message/is-error.html","searchKeys":["isError","abstract val isError: Boolean","dev.fritz2.validation.ValidationMessage.isError"]},{"name":"abstract val job: Job","description":"dev.fritz2.core.Store.job","location":"core/dev.fritz2.core/-store/job.html","searchKeys":["job","abstract val job: Job","dev.fritz2.core.Store.job"]},{"name":"abstract val job: Job","description":"dev.fritz2.core.WithJob.job","location":"core/dev.fritz2.core/-with-job/job.html","searchKeys":["job","abstract val job: Job","dev.fritz2.core.WithJob.job"]},{"name":"abstract val meta: Boolean","description":"dev.fritz2.core.ModifierShortcut.meta","location":"core/dev.fritz2.core/-modifier-shortcut/meta.html","searchKeys":["meta","abstract val meta: Boolean","dev.fritz2.core.ModifierShortcut.meta"]},{"name":"abstract val path: String","description":"dev.fritz2.core.Inspector.path","location":"core/dev.fritz2.core/-inspector/path.html","searchKeys":["path","abstract val path: String","dev.fritz2.core.Inspector.path"]},{"name":"abstract val path: String","description":"dev.fritz2.core.Store.path","location":"core/dev.fritz2.core/-store/path.html","searchKeys":["path","abstract val path: String","dev.fritz2.core.Store.path"]},{"name":"abstract val path: String","description":"dev.fritz2.validation.ValidationMessage.path","location":"core/dev.fritz2.validation/-validation-message/path.html","searchKeys":["path","abstract val path: String","dev.fritz2.validation.ValidationMessage.path"]},{"name":"abstract val process: (Flow<A>, Job) -> Unit","description":"dev.fritz2.core.Handler.process","location":"core/dev.fritz2.core/-handler/process.html","searchKeys":["process","abstract val process: (Flow<A>, Job) -> Unit","dev.fritz2.core.Handler.process"]},{"name":"abstract val scope: Scope","description":"dev.fritz2.core.WithScope.scope","location":"core/dev.fritz2.core/-with-scope/scope.html","searchKeys":["scope","abstract val scope: Scope","dev.fritz2.core.WithScope.scope"]},{"name":"abstract val shift: Boolean","description":"dev.fritz2.core.ModifierShortcut.shift","location":"core/dev.fritz2.core/-modifier-shortcut/shift.html","searchKeys":["shift","abstract val shift: Boolean","dev.fritz2.core.ModifierShortcut.shift"]},{"name":"abstract val update: Handler<D>","description":"dev.fritz2.core.Store.update","location":"core/dev.fritz2.core/-store/update.html","searchKeys":["update","abstract val update: Handler<D>","dev.fritz2.core.Store.update"]},{"name":"annotation class HtmlTagMarker","description":"dev.fritz2.core.HtmlTagMarker","location":"core/dev.fritz2.core/-html-tag-marker/index.html","searchKeys":["HtmlTagMarker","annotation class HtmlTagMarker","dev.fritz2.core.HtmlTagMarker"]},{"name":"annotation class Lenses","description":"dev.fritz2.core.Lenses","location":"core/dev.fritz2.core/-lenses/index.html","searchKeys":["Lenses","annotation class Lenses","dev.fritz2.core.Lenses"]},{"name":"annotation class NoLens","description":"dev.fritz2.core.NoLens","location":"core/dev.fritz2.core/-no-lens/index.html","searchKeys":["NoLens","annotation class NoLens","dev.fritz2.core.NoLens"]},{"name":"class CloseException(message: String, throwable: Throwable) : Exception","description":"dev.fritz2.remote.CloseException","location":"core/dev.fritz2.remote/-close-exception/index.html","searchKeys":["CloseException","class CloseException(message: String, throwable: Throwable) : Exception","dev.fritz2.remote.CloseException"]},{"name":"class Closed(val event: CloseEvent) : SessionState","description":"dev.fritz2.remote.SessionState.Closed","location":"core/dev.fritz2.remote/-session-state/-closed/index.html","searchKeys":["Closed","class Closed(val event: CloseEvent) : SessionState","dev.fritz2.remote.SessionState.Closed"]},{"name":"class CollectionLensGetException(message: String) : Exception","description":"dev.fritz2.core.CollectionLensGetException","location":"core/dev.fritz2.core/-collection-lens-get-exception/index.html","searchKeys":["CollectionLensGetException","class CollectionLensGetException(message: String) : Exception","dev.fritz2.core.CollectionLensGetException"]},{"name":"class CollectionLensSetException(message: String) : Exception","description":"dev.fritz2.core.CollectionLensSetException","location":"core/dev.fritz2.core/-collection-lens-set-exception/index.html","searchKeys":["CollectionLensSetException","class CollectionLensSetException(message: String) : Exception","dev.fritz2.core.CollectionLensSetException"]},{"name":"class ConnectionException(message: String, throwable: Throwable) : Exception","description":"dev.fritz2.remote.ConnectionException","location":"core/dev.fritz2.remote/-connection-exception/index.html","searchKeys":["ConnectionException","class ConnectionException(message: String, throwable: Throwable) : Exception","dev.fritz2.remote.ConnectionException"]},{"name":"class Delete<T>(val start: Int, val count: Int = 1) : Patch<T> ","description":"dev.fritz2.core.Patch.Delete","location":"core/dev.fritz2.core/-patch/-delete/index.html","searchKeys":["Delete","class Delete<T>(val start: Int, val count: Int = 1) : Patch<T> ","dev.fritz2.core.Patch.Delete"]},{"name":"class DomNodeList(base: NodeList) : AbstractList<Node> ","description":"dev.fritz2.core.DomNodeList","location":"core/dev.fritz2.core/-dom-node-list/index.html","searchKeys":["DomNodeList","class DomNodeList(base: NodeList) : AbstractList<Node> ","dev.fritz2.core.DomNodeList"]},{"name":"class EmittingHandler<A, E>(collectWithChannel: (Flow<A>, FlowCollector<E>, Job) -> Unit, flow: MutableSharedFlow<E> = MutableSharedFlow()) : Handler<A> , Flow<E> ","description":"dev.fritz2.core.EmittingHandler","location":"core/dev.fritz2.core/-emitting-handler/index.html","searchKeys":["EmittingHandler","class EmittingHandler<A, E>(collectWithChannel: (Flow<A>, FlowCollector<E>, Job) -> Unit, flow: MutableSharedFlow<E> = MutableSharedFlow()) : Handler<A> , Flow<E> ","dev.fritz2.core.EmittingHandler"]},{"name":"class History<T>(capacity: Int, initialEntries: List<T>, val job: Job) : WithJob","description":"dev.fritz2.history.History","location":"core/dev.fritz2.history/-history/index.html","searchKeys":["History","class History<T>(capacity: Int, initialEntries: List<T>, val job: Job) : WithJob","dev.fritz2.history.History"]},{"name":"class Insert<T>(val element: T, val index: Int) : Patch<T> ","description":"dev.fritz2.core.Patch.Insert","location":"core/dev.fritz2.core/-patch/-insert/index.html","searchKeys":["Insert","class Insert<T>(val element: T, val index: Int) : Patch<T> ","dev.fritz2.core.Patch.Insert"]},{"name":"class InsertMany<T>(val elements: List<T>, val index: Int) : Patch<T> ","description":"dev.fritz2.core.Patch.InsertMany","location":"core/dev.fritz2.core/-patch/-insert-many/index.html","searchKeys":["InsertMany","class InsertMany<T>(val elements: List<T>, val index: Int) : Patch<T> ","dev.fritz2.core.Patch.InsertMany"]},{"name":"class MountTargetNotFoundException(message: String) : Exception","description":"dev.fritz2.core.MountTargetNotFoundException","location":"core/dev.fritz2.core/-mount-target-not-found-exception/index.html","searchKeys":["MountTargetNotFoundException","class MountTargetNotFoundException(message: String) : Exception","dev.fritz2.core.MountTargetNotFoundException"]},{"name":"class Move<T>(val from: Int, val to: Int) : Patch<T> ","description":"dev.fritz2.core.Patch.Move","location":"core/dev.fritz2.core/-patch/-move/index.html","searchKeys":["Move","class Move<T>(val from: Int, val to: Int) : Patch<T> ","dev.fritz2.core.Patch.Move"]},{"name":"class OnlyOnceFlow<T>(value: T) : Flow<T> ","description":"dev.fritz2.core.OnlyOnceFlow","location":"core/dev.fritz2.core/-only-once-flow/index.html","searchKeys":["OnlyOnceFlow","class OnlyOnceFlow<T>(value: T) : Flow<T> ","dev.fritz2.core.OnlyOnceFlow"]},{"name":"class Open(val event: Event) : SessionState","description":"dev.fritz2.remote.SessionState.Open","location":"core/dev.fritz2.remote/-session-state/-open/index.html","searchKeys":["Open","class Open(val event: Event) : SessionState","dev.fritz2.remote.SessionState.Open"]},{"name":"class RootInspector<T>(val data: T) : Inspector<T> ","description":"dev.fritz2.core.RootInspector","location":"core/dev.fritz2.core/-root-inspector/index.html","searchKeys":["RootInspector","class RootInspector<T>(val data: T) : Inspector<T> ","dev.fritz2.core.RootInspector"]},{"name":"class ScopeContext(current: Scope)","description":"dev.fritz2.core.ScopeContext","location":"core/dev.fritz2.core/-scope-context/index.html","searchKeys":["ScopeContext","class ScopeContext(current: Scope)","dev.fritz2.core.ScopeContext"]},{"name":"class SendException(message: String) : Exception","description":"dev.fritz2.remote.SendException","location":"core/dev.fritz2.remote/-send-exception/index.html","searchKeys":["SendException","class SendException(message: String) : Exception","dev.fritz2.remote.SendException"]},{"name":"class SubInspector<P, T>(val parent: Inspector<P>, lens: Lens<P, T>) : Inspector<T> ","description":"dev.fritz2.core.SubInspector","location":"core/dev.fritz2.core/-sub-inspector/index.html","searchKeys":["SubInspector","class SubInspector<P, T>(val parent: Inspector<P>, lens: Lens<P, T>) : Inspector<T> ","dev.fritz2.core.SubInspector"]},{"name":"class SubStore<P, D>(val parent: Store<P>, lens: Lens<P, D>) : Store<D> ","description":"dev.fritz2.core.SubStore","location":"core/dev.fritz2.core/-sub-store/index.html","searchKeys":["SubStore","class SubStore<P, D>(val parent: Store<P>, lens: Lens<P, D>) : Store<D> ","dev.fritz2.core.SubStore"]},{"name":"class SvgTag(tagName: String, id: String? = null, baseClass: String? = null, job: Job, scope: Scope) : HtmlTag<SVGElement> ","description":"dev.fritz2.core.SvgTag","location":"core/dev.fritz2.core/-svg-tag/index.html","searchKeys":["SvgTag","class SvgTag(tagName: String, id: String? = null, baseClass: String? = null, job: Job, scope: Scope) : HtmlTag<SVGElement> ","dev.fritz2.core.SvgTag"]},{"name":"class Tracker(debounceTimeout: Long)","description":"dev.fritz2.tracking.Tracker","location":"core/dev.fritz2.tracking/-tracker/index.html","searchKeys":["Tracker","class Tracker(debounceTimeout: Long)","dev.fritz2.tracking.Tracker"]},{"name":"class Transition(val enter: String? = null, val enterStart: String? = null, val enterEnd: String? = null, val leave: String? = null, val leaveStart: String? = null, val leaveEnd: String? = null)","description":"dev.fritz2.core.Transition","location":"core/dev.fritz2.core/-transition/index.html","searchKeys":["Transition","class Transition(val enter: String? = null, val enterStart: String? = null, val enterEnd: String? = null, val leave: String? = null, val leaveStart: String? = null, val leaveEnd: String? = null)","dev.fritz2.core.Transition"]},{"name":"const val FRITZ2_GLOBAL_STYLESHEET_ID: String","description":"dev.fritz2.core.FRITZ2_GLOBAL_STYLESHEET_ID","location":"core/dev.fritz2.core/-f-r-i-t-z2_-g-l-o-b-a-l_-s-t-y-l-e-s-h-e-e-t_-i-d.html","searchKeys":["FRITZ2_GLOBAL_STYLESHEET_ID","const val FRITZ2_GLOBAL_STYLESHEET_ID: String","dev.fritz2.core.FRITZ2_GLOBAL_STYLESHEET_ID"]},{"name":"const val MOUNT_POINT_STYLE_CLASS: String","description":"dev.fritz2.core.MOUNT_POINT_STYLE_CLASS","location":"core/dev.fritz2.core/-m-o-u-n-t_-p-o-i-n-t_-s-t-y-l-e_-c-l-a-s-s.html","searchKeys":["MOUNT_POINT_STYLE_CLASS","const val MOUNT_POINT_STYLE_CLASS: String","dev.fritz2.core.MOUNT_POINT_STYLE_CLASS"]},{"name":"const val SVG_XMLNS: String","description":"dev.fritz2.core.SVG_XMLNS","location":"core/dev.fritz2.core/-s-v-g_-x-m-l-n-s.html","searchKeys":["SVG_XMLNS","const val SVG_XMLNS: String","dev.fritz2.core.SVG_XMLNS"]},{"name":"constructor()","description":"dev.fritz2.remote.Authentication.Authentication","location":"core/dev.fritz2.remote/-authentication/-authentication.html","searchKeys":["Authentication","constructor()","dev.fritz2.remote.Authentication.Authentication"]},{"name":"constructor(base: NodeList)","description":"dev.fritz2.core.DomNodeList.DomNodeList","location":"core/dev.fritz2.core/-dom-node-list/-dom-node-list.html","searchKeys":["DomNodeList","constructor(base: NodeList)","dev.fritz2.core.DomNodeList.DomNodeList"]},{"name":"constructor(baseUrl: String = \"\", protocols: Array<out String> = emptyArray())","description":"dev.fritz2.remote.Socket.Socket","location":"core/dev.fritz2.remote/-socket/-socket.html","searchKeys":["Socket","constructor(baseUrl: String = \"\", protocols: Array<out String> = emptyArray())","dev.fritz2.remote.Socket.Socket"]},{"name":"constructor(capacity: Int, initialEntries: List<T>, job: Job)","description":"dev.fritz2.history.History.History","location":"core/dev.fritz2.history/-history/-history.html","searchKeys":["History","constructor(capacity: Int, initialEntries: List<T>, job: Job)","dev.fritz2.history.History.History"]},{"name":"constructor(collectWithChannel: (Flow<A>, FlowCollector<E>, Job) -> Unit, flow: MutableSharedFlow<E> = MutableSharedFlow())","description":"dev.fritz2.core.EmittingHandler.EmittingHandler","location":"core/dev.fritz2.core/-emitting-handler/-emitting-handler.html","searchKeys":["EmittingHandler","constructor(collectWithChannel: (Flow<A>, FlowCollector<E>, Job) -> Unit, flow: MutableSharedFlow<E> = MutableSharedFlow())","dev.fritz2.core.EmittingHandler.EmittingHandler"]},{"name":"constructor(current: Scope)","description":"dev.fritz2.core.ScopeContext.ScopeContext","location":"core/dev.fritz2.core/-scope-context/-scope-context.html","searchKeys":["ScopeContext","constructor(current: Scope)","dev.fritz2.core.ScopeContext.ScopeContext"]},{"name":"constructor(data: T)","description":"dev.fritz2.core.RootInspector.RootInspector","location":"core/dev.fritz2.core/-root-inspector/-root-inspector.html","searchKeys":["RootInspector","constructor(data: T)","dev.fritz2.core.RootInspector.RootInspector"]},{"name":"constructor(debounceTimeout: Long)","description":"dev.fritz2.tracking.Tracker.Tracker","location":"core/dev.fritz2.tracking/-tracker/-tracker.html","searchKeys":["Tracker","constructor(debounceTimeout: Long)","dev.fritz2.tracking.Tracker.Tracker"]},{"name":"constructor(default: Map<String, String> = emptyMap())","description":"dev.fritz2.routing.MapRoute.MapRoute","location":"core/dev.fritz2.routing/-map-route/-map-route.html","searchKeys":["MapRoute","constructor(default: Map<String, String> = emptyMap())","dev.fritz2.routing.MapRoute.MapRoute"]},{"name":"constructor(default: String = \"\")","description":"dev.fritz2.routing.StringRoute.StringRoute","location":"core/dev.fritz2.routing/-string-route/-string-route.html","searchKeys":["StringRoute","constructor(default: String = \"\")","dev.fritz2.routing.StringRoute.StringRoute"]},{"name":"constructor(defaultRoute: Map<String, String> = emptyMap(), job: Job)","description":"dev.fritz2.routing.MapRouter.MapRouter","location":"core/dev.fritz2.routing/-map-router/-map-router.html","searchKeys":["MapRouter","constructor(defaultRoute: Map<String, String> = emptyMap(), job: Job)","dev.fritz2.routing.MapRouter.MapRouter"]},{"name":"constructor(defaultRoute: Route<T>, job: Job)","description":"dev.fritz2.routing.Router.Router","location":"core/dev.fritz2.routing/-router/-router.html","searchKeys":["Router","constructor(defaultRoute: Route<T>, job: Job)","dev.fritz2.routing.Router.Router"]},{"name":"constructor(element: T, index: Int)","description":"dev.fritz2.core.Patch.Insert.Insert","location":"core/dev.fritz2.core/-patch/-insert/-insert.html","searchKeys":["Insert","constructor(element: T, index: Int)","dev.fritz2.core.Patch.Insert.Insert"]},{"name":"constructor(elements: List<T>, index: Int)","description":"dev.fritz2.core.Patch.InsertMany.InsertMany","location":"core/dev.fritz2.core/-patch/-insert-many/-insert-many.html","searchKeys":["InsertMany","constructor(elements: List<T>, index: Int)","dev.fritz2.core.Patch.InsertMany.InsertMany"]},{"name":"constructor(enter: String? = null, enterStart: String? = null, enterEnd: String? = null, leave: String? = null, leaveStart: String? = null, leaveEnd: String? = null)","description":"dev.fritz2.core.Transition.Transition","location":"core/dev.fritz2.core/-transition/-transition.html","searchKeys":["Transition","constructor(enter: String? = null, enterStart: String? = null, enterEnd: String? = null, leave: String? = null, leaveStart: String? = null, leaveEnd: String? = null)","dev.fritz2.core.Transition.Transition"]},{"name":"constructor(entries: HashMap<Scope.Key<*>, Any> = hashMapOf())","description":"dev.fritz2.core.Scope.Scope","location":"core/dev.fritz2.core/-scope/-scope.html","searchKeys":["Scope","constructor(entries: HashMap<Scope.Key<*>, Any> = hashMapOf())","dev.fritz2.core.Scope.Scope"]},{"name":"constructor(event: CloseEvent)","description":"dev.fritz2.remote.SessionState.Closed.Closed","location":"core/dev.fritz2.remote/-session-state/-closed/-closed.html","searchKeys":["Closed","constructor(event: CloseEvent)","dev.fritz2.remote.SessionState.Closed.Closed"]},{"name":"constructor(event: Event)","description":"dev.fritz2.remote.SessionState.Open.Open","location":"core/dev.fritz2.remote/-session-state/-open/-open.html","searchKeys":["Open","constructor(event: Event)","dev.fritz2.remote.SessionState.Open.Open"]},{"name":"constructor(event: KeyboardEvent)","description":"dev.fritz2.core.Shortcut.Shortcut","location":"core/dev.fritz2.core/-shortcut/-shortcut.html","searchKeys":["Shortcut","constructor(event: KeyboardEvent)","dev.fritz2.core.Shortcut.Shortcut"]},{"name":"constructor(events: Flow<X>)","description":"dev.fritz2.core.Listener.Listener","location":"core/dev.fritz2.core/-listener/-listener.html","searchKeys":["Listener","constructor(events: Flow<X>)","dev.fritz2.core.Listener.Listener"]},{"name":"constructor(from: Int, to: Int)","description":"dev.fritz2.core.Patch.Move.Move","location":"core/dev.fritz2.core/-patch/-move/-move.html","searchKeys":["Move","constructor(from: Int, to: Int)","dev.fritz2.core.Patch.Move.Move"]},{"name":"constructor(initialData: D, job: Job, id: String = Id.next())","description":"dev.fritz2.core.RootStore.RootStore","location":"core/dev.fritz2.core/-root-store/-root-store.html","searchKeys":["RootStore","constructor(initialData: D, job: Job, id: String = Id.next())","dev.fritz2.core.RootStore.RootStore"]},{"name":"constructor(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job, validateAfterUpdate: Boolean = true, id: String = Id.next())","description":"dev.fritz2.validation.ValidatingStore.ValidatingStore","location":"core/dev.fritz2.validation/-validating-store/-validating-store.html","searchKeys":["ValidatingStore","constructor(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job, validateAfterUpdate: Boolean = true, id: String = Id.next())","dev.fritz2.validation.ValidatingStore.ValidatingStore"]},{"name":"constructor(key: String, ctrl: Boolean = false, alt: Boolean = false, shift: Boolean = false, meta: Boolean = false)","description":"dev.fritz2.core.Shortcut.Shortcut","location":"core/dev.fritz2.core/-shortcut/-shortcut.html","searchKeys":["Shortcut","constructor(key: String, ctrl: Boolean = false, alt: Boolean = false, shift: Boolean = false, meta: Boolean = false)","dev.fritz2.core.Shortcut.Shortcut"]},{"name":"constructor(message: String)","description":"dev.fritz2.core.CollectionLensGetException.CollectionLensGetException","location":"core/dev.fritz2.core/-collection-lens-get-exception/-collection-lens-get-exception.html","searchKeys":["CollectionLensGetException","constructor(message: String)","dev.fritz2.core.CollectionLensGetException.CollectionLensGetException"]},{"name":"constructor(message: String)","description":"dev.fritz2.core.CollectionLensSetException.CollectionLensSetException","location":"core/dev.fritz2.core/-collection-lens-set-exception/-collection-lens-set-exception.html","searchKeys":["CollectionLensSetException","constructor(message: String)","dev.fritz2.core.CollectionLensSetException.CollectionLensSetException"]},{"name":"constructor(message: String)","description":"dev.fritz2.core.MountTargetNotFoundException.MountTargetNotFoundException","location":"core/dev.fritz2.core/-mount-target-not-found-exception/-mount-target-not-found-exception.html","searchKeys":["MountTargetNotFoundException","constructor(message: String)","dev.fritz2.core.MountTargetNotFoundException.MountTargetNotFoundException"]},{"name":"constructor(message: String)","description":"dev.fritz2.remote.SendException.SendException","location":"core/dev.fritz2.remote/-send-exception/-send-exception.html","searchKeys":["SendException","constructor(message: String)","dev.fritz2.remote.SendException.SendException"]},{"name":"constructor(message: String, throwable: Throwable)","description":"dev.fritz2.remote.CloseException.CloseException","location":"core/dev.fritz2.remote/-close-exception/-close-exception.html","searchKeys":["CloseException","constructor(message: String, throwable: Throwable)","dev.fritz2.remote.CloseException.CloseException"]},{"name":"constructor(message: String, throwable: Throwable)","description":"dev.fritz2.remote.ConnectionException.ConnectionException","location":"core/dev.fritz2.remote/-connection-exception/-connection-exception.html","searchKeys":["ConnectionException","constructor(message: String, throwable: Throwable)","dev.fritz2.remote.ConnectionException.ConnectionException"]},{"name":"constructor(name: String)","description":"dev.fritz2.core.Scope.Key.Key","location":"core/dev.fritz2.core/-scope/-key/-key.html","searchKeys":["Key","constructor(name: String)","dev.fritz2.core.Scope.Key.Key"]},{"name":"constructor(observeAttributes: Boolean = true)","description":"dev.fritz2.webcomponents.WebComponent.WebComponent","location":"core/dev.fritz2.webcomponents/-web-component/-web-component.html","searchKeys":["WebComponent","constructor(observeAttributes: Boolean = true)","dev.fritz2.webcomponents.WebComponent.WebComponent"]},{"name":"constructor(parent: Inspector<P>, lens: Lens<P, T>)","description":"dev.fritz2.core.SubInspector.SubInspector","location":"core/dev.fritz2.core/-sub-inspector/-sub-inspector.html","searchKeys":["SubInspector","constructor(parent: Inspector<P>, lens: Lens<P, T>)","dev.fritz2.core.SubInspector.SubInspector"]},{"name":"constructor(parent: Scope)","description":"dev.fritz2.core.Scope.Scope","location":"core/dev.fritz2.core/-scope/-scope.html","searchKeys":["Scope","constructor(parent: Scope)","dev.fritz2.core.Scope.Scope"]},{"name":"constructor(parent: Store<P>, lens: Lens<P, D>)","description":"dev.fritz2.core.SubStore.SubStore","location":"core/dev.fritz2.core/-sub-store/-sub-store.html","searchKeys":["SubStore","constructor(parent: Store<P>, lens: Lens<P, D>)","dev.fritz2.core.SubStore.SubStore"]},{"name":"constructor(process: (Flow<A>, Job) -> Unit)","description":"dev.fritz2.core.SimpleHandler.SimpleHandler","location":"core/dev.fritz2.core/-simple-handler/-simple-handler.html","searchKeys":["SimpleHandler","constructor(process: (Flow<A>, Job) -> Unit)","dev.fritz2.core.SimpleHandler.SimpleHandler"]},{"name":"constructor(response: Response, request: Request, propagate: Boolean = true)","description":"dev.fritz2.remote.Response.Response","location":"core/dev.fritz2.remote/-response/-response.html","searchKeys":["Response","constructor(response: Response, request: Request, propagate: Boolean = true)","dev.fritz2.remote.Response.Response"]},{"name":"constructor(start: Int, count: Int = 1)","description":"dev.fritz2.core.Patch.Delete.Delete","location":"core/dev.fritz2.core/-patch/-delete/-delete.html","searchKeys":["Delete","constructor(start: Int, count: Int = 1)","dev.fritz2.core.Patch.Delete.Delete"]},{"name":"constructor(tagName: String, id: String? = null, baseClass: String? = null, job: Job, scope: Scope)","description":"dev.fritz2.core.HtmlTag.HtmlTag","location":"core/dev.fritz2.core/-html-tag/-html-tag.html","searchKeys":["HtmlTag","constructor(tagName: String, id: String? = null, baseClass: String? = null, job: Job, scope: Scope)","dev.fritz2.core.HtmlTag.HtmlTag"]},{"name":"constructor(tagName: String, id: String? = null, baseClass: String? = null, job: Job, scope: Scope)","description":"dev.fritz2.core.SvgTag.SvgTag","location":"core/dev.fritz2.core/-svg-tag/-svg-tag.html","searchKeys":["SvgTag","constructor(tagName: String, id: String? = null, baseClass: String? = null, job: Job, scope: Scope)","dev.fritz2.core.SvgTag.SvgTag"]},{"name":"constructor(url: String = \"\", method: String = \"\", headers: Map<String, String> = emptyMap(), body: dynamic = undefined, referrer: String? = undefined, referrerPolicy: dynamic = undefined, mode: RequestMode? = undefined, credentials: RequestCredentials? = undefined, cache: RequestCache? = undefined, redirect: RequestRedirect? = undefined, integrity: String? = undefined, keepalive: Boolean? = undefined, reqWindow: Any? = undefined, middlewares: List<Middleware> = emptyList())","description":"dev.fritz2.remote.Request.Request","location":"core/dev.fritz2.remote/-request/-request.html","searchKeys":["Request","constructor(url: String = \"\", method: String = \"\", headers: Map<String, String> = emptyMap(), body: dynamic = undefined, referrer: String? = undefined, referrerPolicy: dynamic = undefined, mode: RequestMode? = undefined, credentials: RequestCredentials? = undefined, cache: RequestCache? = undefined, redirect: RequestRedirect? = undefined, integrity: String? = undefined, keepalive: Boolean? = undefined, reqWindow: Any? = undefined, middlewares: List<Middleware> = emptyList())","dev.fritz2.remote.Request.Request"]},{"name":"constructor(validate: (Inspector<D>, T) -> List<M>)","description":"dev.fritz2.validation.Validation.Validation","location":"core/dev.fritz2.validation/-validation/-validation.html","searchKeys":["Validation","constructor(validate: (Inspector<D>, T) -> List<M>)","dev.fritz2.validation.Validation.Validation"]},{"name":"constructor(value: T)","description":"dev.fritz2.core.OnlyOnceFlow.OnlyOnceFlow","location":"core/dev.fritz2.core/-only-once-flow/-only-once-flow.html","searchKeys":["OnlyOnceFlow","constructor(value: T)","dev.fritz2.core.OnlyOnceFlow.OnlyOnceFlow"]},{"name":"constructor(webSocket: WebSocket)","description":"dev.fritz2.remote.Session.Session","location":"core/dev.fritz2.remote/-session/-session.html","searchKeys":["Session","constructor(webSocket: WebSocket)","dev.fritz2.remote.Session.Session"]},{"name":"data class Shortcut(val key: String, val ctrl: Boolean = false, val alt: Boolean = false, val shift: Boolean = false, val meta: Boolean = false) : ModifierShortcut","description":"dev.fritz2.core.Shortcut","location":"core/dev.fritz2.core/-shortcut/index.html","searchKeys":["Shortcut","data class Shortcut(val key: String, val ctrl: Boolean = false, val alt: Boolean = false, val shift: Boolean = false, val meta: Boolean = false) : ModifierShortcut","dev.fritz2.core.Shortcut"]},{"name":"external fun btoa(decoded: String): String","description":"dev.fritz2.remote.btoa","location":"core/dev.fritz2.remote/btoa.html","searchKeys":["btoa","external fun btoa(decoded: String): String","dev.fritz2.remote.btoa"]},{"name":"external fun decodeURIComponent(encodedURI: String): String","description":"dev.fritz2.routing.decodeURIComponent","location":"core/dev.fritz2.routing/decode-u-r-i-component.html","searchKeys":["decodeURIComponent","external fun decodeURIComponent(encodedURI: String): String","dev.fritz2.routing.decodeURIComponent"]},{"name":"external fun encodeURIComponent(decodedURI: String): String","description":"dev.fritz2.routing.encodeURIComponent","location":"core/dev.fritz2.routing/encode-u-r-i-component.html","searchKeys":["encodeURIComponent","external fun encodeURIComponent(decodedURI: String): String","dev.fritz2.routing.encodeURIComponent"]},{"name":"external interface WithDomNode<out N : Node>","description":"dev.fritz2.core.WithDomNode","location":"core/dev.fritz2.core/-with-dom-node/index.html","searchKeys":["WithDomNode","external interface WithDomNode<out N : Node>","dev.fritz2.core.WithDomNode"]},{"name":"fun <D, I> Inspector<List<D>>.inspectEach(idProvider: IdProvider<D, I>, action: (Inspector<D>) -> Unit)","description":"dev.fritz2.core.inspectEach","location":"core/dev.fritz2.core/inspect-each.html","searchKeys":["inspectEach","fun <D, I> Inspector<List<D>>.inspectEach(idProvider: IdProvider<D, I>, action: (Inspector<D>) -> Unit)","dev.fritz2.core.inspectEach"]},{"name":"fun <D, I> Inspector<List<D>>.mapByElement(element: D, idProvider: IdProvider<D, I>): Inspector<D>","description":"dev.fritz2.core.mapByElement","location":"core/dev.fritz2.core/map-by-element.html","searchKeys":["mapByElement","fun <D, I> Inspector<List<D>>.mapByElement(element: D, idProvider: IdProvider<D, I>): Inspector<D>","dev.fritz2.core.mapByElement"]},{"name":"fun <D, I> Store<List<D>>.mapByElement(element: D, idProvider: IdProvider<D, I>): Store<D>","description":"dev.fritz2.core.mapByElement","location":"core/dev.fritz2.core/map-by-element.html","searchKeys":["mapByElement","fun <D, I> Store<List<D>>.mapByElement(element: D, idProvider: IdProvider<D, I>): Store<D>","dev.fritz2.core.mapByElement"]},{"name":"fun <D, M> WithJob.storeOf(initialData: D, validation: Validation<D, Unit, M>, job: Job = this.job, id: String = Id.next()): ValidatingStore<D, Unit, M>","description":"dev.fritz2.validation.storeOf","location":"core/dev.fritz2.validation/store-of.html","searchKeys":["storeOf","fun <D, M> WithJob.storeOf(initialData: D, validation: Validation<D, Unit, M>, job: Job = this.job, id: String = Id.next()): ValidatingStore<D, Unit, M>","dev.fritz2.validation.storeOf"]},{"name":"fun <D, M> storeOf(initialData: D, validation: Validation<D, Unit, M>, job: Job, id: String = Id.next()): ValidatingStore<D, Unit, M>","description":"dev.fritz2.validation.storeOf","location":"core/dev.fritz2.validation/store-of.html","searchKeys":["storeOf","fun <D, M> storeOf(initialData: D, validation: Validation<D, Unit, M>, job: Job, id: String = Id.next()): ValidatingStore<D, Unit, M>","dev.fritz2.validation.storeOf"]},{"name":"fun <D, M> validation(validate: MutableList<M>.(Inspector<D>) -> Unit): Validation<D, Unit, M>","description":"dev.fritz2.validation.validation","location":"core/dev.fritz2.validation/validation.html","searchKeys":["validation","fun <D, M> validation(validate: MutableList<M>.(Inspector<D>) -> Unit): Validation<D, Unit, M>","dev.fritz2.validation.validation"]},{"name":"fun <D, T, M> WithJob.storeOf(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job = this.job, id: String = Id.next()): ValidatingStore<D, T, M>","description":"dev.fritz2.validation.storeOf","location":"core/dev.fritz2.validation/store-of.html","searchKeys":["storeOf","fun <D, T, M> WithJob.storeOf(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job = this.job, id: String = Id.next()): ValidatingStore<D, T, M>","dev.fritz2.validation.storeOf"]},{"name":"fun <D, T, M> storeOf(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job = Job(), id: String = Id.next()): ValidatingStore<D, T, M>","description":"dev.fritz2.validation.storeOf","location":"core/dev.fritz2.validation/store-of.html","searchKeys":["storeOf","fun <D, T, M> storeOf(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job = Job(), id: String = Id.next()): ValidatingStore<D, T, M>","dev.fritz2.validation.storeOf"]},{"name":"fun <D, T, M> validation(validate: MutableList<M>.(Inspector<D>, T) -> Unit): Validation<D, T, M>","description":"dev.fritz2.validation.validation","location":"core/dev.fritz2.validation/validation.html","searchKeys":["validation","fun <D, T, M> validation(validate: MutableList<M>.(Inspector<D>, T) -> Unit): Validation<D, T, M>","dev.fritz2.validation.validation"]},{"name":"fun <D> Inspector<D?>.mapNull(default: D): Inspector<D>","description":"dev.fritz2.core.mapNull","location":"core/dev.fritz2.core/map-null.html","searchKeys":["mapNull","fun <D> Inspector<D?>.mapNull(default: D): Inspector<D>","dev.fritz2.core.mapNull"]},{"name":"fun <D> Inspector<List<D>>.inspectEach(action: (Inspector<D>) -> Unit)","description":"dev.fritz2.core.inspectEach","location":"core/dev.fritz2.core/inspect-each.html","searchKeys":["inspectEach","fun <D> Inspector<List<D>>.inspectEach(action: (Inspector<D>) -> Unit)","dev.fritz2.core.inspectEach"]},{"name":"fun <D> Inspector<List<D>>.mapByIndex(index: Int): Inspector<D>","description":"dev.fritz2.core.mapByIndex","location":"core/dev.fritz2.core/map-by-index.html","searchKeys":["mapByIndex","fun <D> Inspector<List<D>>.mapByIndex(index: Int): Inspector<D>","dev.fritz2.core.mapByIndex"]},{"name":"fun <D> Store<D>.history(capacity: Int = 0, initialEntries: List<D> = emptyList(), job: Job = this.job, synced: Boolean = true): History<D>","description":"dev.fritz2.history.history","location":"core/dev.fritz2.history/history.html","searchKeys":["history","fun <D> Store<D>.history(capacity: Int = 0, initialEntries: List<D> = emptyList(), job: Job = this.job, synced: Boolean = true): History<D>","dev.fritz2.history.history"]},{"name":"fun <D> Store<List<D>>.mapByIndex(index: Int): Store<D>","description":"dev.fritz2.core.mapByIndex","location":"core/dev.fritz2.core/map-by-index.html","searchKeys":["mapByIndex","fun <D> Store<List<D>>.mapByIndex(index: Int): Store<D>","dev.fritz2.core.mapByIndex"]},{"name":"fun <D> WithJob.storeOf(initialData: D, job: Job = this.job, id: String = Id.next()): Store<D>","description":"dev.fritz2.core.storeOf","location":"core/dev.fritz2.core/store-of.html","searchKeys":["storeOf","fun <D> WithJob.storeOf(initialData: D, job: Job = this.job, id: String = Id.next()): Store<D>","dev.fritz2.core.storeOf"]},{"name":"fun <D> inspectorOf(data: D): Inspector<D>","description":"dev.fritz2.core.inspectorOf","location":"core/dev.fritz2.core/inspector-of.html","searchKeys":["inspectorOf","fun <D> inspectorOf(data: D): Inspector<D>","dev.fritz2.core.inspectorOf"]},{"name":"fun <D> storeOf(initialData: D, job: Job, id: String = Id.next()): Store<D>","description":"dev.fritz2.core.storeOf","location":"core/dev.fritz2.core/store-of.html","searchKeys":["storeOf","fun <D> storeOf(initialData: D, job: Job, id: String = Id.next()): Store<D>","dev.fritz2.core.storeOf"]},{"name":"fun <E : Element, T : WebComponent<E>> registerWebComponent(localName: String, constructor: KClass<T>, vararg observedAttributes: String)","description":"dev.fritz2.webcomponents.registerWebComponent","location":"core/dev.fritz2.webcomponents/register-web-component.html","searchKeys":["registerWebComponent","fun <E : Element, T : WebComponent<E>> registerWebComponent(localName: String, constructor: KClass<T>, vararg observedAttributes: String)","dev.fritz2.webcomponents.registerWebComponent"]},{"name":"fun <E : Event, T : EventTarget> T.subscribe(eventName: String, capture: Boolean = false, selector: E.() -> Boolean = { true }): Listener<E, T>","description":"dev.fritz2.core.subscribe","location":"core/dev.fritz2.core/subscribe.html","searchKeys":["subscribe","fun <E : Event, T : EventTarget> T.subscribe(eventName: String, capture: Boolean = false, selector: E.() -> Boolean = { true }): Listener<E, T>","dev.fritz2.core.subscribe"]},{"name":"fun <K, V> Inspector<Map<K, V>>.inspectEach(action: (K, Inspector<V>) -> Unit)","description":"dev.fritz2.core.inspectEach","location":"core/dev.fritz2.core/inspect-each.html","searchKeys":["inspectEach","fun <K, V> Inspector<Map<K, V>>.inspectEach(action: (K, Inspector<V>) -> Unit)","dev.fritz2.core.inspectEach"]},{"name":"fun <K, V> Inspector<Map<K, V>>.mapByKey(key: K): Inspector<V>","description":"dev.fritz2.core.mapByKey","location":"core/dev.fritz2.core/map-by-key.html","searchKeys":["mapByKey","fun <K, V> Inspector<Map<K, V>>.mapByKey(key: K): Inspector<V>","dev.fritz2.core.mapByKey"]},{"name":"fun <K, V> Store<Map<K, V>>.mapByKey(key: K): Store<V>","description":"dev.fritz2.core.mapByKey","location":"core/dev.fritz2.core/map-by-key.html","searchKeys":["mapByKey","fun <K, V> Store<Map<K, V>>.mapByKey(key: K): Store<V>","dev.fritz2.core.mapByKey"]},{"name":"fun <K, V> lensForElement(key: K): Lens<Map<K, V>, V>","description":"dev.fritz2.core.lensForElement","location":"core/dev.fritz2.core/lens-for-element.html","searchKeys":["lensForElement","fun <K, V> lensForElement(key: K): Lens<Map<K, V>, V>","dev.fritz2.core.lensForElement"]},{"name":"fun <M : ValidationMessage> Store<*>.messages(): Flow<List<M>>?","description":"dev.fritz2.validation.messages","location":"core/dev.fritz2.validation/messages.html","searchKeys":["messages","fun <M : ValidationMessage> Store<*>.messages(): Flow<List<M>>?","dev.fritz2.validation.messages"]},{"name":"fun <M : ValidationMessage> Store<*>.messages(filterPredicate: (M) -> Boolean): Flow<List<M>>?","description":"dev.fritz2.validation.messages","location":"core/dev.fritz2.validation/messages.html","searchKeys":["messages","fun <M : ValidationMessage> Store<*>.messages(filterPredicate: (M) -> Boolean): Flow<List<M>>?","dev.fritz2.validation.messages"]},{"name":"fun <M : ValidationMessage> Store<*>.messagesOfSubModel(): Flow<List<M>>?","description":"dev.fritz2.validation.messagesOfSubModel","location":"core/dev.fritz2.validation/messages-of-sub-model.html","searchKeys":["messagesOfSubModel","fun <M : ValidationMessage> Store<*>.messagesOfSubModel(): Flow<List<M>>?","dev.fritz2.validation.messagesOfSubModel"]},{"name":"fun <P, T> Store<P?>.map(lens: Lens<P & Any, T>): Store<T>","description":"dev.fritz2.core.map","location":"core/dev.fritz2.core/map.html","searchKeys":["map","fun <P, T> Store<P?>.map(lens: Lens<P & Any, T>): Store<T>","dev.fritz2.core.map"]},{"name":"fun <P> Lens<P, Boolean>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Boolean>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Boolean?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Boolean?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Byte>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Byte>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Byte?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Byte?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Double>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Double>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Double?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Double?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Float>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Float>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Float?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Float?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Int>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Int>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Int?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Int?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Long>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Long>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Long?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Long?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Short>.asString(): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Short>.asString(): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <P> Lens<P, Short?>.asString(emptyValue: String = \"\"): Lens<P, String>","description":"dev.fritz2.core.asString","location":"core/dev.fritz2.core/as-string.html","searchKeys":["asString","fun <P> Lens<P, Short?>.asString(emptyValue: String = \"\"): Lens<P, String>","dev.fritz2.core.asString"]},{"name":"fun <T : Any> contains(key: Scope.Key<T>): Boolean","description":"dev.fritz2.core.Scope.contains","location":"core/dev.fritz2.core/-scope/contains.html","searchKeys":["contains","fun <T : Any> contains(key: Scope.Key<T>): Boolean","dev.fritz2.core.Scope.contains"]},{"name":"fun <T : Any> remove(key: Scope.Key<T>): Any?","description":"dev.fritz2.core.Scope.remove","location":"core/dev.fritz2.core/-scope/remove.html","searchKeys":["remove","fun <T : Any> remove(key: Scope.Key<T>): Any?","dev.fritz2.core.Scope.remove"]},{"name":"fun <T : Any> set(key: Scope.Key<T>, value: T)","description":"dev.fritz2.core.ScopeContext.set","location":"core/dev.fritz2.core/-scope-context/set.html","searchKeys":["set","fun <T : Any> set(key: Scope.Key<T>, value: T)","dev.fritz2.core.ScopeContext.set"]},{"name":"fun <T : Element> Tag<T>.afterMount(payload: Any? = null, handler: DomLifecycleHandler)","description":"dev.fritz2.core.afterMount","location":"core/dev.fritz2.core/after-mount.html","searchKeys":["afterMount","fun <T : Element> Tag<T>.afterMount(payload: Any? = null, handler: DomLifecycleHandler)","dev.fritz2.core.afterMount"]},{"name":"fun <T : Element> Tag<T>.beforeUnmount(payload: Any? = null, handler: DomLifecycleHandler)","description":"dev.fritz2.core.beforeUnmount","location":"core/dev.fritz2.core/before-unmount.html","searchKeys":["beforeUnmount","fun <T : Element> Tag<T>.beforeUnmount(payload: Any? = null, handler: DomLifecycleHandler)","dev.fritz2.core.beforeUnmount"]},{"name":"fun <T, I> diff(oldList: List<T>, newList: List<T>, idProvider: IdProvider<T, I>?): List<Patch<T>>","description":"dev.fritz2.core.Myer.diff","location":"core/dev.fritz2.core/-myer/diff.html","searchKeys":["diff","fun <T, I> diff(oldList: List<T>, newList: List<T>, idProvider: IdProvider<T, I>?): List<Patch<T>>","dev.fritz2.core.Myer.diff"]},{"name":"fun <T, I> lensForElement(element: T, idProvider: IdProvider<T, I>): Lens<List<T>, T>","description":"dev.fritz2.core.lensForElement","location":"core/dev.fritz2.core/lens-for-element.html","searchKeys":["lensForElement","fun <T, I> lensForElement(element: T, idProvider: IdProvider<T, I>): Lens<List<T>, T>","dev.fritz2.core.lensForElement"]},{"name":"fun <T> Flow<T>.whenever(condition: Flow<Boolean>): Flow<T?>","description":"dev.fritz2.core.whenever","location":"core/dev.fritz2.core/whenever.html","searchKeys":["whenever","fun <T> Flow<T>.whenever(condition: Flow<Boolean>): Flow<T?>","dev.fritz2.core.whenever"]},{"name":"fun <T> Inspector<T>.mapNullable(placeholder: T): Inspector<T?>","description":"dev.fritz2.core.mapNullable","location":"core/dev.fritz2.core/map-nullable.html","searchKeys":["mapNullable","fun <T> Inspector<T>.mapNullable(placeholder: T): Inspector<T?>","dev.fritz2.core.mapNullable"]},{"name":"fun <T> Store<T>.mapNullable(placeholder: T): Store<T?>","description":"dev.fritz2.core.mapNullable","location":"core/dev.fritz2.core/map-nullable.html","searchKeys":["mapNullable","fun <T> Store<T>.mapNullable(placeholder: T): Store<T?>","dev.fritz2.core.mapNullable"]},{"name":"fun <T> Store<T?>.mapNull(default: T): Store<T>","description":"dev.fritz2.core.mapNull","location":"core/dev.fritz2.core/map-null.html","searchKeys":["mapNull","fun <T> Store<T?>.mapNull(default: T): Store<T>","dev.fritz2.core.mapNull"]},{"name":"fun <T> T.whenever(condition: Flow<Boolean>): Flow<T?>","description":"dev.fritz2.core.whenever","location":"core/dev.fritz2.core/whenever.html","searchKeys":["whenever","fun <T> T.whenever(condition: Flow<Boolean>): Flow<T?>","dev.fritz2.core.whenever"]},{"name":"fun <T> WithJob.history(capacity: Int = 0, initialValue: List<T> = emptyList(), job: Job = this.job): History<T>","description":"dev.fritz2.history.history","location":"core/dev.fritz2.history/history.html","searchKeys":["history","fun <T> WithJob.history(capacity: Int = 0, initialValue: List<T> = emptyList(), job: Job = this.job): History<T>","dev.fritz2.history.history"]},{"name":"fun <T> flowOnceOf(value: T): OnlyOnceFlow<T>","description":"dev.fritz2.core.flowOnceOf","location":"core/dev.fritz2.core/flow-once-of.html","searchKeys":["flowOnceOf","fun <T> flowOnceOf(value: T): OnlyOnceFlow<T>","dev.fritz2.core.flowOnceOf"]},{"name":"fun <T> lensForElement(index: Int): Lens<List<T>, T>","description":"dev.fritz2.core.lensForElement","location":"core/dev.fritz2.core/lens-for-element.html","searchKeys":["lensForElement","fun <T> lensForElement(index: Int): Lens<List<T>, T>","dev.fritz2.core.lensForElement"]},{"name":"fun <T> routerOf(default: Route<T>, job: Job = Job()): Router<T>","description":"dev.fritz2.routing.routerOf","location":"core/dev.fritz2.routing/router-of.html","searchKeys":["routerOf","fun <T> routerOf(default: Route<T>, job: Job = Job()): Router<T>","dev.fritz2.routing.routerOf"]},{"name":"fun <X : Element, T : WebComponent<X>> registerWebComponent(localName: String, webComponent: T, vararg observedAttributes: String)","description":"dev.fritz2.webcomponents.registerWebComponent","location":"core/dev.fritz2.webcomponents/register-web-component.html","searchKeys":["registerWebComponent","fun <X : Element, T : WebComponent<X>> registerWebComponent(localName: String, webComponent: T, vararg observedAttributes: String)","dev.fritz2.webcomponents.registerWebComponent"]},{"name":"fun Listener<*, HTMLFieldSetElement>.values(): Flow<String>","description":"dev.fritz2.core.values","location":"core/dev.fritz2.core/values.html","searchKeys":["values","fun Listener<*, HTMLFieldSetElement>.values(): Flow<String>","dev.fritz2.core.values"]},{"name":"fun Listener<*, HTMLInputElement>.files(): Flow<FileList?>","description":"dev.fritz2.core.files","location":"core/dev.fritz2.core/files.html","searchKeys":["files","fun Listener<*, HTMLInputElement>.files(): Flow<FileList?>","dev.fritz2.core.files"]},{"name":"fun Listener<*, HTMLInputElement>.states(): Flow<Boolean>","description":"dev.fritz2.core.states","location":"core/dev.fritz2.core/states.html","searchKeys":["states","fun Listener<*, HTMLInputElement>.states(): Flow<Boolean>","dev.fritz2.core.states"]},{"name":"fun Listener<*, HTMLInputElement>.values(): Flow<String>","description":"dev.fritz2.core.values","location":"core/dev.fritz2.core/values.html","searchKeys":["values","fun Listener<*, HTMLInputElement>.values(): Flow<String>","dev.fritz2.core.values"]},{"name":"fun Listener<*, HTMLSelectElement>.selectedIndex(): Flow<Int>","description":"dev.fritz2.core.selectedIndex","location":"core/dev.fritz2.core/selected-index.html","searchKeys":["selectedIndex","fun Listener<*, HTMLSelectElement>.selectedIndex(): Flow<Int>","dev.fritz2.core.selectedIndex"]},{"name":"fun Listener<*, HTMLSelectElement>.selectedText(): Flow<String>","description":"dev.fritz2.core.selectedText","location":"core/dev.fritz2.core/selected-text.html","searchKeys":["selectedText","fun Listener<*, HTMLSelectElement>.selectedText(): Flow<String>","dev.fritz2.core.selectedText"]},{"name":"fun Listener<*, HTMLSelectElement>.selectedValue(): Flow<String>","description":"dev.fritz2.core.selectedValue","location":"core/dev.fritz2.core/selected-value.html","searchKeys":["selectedValue","fun Listener<*, HTMLSelectElement>.selectedValue(): Flow<String>","dev.fritz2.core.selectedValue"]},{"name":"fun Listener<*, HTMLSelectElement>.values(): Flow<String>","description":"dev.fritz2.core.values","location":"core/dev.fritz2.core/values.html","searchKeys":["values","fun Listener<*, HTMLSelectElement>.values(): Flow<String>","dev.fritz2.core.values"]},{"name":"fun Listener<*, HTMLTextAreaElement>.values(): Flow<String>","description":"dev.fritz2.core.values","location":"core/dev.fritz2.core/values.html","searchKeys":["values","fun Listener<*, HTMLTextAreaElement>.values(): Flow<String>","dev.fritz2.core.values"]},{"name":"fun NodeList.asElementList(): List<HTMLElement>","description":"dev.fritz2.core.asElementList","location":"core/dev.fritz2.core/as-element-list.html","searchKeys":["asElementList","fun NodeList.asElementList(): List<HTMLElement>","dev.fritz2.core.asElementList"]},{"name":"fun SvgTag.d(value: Flow<String>)","description":"dev.fritz2.core.d","location":"core/dev.fritz2.core/d.html","searchKeys":["d","fun SvgTag.d(value: Flow<String>)","dev.fritz2.core.d"]},{"name":"fun SvgTag.d(value: String)","description":"dev.fritz2.core.d","location":"core/dev.fritz2.core/d.html","searchKeys":["d","fun SvgTag.d(value: String)","dev.fritz2.core.d"]},{"name":"fun SvgTag.fill(value: Flow<String>)","description":"dev.fritz2.core.fill","location":"core/dev.fritz2.core/fill.html","searchKeys":["fill","fun SvgTag.fill(value: Flow<String>)","dev.fritz2.core.fill"]},{"name":"fun SvgTag.fill(value: String)","description":"dev.fritz2.core.fill","location":"core/dev.fritz2.core/fill.html","searchKeys":["fill","fun SvgTag.fill(value: String)","dev.fritz2.core.fill"]},{"name":"fun SvgTag.viewBox(value: Flow<String>)","description":"dev.fritz2.core.viewBox","location":"core/dev.fritz2.core/view-box.html","searchKeys":["viewBox","fun SvgTag.viewBox(value: Flow<String>)","dev.fritz2.core.viewBox"]},{"name":"fun SvgTag.viewBox(value: String)","description":"dev.fritz2.core.viewBox","location":"core/dev.fritz2.core/view-box.html","searchKeys":["viewBox","fun SvgTag.viewBox(value: String)","dev.fritz2.core.viewBox"]},{"name":"fun Tag<HTMLAnchorElement>.charset(value: Flow<String>)","description":"dev.fritz2.core.charset","location":"core/dev.fritz2.core/charset.html","searchKeys":["charset","fun Tag<HTMLAnchorElement>.charset(value: Flow<String>)","dev.fritz2.core.charset"]},{"name":"fun Tag<HTMLAnchorElement>.charset(value: String)","description":"dev.fritz2.core.charset","location":"core/dev.fritz2.core/charset.html","searchKeys":["charset","fun Tag<HTMLAnchorElement>.charset(value: String)","dev.fritz2.core.charset"]},{"name":"fun Tag<HTMLAnchorElement>.coords(value: Flow<String>)","description":"dev.fritz2.core.coords","location":"core/dev.fritz2.core/coords.html","searchKeys":["coords","fun Tag<HTMLAnchorElement>.coords(value: Flow<String>)","dev.fritz2.core.coords"]},{"name":"fun Tag<HTMLAnchorElement>.coords(value: String)","description":"dev.fritz2.core.coords","location":"core/dev.fritz2.core/coords.html","searchKeys":["coords","fun Tag<HTMLAnchorElement>.coords(value: String)","dev.fritz2.core.coords"]},{"name":"fun Tag<HTMLAnchorElement>.download(value: Flow<String>)","description":"dev.fritz2.core.download","location":"core/dev.fritz2.core/download.html","searchKeys":["download","fun Tag<HTMLAnchorElement>.download(value: Flow<String>)","dev.fritz2.core.download"]},{"name":"fun Tag<HTMLAnchorElement>.download(value: String)","description":"dev.fritz2.core.download","location":"core/dev.fritz2.core/download.html","searchKeys":["download","fun Tag<HTMLAnchorElement>.download(value: String)","dev.fritz2.core.download"]},{"name":"fun Tag<HTMLAnchorElement>.hash(value: Flow<String>)","description":"dev.fritz2.core.hash","location":"core/dev.fritz2.core/hash.html","searchKeys":["hash","fun Tag<HTMLAnchorElement>.hash(value: Flow<String>)","dev.fritz2.core.hash"]},{"name":"fun Tag<HTMLAnchorElement>.hash(value: String)","description":"dev.fritz2.core.hash","location":"core/dev.fritz2.core/hash.html","searchKeys":["hash","fun Tag<HTMLAnchorElement>.hash(value: String)","dev.fritz2.core.hash"]},{"name":"fun Tag<HTMLAnchorElement>.host(value: Flow<String>)","description":"dev.fritz2.core.host","location":"core/dev.fritz2.core/host.html","searchKeys":["host","fun Tag<HTMLAnchorElement>.host(value: Flow<String>)","dev.fritz2.core.host"]},{"name":"fun Tag<HTMLAnchorElement>.host(value: String)","description":"dev.fritz2.core.host","location":"core/dev.fritz2.core/host.html","searchKeys":["host","fun Tag<HTMLAnchorElement>.host(value: String)","dev.fritz2.core.host"]},{"name":"fun Tag<HTMLAnchorElement>.hostname(value: Flow<String>)","description":"dev.fritz2.core.hostname","location":"core/dev.fritz2.core/hostname.html","searchKeys":["hostname","fun Tag<HTMLAnchorElement>.hostname(value: Flow<String>)","dev.fritz2.core.hostname"]},{"name":"fun Tag<HTMLAnchorElement>.hostname(value: String)","description":"dev.fritz2.core.hostname","location":"core/dev.fritz2.core/hostname.html","searchKeys":["hostname","fun Tag<HTMLAnchorElement>.hostname(value: String)","dev.fritz2.core.hostname"]},{"name":"fun Tag<HTMLAnchorElement>.href(value: Flow<String>)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLAnchorElement>.href(value: Flow<String>)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLAnchorElement>.href(value: String)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLAnchorElement>.href(value: String)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLAnchorElement>.hreflang(value: Flow<String>)","description":"dev.fritz2.core.hreflang","location":"core/dev.fritz2.core/hreflang.html","searchKeys":["hreflang","fun Tag<HTMLAnchorElement>.hreflang(value: Flow<String>)","dev.fritz2.core.hreflang"]},{"name":"fun Tag<HTMLAnchorElement>.hreflang(value: String)","description":"dev.fritz2.core.hreflang","location":"core/dev.fritz2.core/hreflang.html","searchKeys":["hreflang","fun Tag<HTMLAnchorElement>.hreflang(value: String)","dev.fritz2.core.hreflang"]},{"name":"fun Tag<HTMLAnchorElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLAnchorElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLAnchorElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLAnchorElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLAnchorElement>.password(value: Flow<String>)","description":"dev.fritz2.core.password","location":"core/dev.fritz2.core/password.html","searchKeys":["password","fun Tag<HTMLAnchorElement>.password(value: Flow<String>)","dev.fritz2.core.password"]},{"name":"fun Tag<HTMLAnchorElement>.password(value: String)","description":"dev.fritz2.core.password","location":"core/dev.fritz2.core/password.html","searchKeys":["password","fun Tag<HTMLAnchorElement>.password(value: String)","dev.fritz2.core.password"]},{"name":"fun Tag<HTMLAnchorElement>.pathname(value: Flow<String>)","description":"dev.fritz2.core.pathname","location":"core/dev.fritz2.core/pathname.html","searchKeys":["pathname","fun Tag<HTMLAnchorElement>.pathname(value: Flow<String>)","dev.fritz2.core.pathname"]},{"name":"fun Tag<HTMLAnchorElement>.pathname(value: String)","description":"dev.fritz2.core.pathname","location":"core/dev.fritz2.core/pathname.html","searchKeys":["pathname","fun Tag<HTMLAnchorElement>.pathname(value: String)","dev.fritz2.core.pathname"]},{"name":"fun Tag<HTMLAnchorElement>.ping(value: Flow<String>)","description":"dev.fritz2.core.ping","location":"core/dev.fritz2.core/ping.html","searchKeys":["ping","fun Tag<HTMLAnchorElement>.ping(value: Flow<String>)","dev.fritz2.core.ping"]},{"name":"fun Tag<HTMLAnchorElement>.ping(value: String)","description":"dev.fritz2.core.ping","location":"core/dev.fritz2.core/ping.html","searchKeys":["ping","fun Tag<HTMLAnchorElement>.ping(value: String)","dev.fritz2.core.ping"]},{"name":"fun Tag<HTMLAnchorElement>.port(value: Flow<String>)","description":"dev.fritz2.core.port","location":"core/dev.fritz2.core/port.html","searchKeys":["port","fun Tag<HTMLAnchorElement>.port(value: Flow<String>)","dev.fritz2.core.port"]},{"name":"fun Tag<HTMLAnchorElement>.port(value: String)","description":"dev.fritz2.core.port","location":"core/dev.fritz2.core/port.html","searchKeys":["port","fun Tag<HTMLAnchorElement>.port(value: String)","dev.fritz2.core.port"]},{"name":"fun Tag<HTMLAnchorElement>.protocol(value: Flow<String>)","description":"dev.fritz2.core.protocol","location":"core/dev.fritz2.core/protocol.html","searchKeys":["protocol","fun Tag<HTMLAnchorElement>.protocol(value: Flow<String>)","dev.fritz2.core.protocol"]},{"name":"fun Tag<HTMLAnchorElement>.protocol(value: String)","description":"dev.fritz2.core.protocol","location":"core/dev.fritz2.core/protocol.html","searchKeys":["protocol","fun Tag<HTMLAnchorElement>.protocol(value: String)","dev.fritz2.core.protocol"]},{"name":"fun Tag<HTMLAnchorElement>.referrerPolicy(value: Flow<String>)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLAnchorElement>.referrerPolicy(value: Flow<String>)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLAnchorElement>.referrerPolicy(value: String)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLAnchorElement>.referrerPolicy(value: String)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLAnchorElement>.rel(value: Flow<String>)","description":"dev.fritz2.core.rel","location":"core/dev.fritz2.core/rel.html","searchKeys":["rel","fun Tag<HTMLAnchorElement>.rel(value: Flow<String>)","dev.fritz2.core.rel"]},{"name":"fun Tag<HTMLAnchorElement>.rel(value: String)","description":"dev.fritz2.core.rel","location":"core/dev.fritz2.core/rel.html","searchKeys":["rel","fun Tag<HTMLAnchorElement>.rel(value: String)","dev.fritz2.core.rel"]},{"name":"fun Tag<HTMLAnchorElement>.rev(value: Flow<String>)","description":"dev.fritz2.core.rev","location":"core/dev.fritz2.core/rev.html","searchKeys":["rev","fun Tag<HTMLAnchorElement>.rev(value: Flow<String>)","dev.fritz2.core.rev"]},{"name":"fun Tag<HTMLAnchorElement>.rev(value: String)","description":"dev.fritz2.core.rev","location":"core/dev.fritz2.core/rev.html","searchKeys":["rev","fun Tag<HTMLAnchorElement>.rev(value: String)","dev.fritz2.core.rev"]},{"name":"fun Tag<HTMLAnchorElement>.search(value: Flow<String>)","description":"dev.fritz2.core.search","location":"core/dev.fritz2.core/search.html","searchKeys":["search","fun Tag<HTMLAnchorElement>.search(value: Flow<String>)","dev.fritz2.core.search"]},{"name":"fun Tag<HTMLAnchorElement>.search(value: String)","description":"dev.fritz2.core.search","location":"core/dev.fritz2.core/search.html","searchKeys":["search","fun Tag<HTMLAnchorElement>.search(value: String)","dev.fritz2.core.search"]},{"name":"fun Tag<HTMLAnchorElement>.shape(value: Flow<String>)","description":"dev.fritz2.core.shape","location":"core/dev.fritz2.core/shape.html","searchKeys":["shape","fun Tag<HTMLAnchorElement>.shape(value: Flow<String>)","dev.fritz2.core.shape"]},{"name":"fun Tag<HTMLAnchorElement>.shape(value: String)","description":"dev.fritz2.core.shape","location":"core/dev.fritz2.core/shape.html","searchKeys":["shape","fun Tag<HTMLAnchorElement>.shape(value: String)","dev.fritz2.core.shape"]},{"name":"fun Tag<HTMLAnchorElement>.target(value: Flow<String>)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLAnchorElement>.target(value: Flow<String>)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLAnchorElement>.target(value: String)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLAnchorElement>.target(value: String)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLAnchorElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLAnchorElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLAnchorElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLAnchorElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLAnchorElement>.username(value: Flow<String>)","description":"dev.fritz2.core.username","location":"core/dev.fritz2.core/username.html","searchKeys":["username","fun Tag<HTMLAnchorElement>.username(value: Flow<String>)","dev.fritz2.core.username"]},{"name":"fun Tag<HTMLAnchorElement>.username(value: String)","description":"dev.fritz2.core.username","location":"core/dev.fritz2.core/username.html","searchKeys":["username","fun Tag<HTMLAnchorElement>.username(value: String)","dev.fritz2.core.username"]},{"name":"fun Tag<HTMLAppletElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLAppletElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLAppletElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLAppletElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLAppletElement>.alt(value: Flow<String>)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLAppletElement>.alt(value: Flow<String>)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLAppletElement>.alt(value: String)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLAppletElement>.alt(value: String)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLAppletElement>.archive(value: Flow<String>)","description":"dev.fritz2.core.archive","location":"core/dev.fritz2.core/archive.html","searchKeys":["archive","fun Tag<HTMLAppletElement>.archive(value: Flow<String>)","dev.fritz2.core.archive"]},{"name":"fun Tag<HTMLAppletElement>.archive(value: String)","description":"dev.fritz2.core.archive","location":"core/dev.fritz2.core/archive.html","searchKeys":["archive","fun Tag<HTMLAppletElement>.archive(value: String)","dev.fritz2.core.archive"]},{"name":"fun Tag<HTMLAppletElement>.code(value: Flow<String>)","description":"dev.fritz2.core.code","location":"core/dev.fritz2.core/code.html","searchKeys":["code","fun Tag<HTMLAppletElement>.code(value: Flow<String>)","dev.fritz2.core.code"]},{"name":"fun Tag<HTMLAppletElement>.code(value: String)","description":"dev.fritz2.core.code","location":"core/dev.fritz2.core/code.html","searchKeys":["code","fun Tag<HTMLAppletElement>.code(value: String)","dev.fritz2.core.code"]},{"name":"fun Tag<HTMLAppletElement>.codeBase(value: Flow<String>)","description":"dev.fritz2.core.codeBase","location":"core/dev.fritz2.core/code-base.html","searchKeys":["codeBase","fun Tag<HTMLAppletElement>.codeBase(value: Flow<String>)","dev.fritz2.core.codeBase"]},{"name":"fun Tag<HTMLAppletElement>.codeBase(value: String)","description":"dev.fritz2.core.codeBase","location":"core/dev.fritz2.core/code-base.html","searchKeys":["codeBase","fun Tag<HTMLAppletElement>.codeBase(value: String)","dev.fritz2.core.codeBase"]},{"name":"fun Tag<HTMLAppletElement>.height(value: Flow<String>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLAppletElement>.height(value: Flow<String>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLAppletElement>.height(value: String)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLAppletElement>.height(value: String)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLAppletElement>.hspace(value: Flow<Int>)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLAppletElement>.hspace(value: Flow<Int>)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLAppletElement>.hspace(value: Int)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLAppletElement>.hspace(value: Int)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLAppletElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLAppletElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLAppletElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLAppletElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLAppletElement>.object(value: Flow<String>)","description":"dev.fritz2.core.object","location":"core/dev.fritz2.core/object.html","searchKeys":["object","fun Tag<HTMLAppletElement>.object(value: Flow<String>)","dev.fritz2.core.object"]},{"name":"fun Tag<HTMLAppletElement>.object(value: String)","description":"dev.fritz2.core.object","location":"core/dev.fritz2.core/object.html","searchKeys":["object","fun Tag<HTMLAppletElement>.object(value: String)","dev.fritz2.core.object"]},{"name":"fun Tag<HTMLAppletElement>.vspace(value: Flow<Int>)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLAppletElement>.vspace(value: Flow<Int>)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLAppletElement>.vspace(value: Int)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLAppletElement>.vspace(value: Int)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLAppletElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLAppletElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLAppletElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLAppletElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLAreaElement>.alt(value: Flow<String>)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLAreaElement>.alt(value: Flow<String>)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLAreaElement>.alt(value: String)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLAreaElement>.alt(value: String)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLAreaElement>.coords(value: Flow<String>)","description":"dev.fritz2.core.coords","location":"core/dev.fritz2.core/coords.html","searchKeys":["coords","fun Tag<HTMLAreaElement>.coords(value: Flow<String>)","dev.fritz2.core.coords"]},{"name":"fun Tag<HTMLAreaElement>.coords(value: String)","description":"dev.fritz2.core.coords","location":"core/dev.fritz2.core/coords.html","searchKeys":["coords","fun Tag<HTMLAreaElement>.coords(value: String)","dev.fritz2.core.coords"]},{"name":"fun Tag<HTMLAreaElement>.download(value: Flow<String>)","description":"dev.fritz2.core.download","location":"core/dev.fritz2.core/download.html","searchKeys":["download","fun Tag<HTMLAreaElement>.download(value: Flow<String>)","dev.fritz2.core.download"]},{"name":"fun Tag<HTMLAreaElement>.download(value: String)","description":"dev.fritz2.core.download","location":"core/dev.fritz2.core/download.html","searchKeys":["download","fun Tag<HTMLAreaElement>.download(value: String)","dev.fritz2.core.download"]},{"name":"fun Tag<HTMLAreaElement>.hash(value: Flow<String>)","description":"dev.fritz2.core.hash","location":"core/dev.fritz2.core/hash.html","searchKeys":["hash","fun Tag<HTMLAreaElement>.hash(value: Flow<String>)","dev.fritz2.core.hash"]},{"name":"fun Tag<HTMLAreaElement>.hash(value: String)","description":"dev.fritz2.core.hash","location":"core/dev.fritz2.core/hash.html","searchKeys":["hash","fun Tag<HTMLAreaElement>.hash(value: String)","dev.fritz2.core.hash"]},{"name":"fun Tag<HTMLAreaElement>.host(value: Flow<String>)","description":"dev.fritz2.core.host","location":"core/dev.fritz2.core/host.html","searchKeys":["host","fun Tag<HTMLAreaElement>.host(value: Flow<String>)","dev.fritz2.core.host"]},{"name":"fun Tag<HTMLAreaElement>.host(value: String)","description":"dev.fritz2.core.host","location":"core/dev.fritz2.core/host.html","searchKeys":["host","fun Tag<HTMLAreaElement>.host(value: String)","dev.fritz2.core.host"]},{"name":"fun Tag<HTMLAreaElement>.hostname(value: Flow<String>)","description":"dev.fritz2.core.hostname","location":"core/dev.fritz2.core/hostname.html","searchKeys":["hostname","fun Tag<HTMLAreaElement>.hostname(value: Flow<String>)","dev.fritz2.core.hostname"]},{"name":"fun Tag<HTMLAreaElement>.hostname(value: String)","description":"dev.fritz2.core.hostname","location":"core/dev.fritz2.core/hostname.html","searchKeys":["hostname","fun Tag<HTMLAreaElement>.hostname(value: String)","dev.fritz2.core.hostname"]},{"name":"fun Tag<HTMLAreaElement>.href(value: Flow<String>)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLAreaElement>.href(value: Flow<String>)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLAreaElement>.href(value: String)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLAreaElement>.href(value: String)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLAreaElement>.noHref(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.noHref","location":"core/dev.fritz2.core/no-href.html","searchKeys":["noHref","fun Tag<HTMLAreaElement>.noHref(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.noHref"]},{"name":"fun Tag<HTMLAreaElement>.noHref(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.noHref","location":"core/dev.fritz2.core/no-href.html","searchKeys":["noHref","fun Tag<HTMLAreaElement>.noHref(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.noHref"]},{"name":"fun Tag<HTMLAreaElement>.password(value: Flow<String>)","description":"dev.fritz2.core.password","location":"core/dev.fritz2.core/password.html","searchKeys":["password","fun Tag<HTMLAreaElement>.password(value: Flow<String>)","dev.fritz2.core.password"]},{"name":"fun Tag<HTMLAreaElement>.password(value: String)","description":"dev.fritz2.core.password","location":"core/dev.fritz2.core/password.html","searchKeys":["password","fun Tag<HTMLAreaElement>.password(value: String)","dev.fritz2.core.password"]},{"name":"fun Tag<HTMLAreaElement>.pathname(value: Flow<String>)","description":"dev.fritz2.core.pathname","location":"core/dev.fritz2.core/pathname.html","searchKeys":["pathname","fun Tag<HTMLAreaElement>.pathname(value: Flow<String>)","dev.fritz2.core.pathname"]},{"name":"fun Tag<HTMLAreaElement>.pathname(value: String)","description":"dev.fritz2.core.pathname","location":"core/dev.fritz2.core/pathname.html","searchKeys":["pathname","fun Tag<HTMLAreaElement>.pathname(value: String)","dev.fritz2.core.pathname"]},{"name":"fun Tag<HTMLAreaElement>.ping(value: Flow<String>)","description":"dev.fritz2.core.ping","location":"core/dev.fritz2.core/ping.html","searchKeys":["ping","fun Tag<HTMLAreaElement>.ping(value: Flow<String>)","dev.fritz2.core.ping"]},{"name":"fun Tag<HTMLAreaElement>.ping(value: String)","description":"dev.fritz2.core.ping","location":"core/dev.fritz2.core/ping.html","searchKeys":["ping","fun Tag<HTMLAreaElement>.ping(value: String)","dev.fritz2.core.ping"]},{"name":"fun Tag<HTMLAreaElement>.port(value: Flow<String>)","description":"dev.fritz2.core.port","location":"core/dev.fritz2.core/port.html","searchKeys":["port","fun Tag<HTMLAreaElement>.port(value: Flow<String>)","dev.fritz2.core.port"]},{"name":"fun Tag<HTMLAreaElement>.port(value: String)","description":"dev.fritz2.core.port","location":"core/dev.fritz2.core/port.html","searchKeys":["port","fun Tag<HTMLAreaElement>.port(value: String)","dev.fritz2.core.port"]},{"name":"fun Tag<HTMLAreaElement>.protocol(value: Flow<String>)","description":"dev.fritz2.core.protocol","location":"core/dev.fritz2.core/protocol.html","searchKeys":["protocol","fun Tag<HTMLAreaElement>.protocol(value: Flow<String>)","dev.fritz2.core.protocol"]},{"name":"fun Tag<HTMLAreaElement>.protocol(value: String)","description":"dev.fritz2.core.protocol","location":"core/dev.fritz2.core/protocol.html","searchKeys":["protocol","fun Tag<HTMLAreaElement>.protocol(value: String)","dev.fritz2.core.protocol"]},{"name":"fun Tag<HTMLAreaElement>.referrerPolicy(value: Flow<String>)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLAreaElement>.referrerPolicy(value: Flow<String>)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLAreaElement>.referrerPolicy(value: String)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLAreaElement>.referrerPolicy(value: String)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLAreaElement>.rel(value: Flow<String>)","description":"dev.fritz2.core.rel","location":"core/dev.fritz2.core/rel.html","searchKeys":["rel","fun Tag<HTMLAreaElement>.rel(value: Flow<String>)","dev.fritz2.core.rel"]},{"name":"fun Tag<HTMLAreaElement>.rel(value: String)","description":"dev.fritz2.core.rel","location":"core/dev.fritz2.core/rel.html","searchKeys":["rel","fun Tag<HTMLAreaElement>.rel(value: String)","dev.fritz2.core.rel"]},{"name":"fun Tag<HTMLAreaElement>.search(value: Flow<String>)","description":"dev.fritz2.core.search","location":"core/dev.fritz2.core/search.html","searchKeys":["search","fun Tag<HTMLAreaElement>.search(value: Flow<String>)","dev.fritz2.core.search"]},{"name":"fun Tag<HTMLAreaElement>.search(value: String)","description":"dev.fritz2.core.search","location":"core/dev.fritz2.core/search.html","searchKeys":["search","fun Tag<HTMLAreaElement>.search(value: String)","dev.fritz2.core.search"]},{"name":"fun Tag<HTMLAreaElement>.shape(value: Flow<String>)","description":"dev.fritz2.core.shape","location":"core/dev.fritz2.core/shape.html","searchKeys":["shape","fun Tag<HTMLAreaElement>.shape(value: Flow<String>)","dev.fritz2.core.shape"]},{"name":"fun Tag<HTMLAreaElement>.shape(value: String)","description":"dev.fritz2.core.shape","location":"core/dev.fritz2.core/shape.html","searchKeys":["shape","fun Tag<HTMLAreaElement>.shape(value: String)","dev.fritz2.core.shape"]},{"name":"fun Tag<HTMLAreaElement>.target(value: Flow<String>)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLAreaElement>.target(value: Flow<String>)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLAreaElement>.target(value: String)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLAreaElement>.target(value: String)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLAreaElement>.username(value: Flow<String>)","description":"dev.fritz2.core.username","location":"core/dev.fritz2.core/username.html","searchKeys":["username","fun Tag<HTMLAreaElement>.username(value: Flow<String>)","dev.fritz2.core.username"]},{"name":"fun Tag<HTMLAreaElement>.username(value: String)","description":"dev.fritz2.core.username","location":"core/dev.fritz2.core/username.html","searchKeys":["username","fun Tag<HTMLAreaElement>.username(value: String)","dev.fritz2.core.username"]},{"name":"fun Tag<HTMLBRElement>.clear(value: Flow<String>)","description":"dev.fritz2.core.clear","location":"core/dev.fritz2.core/clear.html","searchKeys":["clear","fun Tag<HTMLBRElement>.clear(value: Flow<String>)","dev.fritz2.core.clear"]},{"name":"fun Tag<HTMLBRElement>.clear(value: String)","description":"dev.fritz2.core.clear","location":"core/dev.fritz2.core/clear.html","searchKeys":["clear","fun Tag<HTMLBRElement>.clear(value: String)","dev.fritz2.core.clear"]},{"name":"fun Tag<HTMLBaseElement>.href(value: Flow<String>)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLBaseElement>.href(value: Flow<String>)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLBaseElement>.href(value: String)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLBaseElement>.href(value: String)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLBaseElement>.target(value: Flow<String>)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLBaseElement>.target(value: Flow<String>)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLBaseElement>.target(value: String)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLBaseElement>.target(value: String)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLBodyElement>.aLink(value: Flow<String>)","description":"dev.fritz2.core.aLink","location":"core/dev.fritz2.core/a-link.html","searchKeys":["aLink","fun Tag<HTMLBodyElement>.aLink(value: Flow<String>)","dev.fritz2.core.aLink"]},{"name":"fun Tag<HTMLBodyElement>.aLink(value: String)","description":"dev.fritz2.core.aLink","location":"core/dev.fritz2.core/a-link.html","searchKeys":["aLink","fun Tag<HTMLBodyElement>.aLink(value: String)","dev.fritz2.core.aLink"]},{"name":"fun Tag<HTMLBodyElement>.background(value: Flow<String>)","description":"dev.fritz2.core.background","location":"core/dev.fritz2.core/background.html","searchKeys":["background","fun Tag<HTMLBodyElement>.background(value: Flow<String>)","dev.fritz2.core.background"]},{"name":"fun Tag<HTMLBodyElement>.background(value: String)","description":"dev.fritz2.core.background","location":"core/dev.fritz2.core/background.html","searchKeys":["background","fun Tag<HTMLBodyElement>.background(value: String)","dev.fritz2.core.background"]},{"name":"fun Tag<HTMLBodyElement>.bgColor(value: Flow<String>)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLBodyElement>.bgColor(value: Flow<String>)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLBodyElement>.bgColor(value: String)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLBodyElement>.bgColor(value: String)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLBodyElement>.link(value: Flow<String>)","description":"dev.fritz2.core.link","location":"core/dev.fritz2.core/link.html","searchKeys":["link","fun Tag<HTMLBodyElement>.link(value: Flow<String>)","dev.fritz2.core.link"]},{"name":"fun Tag<HTMLBodyElement>.link(value: String)","description":"dev.fritz2.core.link","location":"core/dev.fritz2.core/link.html","searchKeys":["link","fun Tag<HTMLBodyElement>.link(value: String)","dev.fritz2.core.link"]},{"name":"fun Tag<HTMLBodyElement>.vLink(value: Flow<String>)","description":"dev.fritz2.core.vLink","location":"core/dev.fritz2.core/v-link.html","searchKeys":["vLink","fun Tag<HTMLBodyElement>.vLink(value: Flow<String>)","dev.fritz2.core.vLink"]},{"name":"fun Tag<HTMLBodyElement>.vLink(value: String)","description":"dev.fritz2.core.vLink","location":"core/dev.fritz2.core/v-link.html","searchKeys":["vLink","fun Tag<HTMLBodyElement>.vLink(value: String)","dev.fritz2.core.vLink"]},{"name":"fun Tag<HTMLButtonElement>.autofocus(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLButtonElement>.autofocus(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLButtonElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLButtonElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLButtonElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLButtonElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLButtonElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLButtonElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLButtonElement>.formAction(value: Flow<String>)","description":"dev.fritz2.core.formAction","location":"core/dev.fritz2.core/form-action.html","searchKeys":["formAction","fun Tag<HTMLButtonElement>.formAction(value: Flow<String>)","dev.fritz2.core.formAction"]},{"name":"fun Tag<HTMLButtonElement>.formAction(value: String)","description":"dev.fritz2.core.formAction","location":"core/dev.fritz2.core/form-action.html","searchKeys":["formAction","fun Tag<HTMLButtonElement>.formAction(value: String)","dev.fritz2.core.formAction"]},{"name":"fun Tag<HTMLButtonElement>.formEnctype(value: Flow<String>)","description":"dev.fritz2.core.formEnctype","location":"core/dev.fritz2.core/form-enctype.html","searchKeys":["formEnctype","fun Tag<HTMLButtonElement>.formEnctype(value: Flow<String>)","dev.fritz2.core.formEnctype"]},{"name":"fun Tag<HTMLButtonElement>.formEnctype(value: String)","description":"dev.fritz2.core.formEnctype","location":"core/dev.fritz2.core/form-enctype.html","searchKeys":["formEnctype","fun Tag<HTMLButtonElement>.formEnctype(value: String)","dev.fritz2.core.formEnctype"]},{"name":"fun Tag<HTMLButtonElement>.formMethod(value: Flow<String>)","description":"dev.fritz2.core.formMethod","location":"core/dev.fritz2.core/form-method.html","searchKeys":["formMethod","fun Tag<HTMLButtonElement>.formMethod(value: Flow<String>)","dev.fritz2.core.formMethod"]},{"name":"fun Tag<HTMLButtonElement>.formMethod(value: String)","description":"dev.fritz2.core.formMethod","location":"core/dev.fritz2.core/form-method.html","searchKeys":["formMethod","fun Tag<HTMLButtonElement>.formMethod(value: String)","dev.fritz2.core.formMethod"]},{"name":"fun Tag<HTMLButtonElement>.formNoValidate(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.formNoValidate","location":"core/dev.fritz2.core/form-no-validate.html","searchKeys":["formNoValidate","fun Tag<HTMLButtonElement>.formNoValidate(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.formNoValidate"]},{"name":"fun Tag<HTMLButtonElement>.formNoValidate(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.formNoValidate","location":"core/dev.fritz2.core/form-no-validate.html","searchKeys":["formNoValidate","fun Tag<HTMLButtonElement>.formNoValidate(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.formNoValidate"]},{"name":"fun Tag<HTMLButtonElement>.formTarget(value: Flow<String>)","description":"dev.fritz2.core.formTarget","location":"core/dev.fritz2.core/form-target.html","searchKeys":["formTarget","fun Tag<HTMLButtonElement>.formTarget(value: Flow<String>)","dev.fritz2.core.formTarget"]},{"name":"fun Tag<HTMLButtonElement>.formTarget(value: String)","description":"dev.fritz2.core.formTarget","location":"core/dev.fritz2.core/form-target.html","searchKeys":["formTarget","fun Tag<HTMLButtonElement>.formTarget(value: String)","dev.fritz2.core.formTarget"]},{"name":"fun Tag<HTMLButtonElement>.menu(value: Flow<HTMLMenuElement?>)","description":"dev.fritz2.core.menu","location":"core/dev.fritz2.core/menu.html","searchKeys":["menu","fun Tag<HTMLButtonElement>.menu(value: Flow<HTMLMenuElement?>)","dev.fritz2.core.menu"]},{"name":"fun Tag<HTMLButtonElement>.menu(value: HTMLMenuElement?)","description":"dev.fritz2.core.menu","location":"core/dev.fritz2.core/menu.html","searchKeys":["menu","fun Tag<HTMLButtonElement>.menu(value: HTMLMenuElement?)","dev.fritz2.core.menu"]},{"name":"fun Tag<HTMLButtonElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLButtonElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLButtonElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLButtonElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLButtonElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLButtonElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLButtonElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLButtonElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLButtonElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLButtonElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLButtonElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLButtonElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLCanvasElement>.height(value: Flow<Int>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLCanvasElement>.height(value: Flow<Int>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLCanvasElement>.height(value: Int)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLCanvasElement>.height(value: Int)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLCanvasElement>.width(value: Flow<Int>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLCanvasElement>.width(value: Flow<Int>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLCanvasElement>.width(value: Int)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLCanvasElement>.width(value: Int)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLDListElement>.compact(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLDListElement>.compact(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLDListElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLDListElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLDataElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLDataElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLDataElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLDataElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLDetailsElement>.open(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.open","location":"core/dev.fritz2.core/open.html","searchKeys":["open","fun Tag<HTMLDetailsElement>.open(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.open"]},{"name":"fun Tag<HTMLDetailsElement>.open(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.open","location":"core/dev.fritz2.core/open.html","searchKeys":["open","fun Tag<HTMLDetailsElement>.open(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.open"]},{"name":"fun Tag<HTMLDialogElement>.open(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.open","location":"core/dev.fritz2.core/open.html","searchKeys":["open","fun Tag<HTMLDialogElement>.open(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.open"]},{"name":"fun Tag<HTMLDialogElement>.open(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.open","location":"core/dev.fritz2.core/open.html","searchKeys":["open","fun Tag<HTMLDialogElement>.open(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.open"]},{"name":"fun Tag<HTMLDialogElement>.returnValue(value: Flow<String>)","description":"dev.fritz2.core.returnValue","location":"core/dev.fritz2.core/return-value.html","searchKeys":["returnValue","fun Tag<HTMLDialogElement>.returnValue(value: Flow<String>)","dev.fritz2.core.returnValue"]},{"name":"fun Tag<HTMLDialogElement>.returnValue(value: String)","description":"dev.fritz2.core.returnValue","location":"core/dev.fritz2.core/return-value.html","searchKeys":["returnValue","fun Tag<HTMLDialogElement>.returnValue(value: String)","dev.fritz2.core.returnValue"]},{"name":"fun Tag<HTMLDirectoryElement>.compact(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLDirectoryElement>.compact(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLDirectoryElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLDirectoryElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLDivElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLDivElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLDivElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLDivElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLElement>.accessKey(value: Flow<String>)","description":"dev.fritz2.core.accessKey","location":"core/dev.fritz2.core/access-key.html","searchKeys":["accessKey","fun Tag<HTMLElement>.accessKey(value: Flow<String>)","dev.fritz2.core.accessKey"]},{"name":"fun Tag<HTMLElement>.accessKey(value: String)","description":"dev.fritz2.core.accessKey","location":"core/dev.fritz2.core/access-key.html","searchKeys":["accessKey","fun Tag<HTMLElement>.accessKey(value: String)","dev.fritz2.core.accessKey"]},{"name":"fun Tag<HTMLElement>.contentEditable(value: Flow<String>)","description":"dev.fritz2.core.contentEditable","location":"core/dev.fritz2.core/content-editable.html","searchKeys":["contentEditable","fun Tag<HTMLElement>.contentEditable(value: Flow<String>)","dev.fritz2.core.contentEditable"]},{"name":"fun Tag<HTMLElement>.contentEditable(value: String)","description":"dev.fritz2.core.contentEditable","location":"core/dev.fritz2.core/content-editable.html","searchKeys":["contentEditable","fun Tag<HTMLElement>.contentEditable(value: String)","dev.fritz2.core.contentEditable"]},{"name":"fun Tag<HTMLElement>.contextMenu(value: Flow<HTMLMenuElement?>)","description":"dev.fritz2.core.contextMenu","location":"core/dev.fritz2.core/context-menu.html","searchKeys":["contextMenu","fun Tag<HTMLElement>.contextMenu(value: Flow<HTMLMenuElement?>)","dev.fritz2.core.contextMenu"]},{"name":"fun Tag<HTMLElement>.contextMenu(value: HTMLMenuElement?)","description":"dev.fritz2.core.contextMenu","location":"core/dev.fritz2.core/context-menu.html","searchKeys":["contextMenu","fun Tag<HTMLElement>.contextMenu(value: HTMLMenuElement?)","dev.fritz2.core.contextMenu"]},{"name":"fun Tag<HTMLElement>.dir(value: Flow<String>)","description":"dev.fritz2.core.dir","location":"core/dev.fritz2.core/dir.html","searchKeys":["dir","fun Tag<HTMLElement>.dir(value: Flow<String>)","dev.fritz2.core.dir"]},{"name":"fun Tag<HTMLElement>.dir(value: String)","description":"dev.fritz2.core.dir","location":"core/dev.fritz2.core/dir.html","searchKeys":["dir","fun Tag<HTMLElement>.dir(value: String)","dev.fritz2.core.dir"]},{"name":"fun Tag<HTMLElement>.draggable(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.draggable","location":"core/dev.fritz2.core/draggable.html","searchKeys":["draggable","fun Tag<HTMLElement>.draggable(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.draggable"]},{"name":"fun Tag<HTMLElement>.draggable(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.draggable","location":"core/dev.fritz2.core/draggable.html","searchKeys":["draggable","fun Tag<HTMLElement>.draggable(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.draggable"]},{"name":"fun Tag<HTMLElement>.hidden(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.hidden","location":"core/dev.fritz2.core/hidden.html","searchKeys":["hidden","fun Tag<HTMLElement>.hidden(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.hidden"]},{"name":"fun Tag<HTMLElement>.hidden(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.hidden","location":"core/dev.fritz2.core/hidden.html","searchKeys":["hidden","fun Tag<HTMLElement>.hidden(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.hidden"]},{"name":"fun Tag<HTMLElement>.id(value: Flow<String>)","description":"dev.fritz2.core.id","location":"core/dev.fritz2.core/id.html","searchKeys":["id","fun Tag<HTMLElement>.id(value: Flow<String>)","dev.fritz2.core.id"]},{"name":"fun Tag<HTMLElement>.id(value: String)","description":"dev.fritz2.core.id","location":"core/dev.fritz2.core/id.html","searchKeys":["id","fun Tag<HTMLElement>.id(value: String)","dev.fritz2.core.id"]},{"name":"fun Tag<HTMLElement>.innerHTML(value: Flow<String>)","description":"dev.fritz2.core.innerHTML","location":"core/dev.fritz2.core/inner-h-t-m-l.html","searchKeys":["innerHTML","fun Tag<HTMLElement>.innerHTML(value: Flow<String>)","dev.fritz2.core.innerHTML"]},{"name":"fun Tag<HTMLElement>.innerHTML(value: String)","description":"dev.fritz2.core.innerHTML","location":"core/dev.fritz2.core/inner-h-t-m-l.html","searchKeys":["innerHTML","fun Tag<HTMLElement>.innerHTML(value: String)","dev.fritz2.core.innerHTML"]},{"name":"fun Tag<HTMLElement>.innerText(value: Flow<String>)","description":"dev.fritz2.core.innerText","location":"core/dev.fritz2.core/inner-text.html","searchKeys":["innerText","fun Tag<HTMLElement>.innerText(value: Flow<String>)","dev.fritz2.core.innerText"]},{"name":"fun Tag<HTMLElement>.innerText(value: String)","description":"dev.fritz2.core.innerText","location":"core/dev.fritz2.core/inner-text.html","searchKeys":["innerText","fun Tag<HTMLElement>.innerText(value: String)","dev.fritz2.core.innerText"]},{"name":"fun Tag<HTMLElement>.lang(value: Flow<String>)","description":"dev.fritz2.core.lang","location":"core/dev.fritz2.core/lang.html","searchKeys":["lang","fun Tag<HTMLElement>.lang(value: Flow<String>)","dev.fritz2.core.lang"]},{"name":"fun Tag<HTMLElement>.lang(value: String)","description":"dev.fritz2.core.lang","location":"core/dev.fritz2.core/lang.html","searchKeys":["lang","fun Tag<HTMLElement>.lang(value: String)","dev.fritz2.core.lang"]},{"name":"fun Tag<HTMLElement>.nodeValue(value: Flow<String?>)","description":"dev.fritz2.core.nodeValue","location":"core/dev.fritz2.core/node-value.html","searchKeys":["nodeValue","fun Tag<HTMLElement>.nodeValue(value: Flow<String?>)","dev.fritz2.core.nodeValue"]},{"name":"fun Tag<HTMLElement>.nodeValue(value: String?)","description":"dev.fritz2.core.nodeValue","location":"core/dev.fritz2.core/node-value.html","searchKeys":["nodeValue","fun Tag<HTMLElement>.nodeValue(value: String?)","dev.fritz2.core.nodeValue"]},{"name":"fun Tag<HTMLElement>.outerHTML(value: Flow<String>)","description":"dev.fritz2.core.outerHTML","location":"core/dev.fritz2.core/outer-h-t-m-l.html","searchKeys":["outerHTML","fun Tag<HTMLElement>.outerHTML(value: Flow<String>)","dev.fritz2.core.outerHTML"]},{"name":"fun Tag<HTMLElement>.outerHTML(value: String)","description":"dev.fritz2.core.outerHTML","location":"core/dev.fritz2.core/outer-h-t-m-l.html","searchKeys":["outerHTML","fun Tag<HTMLElement>.outerHTML(value: String)","dev.fritz2.core.outerHTML"]},{"name":"fun Tag<HTMLElement>.scrollLeft(value: Double)","description":"dev.fritz2.core.scrollLeft","location":"core/dev.fritz2.core/scroll-left.html","searchKeys":["scrollLeft","fun Tag<HTMLElement>.scrollLeft(value: Double)","dev.fritz2.core.scrollLeft"]},{"name":"fun Tag<HTMLElement>.scrollLeft(value: Flow<Double>)","description":"dev.fritz2.core.scrollLeft","location":"core/dev.fritz2.core/scroll-left.html","searchKeys":["scrollLeft","fun Tag<HTMLElement>.scrollLeft(value: Flow<Double>)","dev.fritz2.core.scrollLeft"]},{"name":"fun Tag<HTMLElement>.scrollTop(value: Double)","description":"dev.fritz2.core.scrollTop","location":"core/dev.fritz2.core/scroll-top.html","searchKeys":["scrollTop","fun Tag<HTMLElement>.scrollTop(value: Double)","dev.fritz2.core.scrollTop"]},{"name":"fun Tag<HTMLElement>.scrollTop(value: Flow<Double>)","description":"dev.fritz2.core.scrollTop","location":"core/dev.fritz2.core/scroll-top.html","searchKeys":["scrollTop","fun Tag<HTMLElement>.scrollTop(value: Flow<Double>)","dev.fritz2.core.scrollTop"]},{"name":"fun Tag<HTMLElement>.slot(value: Flow<String>)","description":"dev.fritz2.core.slot","location":"core/dev.fritz2.core/slot.html","searchKeys":["slot","fun Tag<HTMLElement>.slot(value: Flow<String>)","dev.fritz2.core.slot"]},{"name":"fun Tag<HTMLElement>.slot(value: String)","description":"dev.fritz2.core.slot","location":"core/dev.fritz2.core/slot.html","searchKeys":["slot","fun Tag<HTMLElement>.slot(value: String)","dev.fritz2.core.slot"]},{"name":"fun Tag<HTMLElement>.spellcheck(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.spellcheck","location":"core/dev.fritz2.core/spellcheck.html","searchKeys":["spellcheck","fun Tag<HTMLElement>.spellcheck(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.spellcheck"]},{"name":"fun Tag<HTMLElement>.spellcheck(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.spellcheck","location":"core/dev.fritz2.core/spellcheck.html","searchKeys":["spellcheck","fun Tag<HTMLElement>.spellcheck(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.spellcheck"]},{"name":"fun Tag<HTMLElement>.tabIndex(value: Flow<Int>)","description":"dev.fritz2.core.tabIndex","location":"core/dev.fritz2.core/tab-index.html","searchKeys":["tabIndex","fun Tag<HTMLElement>.tabIndex(value: Flow<Int>)","dev.fritz2.core.tabIndex"]},{"name":"fun Tag<HTMLElement>.tabIndex(value: Int)","description":"dev.fritz2.core.tabIndex","location":"core/dev.fritz2.core/tab-index.html","searchKeys":["tabIndex","fun Tag<HTMLElement>.tabIndex(value: Int)","dev.fritz2.core.tabIndex"]},{"name":"fun Tag<HTMLElement>.textContent(value: Flow<String?>)","description":"dev.fritz2.core.textContent","location":"core/dev.fritz2.core/text-content.html","searchKeys":["textContent","fun Tag<HTMLElement>.textContent(value: Flow<String?>)","dev.fritz2.core.textContent"]},{"name":"fun Tag<HTMLElement>.textContent(value: String?)","description":"dev.fritz2.core.textContent","location":"core/dev.fritz2.core/text-content.html","searchKeys":["textContent","fun Tag<HTMLElement>.textContent(value: String?)","dev.fritz2.core.textContent"]},{"name":"fun Tag<HTMLElement>.title(value: Flow<String>)","description":"dev.fritz2.core.title","location":"core/dev.fritz2.core/title.html","searchKeys":["title","fun Tag<HTMLElement>.title(value: Flow<String>)","dev.fritz2.core.title"]},{"name":"fun Tag<HTMLElement>.title(value: String)","description":"dev.fritz2.core.title","location":"core/dev.fritz2.core/title.html","searchKeys":["title","fun Tag<HTMLElement>.title(value: String)","dev.fritz2.core.title"]},{"name":"fun Tag<HTMLElement>.transition(enter: String? = null, enterStart: String? = null, enterEnd: String? = null, leave: String? = null, leaveStart: String? = null, leaveEnd: String? = null)","description":"dev.fritz2.core.transition","location":"core/dev.fritz2.core/transition.html","searchKeys":["transition","fun Tag<HTMLElement>.transition(enter: String? = null, enterStart: String? = null, enterEnd: String? = null, leave: String? = null, leaveStart: String? = null, leaveEnd: String? = null)","dev.fritz2.core.transition"]},{"name":"fun Tag<HTMLElement>.transition(on: Flow<Boolean>, enter: String? = null, enterStart: String? = null, enterEnd: String? = null, leave: String? = null, leaveStart: String? = null, leaveEnd: String? = null, hasLeftClasses: String? = null, initialClasses: String? = null)","description":"dev.fritz2.core.transition","location":"core/dev.fritz2.core/transition.html","searchKeys":["transition","fun Tag<HTMLElement>.transition(on: Flow<Boolean>, enter: String? = null, enterStart: String? = null, enterEnd: String? = null, leave: String? = null, leaveStart: String? = null, leaveEnd: String? = null, hasLeftClasses: String? = null, initialClasses: String? = null)","dev.fritz2.core.transition"]},{"name":"fun Tag<HTMLElement>.transition(on: Flow<Boolean>, transition: Transition, afterLeaveClasses: String? = null, initialClasses: String? = null)","description":"dev.fritz2.core.transition","location":"core/dev.fritz2.core/transition.html","searchKeys":["transition","fun Tag<HTMLElement>.transition(on: Flow<Boolean>, transition: Transition, afterLeaveClasses: String? = null, initialClasses: String? = null)","dev.fritz2.core.transition"]},{"name":"fun Tag<HTMLElement>.transition(transition: Transition)","description":"dev.fritz2.core.transition","location":"core/dev.fritz2.core/transition.html","searchKeys":["transition","fun Tag<HTMLElement>.transition(transition: Transition)","dev.fritz2.core.transition"]},{"name":"fun Tag<HTMLElement>.translate(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.translate","location":"core/dev.fritz2.core/translate.html","searchKeys":["translate","fun Tag<HTMLElement>.translate(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.translate"]},{"name":"fun Tag<HTMLElement>.translate(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.translate","location":"core/dev.fritz2.core/translate.html","searchKeys":["translate","fun Tag<HTMLElement>.translate(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.translate"]},{"name":"fun Tag<HTMLEmbedElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLEmbedElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLEmbedElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLEmbedElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLEmbedElement>.height(value: Flow<String>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLEmbedElement>.height(value: Flow<String>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLEmbedElement>.height(value: String)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLEmbedElement>.height(value: String)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLEmbedElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLEmbedElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLEmbedElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLEmbedElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLEmbedElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLEmbedElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLEmbedElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLEmbedElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLEmbedElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLEmbedElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLEmbedElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLEmbedElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLEmbedElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLEmbedElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLEmbedElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLEmbedElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLFieldSetElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLFieldSetElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLFieldSetElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLFieldSetElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLFieldSetElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLFieldSetElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLFieldSetElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLFieldSetElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLFontElement>.color(value: Flow<String>)","description":"dev.fritz2.core.color","location":"core/dev.fritz2.core/color.html","searchKeys":["color","fun Tag<HTMLFontElement>.color(value: Flow<String>)","dev.fritz2.core.color"]},{"name":"fun Tag<HTMLFontElement>.color(value: String)","description":"dev.fritz2.core.color","location":"core/dev.fritz2.core/color.html","searchKeys":["color","fun Tag<HTMLFontElement>.color(value: String)","dev.fritz2.core.color"]},{"name":"fun Tag<HTMLFontElement>.face(value: Flow<String>)","description":"dev.fritz2.core.face","location":"core/dev.fritz2.core/face.html","searchKeys":["face","fun Tag<HTMLFontElement>.face(value: Flow<String>)","dev.fritz2.core.face"]},{"name":"fun Tag<HTMLFontElement>.face(value: String)","description":"dev.fritz2.core.face","location":"core/dev.fritz2.core/face.html","searchKeys":["face","fun Tag<HTMLFontElement>.face(value: String)","dev.fritz2.core.face"]},{"name":"fun Tag<HTMLFontElement>.size(value: Flow<String>)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLFontElement>.size(value: Flow<String>)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLFontElement>.size(value: String)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLFontElement>.size(value: String)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLFormElement>.acceptCharset(value: Flow<String>)","description":"dev.fritz2.core.acceptCharset","location":"core/dev.fritz2.core/accept-charset.html","searchKeys":["acceptCharset","fun Tag<HTMLFormElement>.acceptCharset(value: Flow<String>)","dev.fritz2.core.acceptCharset"]},{"name":"fun Tag<HTMLFormElement>.acceptCharset(value: String)","description":"dev.fritz2.core.acceptCharset","location":"core/dev.fritz2.core/accept-charset.html","searchKeys":["acceptCharset","fun Tag<HTMLFormElement>.acceptCharset(value: String)","dev.fritz2.core.acceptCharset"]},{"name":"fun Tag<HTMLFormElement>.action(value: Flow<String>)","description":"dev.fritz2.core.action","location":"core/dev.fritz2.core/action.html","searchKeys":["action","fun Tag<HTMLFormElement>.action(value: Flow<String>)","dev.fritz2.core.action"]},{"name":"fun Tag<HTMLFormElement>.action(value: String)","description":"dev.fritz2.core.action","location":"core/dev.fritz2.core/action.html","searchKeys":["action","fun Tag<HTMLFormElement>.action(value: String)","dev.fritz2.core.action"]},{"name":"fun Tag<HTMLFormElement>.autocomplete(value: Flow<String>)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLFormElement>.autocomplete(value: Flow<String>)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLFormElement>.autocomplete(value: String)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLFormElement>.autocomplete(value: String)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLFormElement>.encoding(value: Flow<String>)","description":"dev.fritz2.core.encoding","location":"core/dev.fritz2.core/encoding.html","searchKeys":["encoding","fun Tag<HTMLFormElement>.encoding(value: Flow<String>)","dev.fritz2.core.encoding"]},{"name":"fun Tag<HTMLFormElement>.encoding(value: String)","description":"dev.fritz2.core.encoding","location":"core/dev.fritz2.core/encoding.html","searchKeys":["encoding","fun Tag<HTMLFormElement>.encoding(value: String)","dev.fritz2.core.encoding"]},{"name":"fun Tag<HTMLFormElement>.enctype(value: Flow<String>)","description":"dev.fritz2.core.enctype","location":"core/dev.fritz2.core/enctype.html","searchKeys":["enctype","fun Tag<HTMLFormElement>.enctype(value: Flow<String>)","dev.fritz2.core.enctype"]},{"name":"fun Tag<HTMLFormElement>.enctype(value: String)","description":"dev.fritz2.core.enctype","location":"core/dev.fritz2.core/enctype.html","searchKeys":["enctype","fun Tag<HTMLFormElement>.enctype(value: String)","dev.fritz2.core.enctype"]},{"name":"fun Tag<HTMLFormElement>.method(value: Flow<String>)","description":"dev.fritz2.core.method","location":"core/dev.fritz2.core/method.html","searchKeys":["method","fun Tag<HTMLFormElement>.method(value: Flow<String>)","dev.fritz2.core.method"]},{"name":"fun Tag<HTMLFormElement>.method(value: String)","description":"dev.fritz2.core.method","location":"core/dev.fritz2.core/method.html","searchKeys":["method","fun Tag<HTMLFormElement>.method(value: String)","dev.fritz2.core.method"]},{"name":"fun Tag<HTMLFormElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLFormElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLFormElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLFormElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLFormElement>.noValidate(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.noValidate","location":"core/dev.fritz2.core/no-validate.html","searchKeys":["noValidate","fun Tag<HTMLFormElement>.noValidate(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.noValidate"]},{"name":"fun Tag<HTMLFormElement>.noValidate(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.noValidate","location":"core/dev.fritz2.core/no-validate.html","searchKeys":["noValidate","fun Tag<HTMLFormElement>.noValidate(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.noValidate"]},{"name":"fun Tag<HTMLFormElement>.target(value: Flow<String>)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLFormElement>.target(value: Flow<String>)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLFormElement>.target(value: String)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLFormElement>.target(value: String)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLFrameElement>.frameBorder(value: Flow<String>)","description":"dev.fritz2.core.frameBorder","location":"core/dev.fritz2.core/frame-border.html","searchKeys":["frameBorder","fun Tag<HTMLFrameElement>.frameBorder(value: Flow<String>)","dev.fritz2.core.frameBorder"]},{"name":"fun Tag<HTMLFrameElement>.frameBorder(value: String)","description":"dev.fritz2.core.frameBorder","location":"core/dev.fritz2.core/frame-border.html","searchKeys":["frameBorder","fun Tag<HTMLFrameElement>.frameBorder(value: String)","dev.fritz2.core.frameBorder"]},{"name":"fun Tag<HTMLFrameElement>.longDesc(value: Flow<String>)","description":"dev.fritz2.core.longDesc","location":"core/dev.fritz2.core/long-desc.html","searchKeys":["longDesc","fun Tag<HTMLFrameElement>.longDesc(value: Flow<String>)","dev.fritz2.core.longDesc"]},{"name":"fun Tag<HTMLFrameElement>.longDesc(value: String)","description":"dev.fritz2.core.longDesc","location":"core/dev.fritz2.core/long-desc.html","searchKeys":["longDesc","fun Tag<HTMLFrameElement>.longDesc(value: String)","dev.fritz2.core.longDesc"]},{"name":"fun Tag<HTMLFrameElement>.marginHeight(value: Flow<String>)","description":"dev.fritz2.core.marginHeight","location":"core/dev.fritz2.core/margin-height.html","searchKeys":["marginHeight","fun Tag<HTMLFrameElement>.marginHeight(value: Flow<String>)","dev.fritz2.core.marginHeight"]},{"name":"fun Tag<HTMLFrameElement>.marginHeight(value: String)","description":"dev.fritz2.core.marginHeight","location":"core/dev.fritz2.core/margin-height.html","searchKeys":["marginHeight","fun Tag<HTMLFrameElement>.marginHeight(value: String)","dev.fritz2.core.marginHeight"]},{"name":"fun Tag<HTMLFrameElement>.marginWidth(value: Flow<String>)","description":"dev.fritz2.core.marginWidth","location":"core/dev.fritz2.core/margin-width.html","searchKeys":["marginWidth","fun Tag<HTMLFrameElement>.marginWidth(value: Flow<String>)","dev.fritz2.core.marginWidth"]},{"name":"fun Tag<HTMLFrameElement>.marginWidth(value: String)","description":"dev.fritz2.core.marginWidth","location":"core/dev.fritz2.core/margin-width.html","searchKeys":["marginWidth","fun Tag<HTMLFrameElement>.marginWidth(value: String)","dev.fritz2.core.marginWidth"]},{"name":"fun Tag<HTMLFrameElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLFrameElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLFrameElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLFrameElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLFrameElement>.noResize(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.noResize","location":"core/dev.fritz2.core/no-resize.html","searchKeys":["noResize","fun Tag<HTMLFrameElement>.noResize(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.noResize"]},{"name":"fun Tag<HTMLFrameElement>.noResize(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.noResize","location":"core/dev.fritz2.core/no-resize.html","searchKeys":["noResize","fun Tag<HTMLFrameElement>.noResize(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.noResize"]},{"name":"fun Tag<HTMLFrameElement>.scrolling(value: Flow<String>)","description":"dev.fritz2.core.scrolling","location":"core/dev.fritz2.core/scrolling.html","searchKeys":["scrolling","fun Tag<HTMLFrameElement>.scrolling(value: Flow<String>)","dev.fritz2.core.scrolling"]},{"name":"fun Tag<HTMLFrameElement>.scrolling(value: String)","description":"dev.fritz2.core.scrolling","location":"core/dev.fritz2.core/scrolling.html","searchKeys":["scrolling","fun Tag<HTMLFrameElement>.scrolling(value: String)","dev.fritz2.core.scrolling"]},{"name":"fun Tag<HTMLFrameElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLFrameElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLFrameElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLFrameElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLFrameSetElement>.cols(value: Flow<String>)","description":"dev.fritz2.core.cols","location":"core/dev.fritz2.core/cols.html","searchKeys":["cols","fun Tag<HTMLFrameSetElement>.cols(value: Flow<String>)","dev.fritz2.core.cols"]},{"name":"fun Tag<HTMLFrameSetElement>.cols(value: String)","description":"dev.fritz2.core.cols","location":"core/dev.fritz2.core/cols.html","searchKeys":["cols","fun Tag<HTMLFrameSetElement>.cols(value: String)","dev.fritz2.core.cols"]},{"name":"fun Tag<HTMLFrameSetElement>.rows(value: Flow<String>)","description":"dev.fritz2.core.rows","location":"core/dev.fritz2.core/rows.html","searchKeys":["rows","fun Tag<HTMLFrameSetElement>.rows(value: Flow<String>)","dev.fritz2.core.rows"]},{"name":"fun Tag<HTMLFrameSetElement>.rows(value: String)","description":"dev.fritz2.core.rows","location":"core/dev.fritz2.core/rows.html","searchKeys":["rows","fun Tag<HTMLFrameSetElement>.rows(value: String)","dev.fritz2.core.rows"]},{"name":"fun Tag<HTMLHRElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLHRElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLHRElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLHRElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLHRElement>.color(value: Flow<String>)","description":"dev.fritz2.core.color","location":"core/dev.fritz2.core/color.html","searchKeys":["color","fun Tag<HTMLHRElement>.color(value: Flow<String>)","dev.fritz2.core.color"]},{"name":"fun Tag<HTMLHRElement>.color(value: String)","description":"dev.fritz2.core.color","location":"core/dev.fritz2.core/color.html","searchKeys":["color","fun Tag<HTMLHRElement>.color(value: String)","dev.fritz2.core.color"]},{"name":"fun Tag<HTMLHRElement>.noShade(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.noShade","location":"core/dev.fritz2.core/no-shade.html","searchKeys":["noShade","fun Tag<HTMLHRElement>.noShade(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.noShade"]},{"name":"fun Tag<HTMLHRElement>.noShade(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.noShade","location":"core/dev.fritz2.core/no-shade.html","searchKeys":["noShade","fun Tag<HTMLHRElement>.noShade(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.noShade"]},{"name":"fun Tag<HTMLHRElement>.size(value: Flow<String>)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLHRElement>.size(value: Flow<String>)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLHRElement>.size(value: String)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLHRElement>.size(value: String)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLHRElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLHRElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLHRElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLHRElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLHeadingElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLHeadingElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLHeadingElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLHeadingElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLIFrameElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLIFrameElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLIFrameElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLIFrameElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLIFrameElement>.allowFullscreen(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.allowFullscreen","location":"core/dev.fritz2.core/allow-fullscreen.html","searchKeys":["allowFullscreen","fun Tag<HTMLIFrameElement>.allowFullscreen(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.allowFullscreen"]},{"name":"fun Tag<HTMLIFrameElement>.allowFullscreen(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.allowFullscreen","location":"core/dev.fritz2.core/allow-fullscreen.html","searchKeys":["allowFullscreen","fun Tag<HTMLIFrameElement>.allowFullscreen(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.allowFullscreen"]},{"name":"fun Tag<HTMLIFrameElement>.allowUserMedia(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.allowUserMedia","location":"core/dev.fritz2.core/allow-user-media.html","searchKeys":["allowUserMedia","fun Tag<HTMLIFrameElement>.allowUserMedia(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.allowUserMedia"]},{"name":"fun Tag<HTMLIFrameElement>.allowUserMedia(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.allowUserMedia","location":"core/dev.fritz2.core/allow-user-media.html","searchKeys":["allowUserMedia","fun Tag<HTMLIFrameElement>.allowUserMedia(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.allowUserMedia"]},{"name":"fun Tag<HTMLIFrameElement>.frameBorder(value: Flow<String>)","description":"dev.fritz2.core.frameBorder","location":"core/dev.fritz2.core/frame-border.html","searchKeys":["frameBorder","fun Tag<HTMLIFrameElement>.frameBorder(value: Flow<String>)","dev.fritz2.core.frameBorder"]},{"name":"fun Tag<HTMLIFrameElement>.frameBorder(value: String)","description":"dev.fritz2.core.frameBorder","location":"core/dev.fritz2.core/frame-border.html","searchKeys":["frameBorder","fun Tag<HTMLIFrameElement>.frameBorder(value: String)","dev.fritz2.core.frameBorder"]},{"name":"fun Tag<HTMLIFrameElement>.height(value: Flow<String>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLIFrameElement>.height(value: Flow<String>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLIFrameElement>.height(value: String)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLIFrameElement>.height(value: String)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLIFrameElement>.longDesc(value: Flow<String>)","description":"dev.fritz2.core.longDesc","location":"core/dev.fritz2.core/long-desc.html","searchKeys":["longDesc","fun Tag<HTMLIFrameElement>.longDesc(value: Flow<String>)","dev.fritz2.core.longDesc"]},{"name":"fun Tag<HTMLIFrameElement>.longDesc(value: String)","description":"dev.fritz2.core.longDesc","location":"core/dev.fritz2.core/long-desc.html","searchKeys":["longDesc","fun Tag<HTMLIFrameElement>.longDesc(value: String)","dev.fritz2.core.longDesc"]},{"name":"fun Tag<HTMLIFrameElement>.marginHeight(value: Flow<String>)","description":"dev.fritz2.core.marginHeight","location":"core/dev.fritz2.core/margin-height.html","searchKeys":["marginHeight","fun Tag<HTMLIFrameElement>.marginHeight(value: Flow<String>)","dev.fritz2.core.marginHeight"]},{"name":"fun Tag<HTMLIFrameElement>.marginHeight(value: String)","description":"dev.fritz2.core.marginHeight","location":"core/dev.fritz2.core/margin-height.html","searchKeys":["marginHeight","fun Tag<HTMLIFrameElement>.marginHeight(value: String)","dev.fritz2.core.marginHeight"]},{"name":"fun Tag<HTMLIFrameElement>.marginWidth(value: Flow<String>)","description":"dev.fritz2.core.marginWidth","location":"core/dev.fritz2.core/margin-width.html","searchKeys":["marginWidth","fun Tag<HTMLIFrameElement>.marginWidth(value: Flow<String>)","dev.fritz2.core.marginWidth"]},{"name":"fun Tag<HTMLIFrameElement>.marginWidth(value: String)","description":"dev.fritz2.core.marginWidth","location":"core/dev.fritz2.core/margin-width.html","searchKeys":["marginWidth","fun Tag<HTMLIFrameElement>.marginWidth(value: String)","dev.fritz2.core.marginWidth"]},{"name":"fun Tag<HTMLIFrameElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLIFrameElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLIFrameElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLIFrameElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLIFrameElement>.referrerPolicy(value: Flow<String>)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLIFrameElement>.referrerPolicy(value: Flow<String>)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLIFrameElement>.referrerPolicy(value: String)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLIFrameElement>.referrerPolicy(value: String)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLIFrameElement>.scrolling(value: Flow<String>)","description":"dev.fritz2.core.scrolling","location":"core/dev.fritz2.core/scrolling.html","searchKeys":["scrolling","fun Tag<HTMLIFrameElement>.scrolling(value: Flow<String>)","dev.fritz2.core.scrolling"]},{"name":"fun Tag<HTMLIFrameElement>.scrolling(value: String)","description":"dev.fritz2.core.scrolling","location":"core/dev.fritz2.core/scrolling.html","searchKeys":["scrolling","fun Tag<HTMLIFrameElement>.scrolling(value: String)","dev.fritz2.core.scrolling"]},{"name":"fun Tag<HTMLIFrameElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLIFrameElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLIFrameElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLIFrameElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLIFrameElement>.srcdoc(value: Flow<String>)","description":"dev.fritz2.core.srcdoc","location":"core/dev.fritz2.core/srcdoc.html","searchKeys":["srcdoc","fun Tag<HTMLIFrameElement>.srcdoc(value: Flow<String>)","dev.fritz2.core.srcdoc"]},{"name":"fun Tag<HTMLIFrameElement>.srcdoc(value: String)","description":"dev.fritz2.core.srcdoc","location":"core/dev.fritz2.core/srcdoc.html","searchKeys":["srcdoc","fun Tag<HTMLIFrameElement>.srcdoc(value: String)","dev.fritz2.core.srcdoc"]},{"name":"fun Tag<HTMLIFrameElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLIFrameElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLIFrameElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLIFrameElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLImageElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLImageElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLImageElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLImageElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLImageElement>.alt(value: Flow<String>)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLImageElement>.alt(value: Flow<String>)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLImageElement>.alt(value: String)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLImageElement>.alt(value: String)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLImageElement>.border(value: Flow<String>)","description":"dev.fritz2.core.border","location":"core/dev.fritz2.core/border.html","searchKeys":["border","fun Tag<HTMLImageElement>.border(value: Flow<String>)","dev.fritz2.core.border"]},{"name":"fun Tag<HTMLImageElement>.border(value: String)","description":"dev.fritz2.core.border","location":"core/dev.fritz2.core/border.html","searchKeys":["border","fun Tag<HTMLImageElement>.border(value: String)","dev.fritz2.core.border"]},{"name":"fun Tag<HTMLImageElement>.crossOrigin(value: Flow<String?>)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLImageElement>.crossOrigin(value: Flow<String?>)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLImageElement>.crossOrigin(value: String?)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLImageElement>.crossOrigin(value: String?)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLImageElement>.height(value: Flow<Int>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLImageElement>.height(value: Flow<Int>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLImageElement>.height(value: Int)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLImageElement>.height(value: Int)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLImageElement>.hspace(value: Flow<Int>)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLImageElement>.hspace(value: Flow<Int>)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLImageElement>.hspace(value: Int)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLImageElement>.hspace(value: Int)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLImageElement>.isMap(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.isMap","location":"core/dev.fritz2.core/is-map.html","searchKeys":["isMap","fun Tag<HTMLImageElement>.isMap(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.isMap"]},{"name":"fun Tag<HTMLImageElement>.isMap(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.isMap","location":"core/dev.fritz2.core/is-map.html","searchKeys":["isMap","fun Tag<HTMLImageElement>.isMap(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.isMap"]},{"name":"fun Tag<HTMLImageElement>.longDesc(value: Flow<String>)","description":"dev.fritz2.core.longDesc","location":"core/dev.fritz2.core/long-desc.html","searchKeys":["longDesc","fun Tag<HTMLImageElement>.longDesc(value: Flow<String>)","dev.fritz2.core.longDesc"]},{"name":"fun Tag<HTMLImageElement>.longDesc(value: String)","description":"dev.fritz2.core.longDesc","location":"core/dev.fritz2.core/long-desc.html","searchKeys":["longDesc","fun Tag<HTMLImageElement>.longDesc(value: String)","dev.fritz2.core.longDesc"]},{"name":"fun Tag<HTMLImageElement>.lowsrc(value: Flow<String>)","description":"dev.fritz2.core.lowsrc","location":"core/dev.fritz2.core/lowsrc.html","searchKeys":["lowsrc","fun Tag<HTMLImageElement>.lowsrc(value: Flow<String>)","dev.fritz2.core.lowsrc"]},{"name":"fun Tag<HTMLImageElement>.lowsrc(value: String)","description":"dev.fritz2.core.lowsrc","location":"core/dev.fritz2.core/lowsrc.html","searchKeys":["lowsrc","fun Tag<HTMLImageElement>.lowsrc(value: String)","dev.fritz2.core.lowsrc"]},{"name":"fun Tag<HTMLImageElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLImageElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLImageElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLImageElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLImageElement>.referrerPolicy(value: Flow<String>)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLImageElement>.referrerPolicy(value: Flow<String>)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLImageElement>.referrerPolicy(value: String)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLImageElement>.referrerPolicy(value: String)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLImageElement>.sizes(value: Flow<String>)","description":"dev.fritz2.core.sizes","location":"core/dev.fritz2.core/sizes.html","searchKeys":["sizes","fun Tag<HTMLImageElement>.sizes(value: Flow<String>)","dev.fritz2.core.sizes"]},{"name":"fun Tag<HTMLImageElement>.sizes(value: String)","description":"dev.fritz2.core.sizes","location":"core/dev.fritz2.core/sizes.html","searchKeys":["sizes","fun Tag<HTMLImageElement>.sizes(value: String)","dev.fritz2.core.sizes"]},{"name":"fun Tag<HTMLImageElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLImageElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLImageElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLImageElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLImageElement>.srcset(value: Flow<String>)","description":"dev.fritz2.core.srcset","location":"core/dev.fritz2.core/srcset.html","searchKeys":["srcset","fun Tag<HTMLImageElement>.srcset(value: Flow<String>)","dev.fritz2.core.srcset"]},{"name":"fun Tag<HTMLImageElement>.srcset(value: String)","description":"dev.fritz2.core.srcset","location":"core/dev.fritz2.core/srcset.html","searchKeys":["srcset","fun Tag<HTMLImageElement>.srcset(value: String)","dev.fritz2.core.srcset"]},{"name":"fun Tag<HTMLImageElement>.useMap(value: Flow<String>)","description":"dev.fritz2.core.useMap","location":"core/dev.fritz2.core/use-map.html","searchKeys":["useMap","fun Tag<HTMLImageElement>.useMap(value: Flow<String>)","dev.fritz2.core.useMap"]},{"name":"fun Tag<HTMLImageElement>.useMap(value: String)","description":"dev.fritz2.core.useMap","location":"core/dev.fritz2.core/use-map.html","searchKeys":["useMap","fun Tag<HTMLImageElement>.useMap(value: String)","dev.fritz2.core.useMap"]},{"name":"fun Tag<HTMLImageElement>.vspace(value: Flow<Int>)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLImageElement>.vspace(value: Flow<Int>)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLImageElement>.vspace(value: Int)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLImageElement>.vspace(value: Int)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLImageElement>.width(value: Flow<Int>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLImageElement>.width(value: Flow<Int>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLImageElement>.width(value: Int)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLImageElement>.width(value: Int)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLInputElement>.accept(value: Flow<String>)","description":"dev.fritz2.core.accept","location":"core/dev.fritz2.core/accept.html","searchKeys":["accept","fun Tag<HTMLInputElement>.accept(value: Flow<String>)","dev.fritz2.core.accept"]},{"name":"fun Tag<HTMLInputElement>.accept(value: String)","description":"dev.fritz2.core.accept","location":"core/dev.fritz2.core/accept.html","searchKeys":["accept","fun Tag<HTMLInputElement>.accept(value: String)","dev.fritz2.core.accept"]},{"name":"fun Tag<HTMLInputElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLInputElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLInputElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLInputElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLInputElement>.alt(value: Flow<String>)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLInputElement>.alt(value: Flow<String>)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLInputElement>.alt(value: String)","description":"dev.fritz2.core.alt","location":"core/dev.fritz2.core/alt.html","searchKeys":["alt","fun Tag<HTMLInputElement>.alt(value: String)","dev.fritz2.core.alt"]},{"name":"fun Tag<HTMLInputElement>.autocomplete(value: Flow<String>)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLInputElement>.autocomplete(value: Flow<String>)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLInputElement>.autocomplete(value: String)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLInputElement>.autocomplete(value: String)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLInputElement>.autofocus(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLInputElement>.autofocus(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLInputElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLInputElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLInputElement>.checked(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.checked","location":"core/dev.fritz2.core/checked.html","searchKeys":["checked","fun Tag<HTMLInputElement>.checked(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.checked"]},{"name":"fun Tag<HTMLInputElement>.checked(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.checked","location":"core/dev.fritz2.core/checked.html","searchKeys":["checked","fun Tag<HTMLInputElement>.checked(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.checked"]},{"name":"fun Tag<HTMLInputElement>.defaultChecked(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.defaultChecked","location":"core/dev.fritz2.core/default-checked.html","searchKeys":["defaultChecked","fun Tag<HTMLInputElement>.defaultChecked(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.defaultChecked"]},{"name":"fun Tag<HTMLInputElement>.defaultChecked(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.defaultChecked","location":"core/dev.fritz2.core/default-checked.html","searchKeys":["defaultChecked","fun Tag<HTMLInputElement>.defaultChecked(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.defaultChecked"]},{"name":"fun Tag<HTMLInputElement>.defaultValue(value: Flow<String>)","description":"dev.fritz2.core.defaultValue","location":"core/dev.fritz2.core/default-value.html","searchKeys":["defaultValue","fun Tag<HTMLInputElement>.defaultValue(value: Flow<String>)","dev.fritz2.core.defaultValue"]},{"name":"fun Tag<HTMLInputElement>.defaultValue(value: String)","description":"dev.fritz2.core.defaultValue","location":"core/dev.fritz2.core/default-value.html","searchKeys":["defaultValue","fun Tag<HTMLInputElement>.defaultValue(value: String)","dev.fritz2.core.defaultValue"]},{"name":"fun Tag<HTMLInputElement>.dirName(value: Flow<String>)","description":"dev.fritz2.core.dirName","location":"core/dev.fritz2.core/dir-name.html","searchKeys":["dirName","fun Tag<HTMLInputElement>.dirName(value: Flow<String>)","dev.fritz2.core.dirName"]},{"name":"fun Tag<HTMLInputElement>.dirName(value: String)","description":"dev.fritz2.core.dirName","location":"core/dev.fritz2.core/dir-name.html","searchKeys":["dirName","fun Tag<HTMLInputElement>.dirName(value: String)","dev.fritz2.core.dirName"]},{"name":"fun Tag<HTMLInputElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLInputElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLInputElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLInputElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLInputElement>.formAction(value: Flow<String>)","description":"dev.fritz2.core.formAction","location":"core/dev.fritz2.core/form-action.html","searchKeys":["formAction","fun Tag<HTMLInputElement>.formAction(value: Flow<String>)","dev.fritz2.core.formAction"]},{"name":"fun Tag<HTMLInputElement>.formAction(value: String)","description":"dev.fritz2.core.formAction","location":"core/dev.fritz2.core/form-action.html","searchKeys":["formAction","fun Tag<HTMLInputElement>.formAction(value: String)","dev.fritz2.core.formAction"]},{"name":"fun Tag<HTMLInputElement>.formEnctype(value: Flow<String>)","description":"dev.fritz2.core.formEnctype","location":"core/dev.fritz2.core/form-enctype.html","searchKeys":["formEnctype","fun Tag<HTMLInputElement>.formEnctype(value: Flow<String>)","dev.fritz2.core.formEnctype"]},{"name":"fun Tag<HTMLInputElement>.formEnctype(value: String)","description":"dev.fritz2.core.formEnctype","location":"core/dev.fritz2.core/form-enctype.html","searchKeys":["formEnctype","fun Tag<HTMLInputElement>.formEnctype(value: String)","dev.fritz2.core.formEnctype"]},{"name":"fun Tag<HTMLInputElement>.formMethod(value: Flow<String>)","description":"dev.fritz2.core.formMethod","location":"core/dev.fritz2.core/form-method.html","searchKeys":["formMethod","fun Tag<HTMLInputElement>.formMethod(value: Flow<String>)","dev.fritz2.core.formMethod"]},{"name":"fun Tag<HTMLInputElement>.formMethod(value: String)","description":"dev.fritz2.core.formMethod","location":"core/dev.fritz2.core/form-method.html","searchKeys":["formMethod","fun Tag<HTMLInputElement>.formMethod(value: String)","dev.fritz2.core.formMethod"]},{"name":"fun Tag<HTMLInputElement>.formNoValidate(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.formNoValidate","location":"core/dev.fritz2.core/form-no-validate.html","searchKeys":["formNoValidate","fun Tag<HTMLInputElement>.formNoValidate(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.formNoValidate"]},{"name":"fun Tag<HTMLInputElement>.formNoValidate(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.formNoValidate","location":"core/dev.fritz2.core/form-no-validate.html","searchKeys":["formNoValidate","fun Tag<HTMLInputElement>.formNoValidate(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.formNoValidate"]},{"name":"fun Tag<HTMLInputElement>.formTarget(value: Flow<String>)","description":"dev.fritz2.core.formTarget","location":"core/dev.fritz2.core/form-target.html","searchKeys":["formTarget","fun Tag<HTMLInputElement>.formTarget(value: Flow<String>)","dev.fritz2.core.formTarget"]},{"name":"fun Tag<HTMLInputElement>.formTarget(value: String)","description":"dev.fritz2.core.formTarget","location":"core/dev.fritz2.core/form-target.html","searchKeys":["formTarget","fun Tag<HTMLInputElement>.formTarget(value: String)","dev.fritz2.core.formTarget"]},{"name":"fun Tag<HTMLInputElement>.height(value: Flow<Int>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLInputElement>.height(value: Flow<Int>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLInputElement>.height(value: Int)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLInputElement>.height(value: Int)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLInputElement>.indeterminate(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.indeterminate","location":"core/dev.fritz2.core/indeterminate.html","searchKeys":["indeterminate","fun Tag<HTMLInputElement>.indeterminate(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.indeterminate"]},{"name":"fun Tag<HTMLInputElement>.indeterminate(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.indeterminate","location":"core/dev.fritz2.core/indeterminate.html","searchKeys":["indeterminate","fun Tag<HTMLInputElement>.indeterminate(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.indeterminate"]},{"name":"fun Tag<HTMLInputElement>.inputMode(value: Flow<String>)","description":"dev.fritz2.core.inputMode","location":"core/dev.fritz2.core/input-mode.html","searchKeys":["inputMode","fun Tag<HTMLInputElement>.inputMode(value: Flow<String>)","dev.fritz2.core.inputMode"]},{"name":"fun Tag<HTMLInputElement>.inputMode(value: String)","description":"dev.fritz2.core.inputMode","location":"core/dev.fritz2.core/input-mode.html","searchKeys":["inputMode","fun Tag<HTMLInputElement>.inputMode(value: String)","dev.fritz2.core.inputMode"]},{"name":"fun Tag<HTMLInputElement>.max(value: Flow<String>)","description":"dev.fritz2.core.max","location":"core/dev.fritz2.core/max.html","searchKeys":["max","fun Tag<HTMLInputElement>.max(value: Flow<String>)","dev.fritz2.core.max"]},{"name":"fun Tag<HTMLInputElement>.max(value: String)","description":"dev.fritz2.core.max","location":"core/dev.fritz2.core/max.html","searchKeys":["max","fun Tag<HTMLInputElement>.max(value: String)","dev.fritz2.core.max"]},{"name":"fun Tag<HTMLInputElement>.maxLength(value: Flow<Int>)","description":"dev.fritz2.core.maxLength","location":"core/dev.fritz2.core/max-length.html","searchKeys":["maxLength","fun Tag<HTMLInputElement>.maxLength(value: Flow<Int>)","dev.fritz2.core.maxLength"]},{"name":"fun Tag<HTMLInputElement>.maxLength(value: Int)","description":"dev.fritz2.core.maxLength","location":"core/dev.fritz2.core/max-length.html","searchKeys":["maxLength","fun Tag<HTMLInputElement>.maxLength(value: Int)","dev.fritz2.core.maxLength"]},{"name":"fun Tag<HTMLInputElement>.min(value: Flow<String>)","description":"dev.fritz2.core.min","location":"core/dev.fritz2.core/min.html","searchKeys":["min","fun Tag<HTMLInputElement>.min(value: Flow<String>)","dev.fritz2.core.min"]},{"name":"fun Tag<HTMLInputElement>.min(value: String)","description":"dev.fritz2.core.min","location":"core/dev.fritz2.core/min.html","searchKeys":["min","fun Tag<HTMLInputElement>.min(value: String)","dev.fritz2.core.min"]},{"name":"fun Tag<HTMLInputElement>.minLength(value: Flow<Int>)","description":"dev.fritz2.core.minLength","location":"core/dev.fritz2.core/min-length.html","searchKeys":["minLength","fun Tag<HTMLInputElement>.minLength(value: Flow<Int>)","dev.fritz2.core.minLength"]},{"name":"fun Tag<HTMLInputElement>.minLength(value: Int)","description":"dev.fritz2.core.minLength","location":"core/dev.fritz2.core/min-length.html","searchKeys":["minLength","fun Tag<HTMLInputElement>.minLength(value: Int)","dev.fritz2.core.minLength"]},{"name":"fun Tag<HTMLInputElement>.multiple(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.multiple","location":"core/dev.fritz2.core/multiple.html","searchKeys":["multiple","fun Tag<HTMLInputElement>.multiple(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.multiple"]},{"name":"fun Tag<HTMLInputElement>.multiple(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.multiple","location":"core/dev.fritz2.core/multiple.html","searchKeys":["multiple","fun Tag<HTMLInputElement>.multiple(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.multiple"]},{"name":"fun Tag<HTMLInputElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLInputElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLInputElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLInputElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLInputElement>.pattern(value: Flow<String>)","description":"dev.fritz2.core.pattern","location":"core/dev.fritz2.core/pattern.html","searchKeys":["pattern","fun Tag<HTMLInputElement>.pattern(value: Flow<String>)","dev.fritz2.core.pattern"]},{"name":"fun Tag<HTMLInputElement>.pattern(value: String)","description":"dev.fritz2.core.pattern","location":"core/dev.fritz2.core/pattern.html","searchKeys":["pattern","fun Tag<HTMLInputElement>.pattern(value: String)","dev.fritz2.core.pattern"]},{"name":"fun Tag<HTMLInputElement>.placeholder(value: Flow<String>)","description":"dev.fritz2.core.placeholder","location":"core/dev.fritz2.core/placeholder.html","searchKeys":["placeholder","fun Tag<HTMLInputElement>.placeholder(value: Flow<String>)","dev.fritz2.core.placeholder"]},{"name":"fun Tag<HTMLInputElement>.placeholder(value: String)","description":"dev.fritz2.core.placeholder","location":"core/dev.fritz2.core/placeholder.html","searchKeys":["placeholder","fun Tag<HTMLInputElement>.placeholder(value: String)","dev.fritz2.core.placeholder"]},{"name":"fun Tag<HTMLInputElement>.readOnly(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.readOnly","location":"core/dev.fritz2.core/read-only.html","searchKeys":["readOnly","fun Tag<HTMLInputElement>.readOnly(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.readOnly"]},{"name":"fun Tag<HTMLInputElement>.readOnly(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.readOnly","location":"core/dev.fritz2.core/read-only.html","searchKeys":["readOnly","fun Tag<HTMLInputElement>.readOnly(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.readOnly"]},{"name":"fun Tag<HTMLInputElement>.required(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.required","location":"core/dev.fritz2.core/required.html","searchKeys":["required","fun Tag<HTMLInputElement>.required(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.required"]},{"name":"fun Tag<HTMLInputElement>.required(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.required","location":"core/dev.fritz2.core/required.html","searchKeys":["required","fun Tag<HTMLInputElement>.required(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.required"]},{"name":"fun Tag<HTMLInputElement>.selectionDirection(value: Flow<String?>)","description":"dev.fritz2.core.selectionDirection","location":"core/dev.fritz2.core/selection-direction.html","searchKeys":["selectionDirection","fun Tag<HTMLInputElement>.selectionDirection(value: Flow<String?>)","dev.fritz2.core.selectionDirection"]},{"name":"fun Tag<HTMLInputElement>.selectionDirection(value: String?)","description":"dev.fritz2.core.selectionDirection","location":"core/dev.fritz2.core/selection-direction.html","searchKeys":["selectionDirection","fun Tag<HTMLInputElement>.selectionDirection(value: String?)","dev.fritz2.core.selectionDirection"]},{"name":"fun Tag<HTMLInputElement>.selectionEnd(value: Flow<Int?>)","description":"dev.fritz2.core.selectionEnd","location":"core/dev.fritz2.core/selection-end.html","searchKeys":["selectionEnd","fun Tag<HTMLInputElement>.selectionEnd(value: Flow<Int?>)","dev.fritz2.core.selectionEnd"]},{"name":"fun Tag<HTMLInputElement>.selectionEnd(value: Int?)","description":"dev.fritz2.core.selectionEnd","location":"core/dev.fritz2.core/selection-end.html","searchKeys":["selectionEnd","fun Tag<HTMLInputElement>.selectionEnd(value: Int?)","dev.fritz2.core.selectionEnd"]},{"name":"fun Tag<HTMLInputElement>.selectionStart(value: Flow<Int?>)","description":"dev.fritz2.core.selectionStart","location":"core/dev.fritz2.core/selection-start.html","searchKeys":["selectionStart","fun Tag<HTMLInputElement>.selectionStart(value: Flow<Int?>)","dev.fritz2.core.selectionStart"]},{"name":"fun Tag<HTMLInputElement>.selectionStart(value: Int?)","description":"dev.fritz2.core.selectionStart","location":"core/dev.fritz2.core/selection-start.html","searchKeys":["selectionStart","fun Tag<HTMLInputElement>.selectionStart(value: Int?)","dev.fritz2.core.selectionStart"]},{"name":"fun Tag<HTMLInputElement>.size(value: Flow<Int>)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLInputElement>.size(value: Flow<Int>)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLInputElement>.size(value: Int)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLInputElement>.size(value: Int)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLInputElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLInputElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLInputElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLInputElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLInputElement>.step(value: Flow<String>)","description":"dev.fritz2.core.step","location":"core/dev.fritz2.core/step.html","searchKeys":["step","fun Tag<HTMLInputElement>.step(value: Flow<String>)","dev.fritz2.core.step"]},{"name":"fun Tag<HTMLInputElement>.step(value: String)","description":"dev.fritz2.core.step","location":"core/dev.fritz2.core/step.html","searchKeys":["step","fun Tag<HTMLInputElement>.step(value: String)","dev.fritz2.core.step"]},{"name":"fun Tag<HTMLInputElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLInputElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLInputElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLInputElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLInputElement>.useMap(value: Flow<String>)","description":"dev.fritz2.core.useMap","location":"core/dev.fritz2.core/use-map.html","searchKeys":["useMap","fun Tag<HTMLInputElement>.useMap(value: Flow<String>)","dev.fritz2.core.useMap"]},{"name":"fun Tag<HTMLInputElement>.useMap(value: String)","description":"dev.fritz2.core.useMap","location":"core/dev.fritz2.core/use-map.html","searchKeys":["useMap","fun Tag<HTMLInputElement>.useMap(value: String)","dev.fritz2.core.useMap"]},{"name":"fun Tag<HTMLInputElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLInputElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLInputElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLInputElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLInputElement>.valueAsDate(value: Flow<String>)","description":"dev.fritz2.core.valueAsDate","location":"core/dev.fritz2.core/value-as-date.html","searchKeys":["valueAsDate","fun Tag<HTMLInputElement>.valueAsDate(value: Flow<String>)","dev.fritz2.core.valueAsDate"]},{"name":"fun Tag<HTMLInputElement>.valueAsDate(value: String)","description":"dev.fritz2.core.valueAsDate","location":"core/dev.fritz2.core/value-as-date.html","searchKeys":["valueAsDate","fun Tag<HTMLInputElement>.valueAsDate(value: String)","dev.fritz2.core.valueAsDate"]},{"name":"fun Tag<HTMLInputElement>.valueAsNumber(value: Double)","description":"dev.fritz2.core.valueAsNumber","location":"core/dev.fritz2.core/value-as-number.html","searchKeys":["valueAsNumber","fun Tag<HTMLInputElement>.valueAsNumber(value: Double)","dev.fritz2.core.valueAsNumber"]},{"name":"fun Tag<HTMLInputElement>.valueAsNumber(value: Flow<Double>)","description":"dev.fritz2.core.valueAsNumber","location":"core/dev.fritz2.core/value-as-number.html","searchKeys":["valueAsNumber","fun Tag<HTMLInputElement>.valueAsNumber(value: Flow<Double>)","dev.fritz2.core.valueAsNumber"]},{"name":"fun Tag<HTMLInputElement>.width(value: Flow<Int>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLInputElement>.width(value: Flow<Int>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLInputElement>.width(value: Int)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLInputElement>.width(value: Int)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLKeygenElement>.autofocus(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLKeygenElement>.autofocus(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLKeygenElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLKeygenElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLKeygenElement>.challenge(value: Flow<String>)","description":"dev.fritz2.core.challenge","location":"core/dev.fritz2.core/challenge.html","searchKeys":["challenge","fun Tag<HTMLKeygenElement>.challenge(value: Flow<String>)","dev.fritz2.core.challenge"]},{"name":"fun Tag<HTMLKeygenElement>.challenge(value: String)","description":"dev.fritz2.core.challenge","location":"core/dev.fritz2.core/challenge.html","searchKeys":["challenge","fun Tag<HTMLKeygenElement>.challenge(value: String)","dev.fritz2.core.challenge"]},{"name":"fun Tag<HTMLKeygenElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLKeygenElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLKeygenElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLKeygenElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLKeygenElement>.keytype(value: Flow<String>)","description":"dev.fritz2.core.keytype","location":"core/dev.fritz2.core/keytype.html","searchKeys":["keytype","fun Tag<HTMLKeygenElement>.keytype(value: Flow<String>)","dev.fritz2.core.keytype"]},{"name":"fun Tag<HTMLKeygenElement>.keytype(value: String)","description":"dev.fritz2.core.keytype","location":"core/dev.fritz2.core/keytype.html","searchKeys":["keytype","fun Tag<HTMLKeygenElement>.keytype(value: String)","dev.fritz2.core.keytype"]},{"name":"fun Tag<HTMLKeygenElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLKeygenElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLKeygenElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLKeygenElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLLIElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLLIElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLLIElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLLIElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLLIElement>.value(value: Flow<Int>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLLIElement>.value(value: Flow<Int>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLLIElement>.value(value: Int)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLLIElement>.value(value: Int)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLLabelElement>.for(value: Flow<String>)","description":"dev.fritz2.core.for","location":"core/dev.fritz2.core/for.html","searchKeys":["for","fun Tag<HTMLLabelElement>.for(value: Flow<String>)","dev.fritz2.core.for"]},{"name":"fun Tag<HTMLLabelElement>.for(value: String)","description":"dev.fritz2.core.for","location":"core/dev.fritz2.core/for.html","searchKeys":["for","fun Tag<HTMLLabelElement>.for(value: String)","dev.fritz2.core.for"]},{"name":"fun Tag<HTMLLegendElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLLegendElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLLegendElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLLegendElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLLinkElement>.as(value: Flow<RequestDestination>)","description":"dev.fritz2.core.as","location":"core/dev.fritz2.core/as.html","searchKeys":["as","fun Tag<HTMLLinkElement>.as(value: Flow<RequestDestination>)","dev.fritz2.core.as"]},{"name":"fun Tag<HTMLLinkElement>.as(value: RequestDestination)","description":"dev.fritz2.core.as","location":"core/dev.fritz2.core/as.html","searchKeys":["as","fun Tag<HTMLLinkElement>.as(value: RequestDestination)","dev.fritz2.core.as"]},{"name":"fun Tag<HTMLLinkElement>.charset(value: Flow<String>)","description":"dev.fritz2.core.charset","location":"core/dev.fritz2.core/charset.html","searchKeys":["charset","fun Tag<HTMLLinkElement>.charset(value: Flow<String>)","dev.fritz2.core.charset"]},{"name":"fun Tag<HTMLLinkElement>.charset(value: String)","description":"dev.fritz2.core.charset","location":"core/dev.fritz2.core/charset.html","searchKeys":["charset","fun Tag<HTMLLinkElement>.charset(value: String)","dev.fritz2.core.charset"]},{"name":"fun Tag<HTMLLinkElement>.crossOrigin(value: Flow<String?>)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLLinkElement>.crossOrigin(value: Flow<String?>)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLLinkElement>.crossOrigin(value: String?)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLLinkElement>.crossOrigin(value: String?)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLLinkElement>.href(value: Flow<String>)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLLinkElement>.href(value: Flow<String>)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLLinkElement>.href(value: String)","description":"dev.fritz2.core.href","location":"core/dev.fritz2.core/href.html","searchKeys":["href","fun Tag<HTMLLinkElement>.href(value: String)","dev.fritz2.core.href"]},{"name":"fun Tag<HTMLLinkElement>.hreflang(value: Flow<String>)","description":"dev.fritz2.core.hreflang","location":"core/dev.fritz2.core/hreflang.html","searchKeys":["hreflang","fun Tag<HTMLLinkElement>.hreflang(value: Flow<String>)","dev.fritz2.core.hreflang"]},{"name":"fun Tag<HTMLLinkElement>.hreflang(value: String)","description":"dev.fritz2.core.hreflang","location":"core/dev.fritz2.core/hreflang.html","searchKeys":["hreflang","fun Tag<HTMLLinkElement>.hreflang(value: String)","dev.fritz2.core.hreflang"]},{"name":"fun Tag<HTMLLinkElement>.media(value: Flow<String>)","description":"dev.fritz2.core.media","location":"core/dev.fritz2.core/media.html","searchKeys":["media","fun Tag<HTMLLinkElement>.media(value: Flow<String>)","dev.fritz2.core.media"]},{"name":"fun Tag<HTMLLinkElement>.media(value: String)","description":"dev.fritz2.core.media","location":"core/dev.fritz2.core/media.html","searchKeys":["media","fun Tag<HTMLLinkElement>.media(value: String)","dev.fritz2.core.media"]},{"name":"fun Tag<HTMLLinkElement>.nonce(value: Flow<String>)","description":"dev.fritz2.core.nonce","location":"core/dev.fritz2.core/nonce.html","searchKeys":["nonce","fun Tag<HTMLLinkElement>.nonce(value: Flow<String>)","dev.fritz2.core.nonce"]},{"name":"fun Tag<HTMLLinkElement>.nonce(value: String)","description":"dev.fritz2.core.nonce","location":"core/dev.fritz2.core/nonce.html","searchKeys":["nonce","fun Tag<HTMLLinkElement>.nonce(value: String)","dev.fritz2.core.nonce"]},{"name":"fun Tag<HTMLLinkElement>.referrerPolicy(value: Flow<String>)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLLinkElement>.referrerPolicy(value: Flow<String>)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLLinkElement>.referrerPolicy(value: String)","description":"dev.fritz2.core.referrerPolicy","location":"core/dev.fritz2.core/referrer-policy.html","searchKeys":["referrerPolicy","fun Tag<HTMLLinkElement>.referrerPolicy(value: String)","dev.fritz2.core.referrerPolicy"]},{"name":"fun Tag<HTMLLinkElement>.rel(value: Flow<String>)","description":"dev.fritz2.core.rel","location":"core/dev.fritz2.core/rel.html","searchKeys":["rel","fun Tag<HTMLLinkElement>.rel(value: Flow<String>)","dev.fritz2.core.rel"]},{"name":"fun Tag<HTMLLinkElement>.rel(value: String)","description":"dev.fritz2.core.rel","location":"core/dev.fritz2.core/rel.html","searchKeys":["rel","fun Tag<HTMLLinkElement>.rel(value: String)","dev.fritz2.core.rel"]},{"name":"fun Tag<HTMLLinkElement>.rev(value: Flow<String>)","description":"dev.fritz2.core.rev","location":"core/dev.fritz2.core/rev.html","searchKeys":["rev","fun Tag<HTMLLinkElement>.rev(value: Flow<String>)","dev.fritz2.core.rev"]},{"name":"fun Tag<HTMLLinkElement>.rev(value: String)","description":"dev.fritz2.core.rev","location":"core/dev.fritz2.core/rev.html","searchKeys":["rev","fun Tag<HTMLLinkElement>.rev(value: String)","dev.fritz2.core.rev"]},{"name":"fun Tag<HTMLLinkElement>.scope(value: Flow<String>)","description":"dev.fritz2.core.scope","location":"core/dev.fritz2.core/scope.html","searchKeys":["scope","fun Tag<HTMLLinkElement>.scope(value: Flow<String>)","dev.fritz2.core.scope"]},{"name":"fun Tag<HTMLLinkElement>.scope(value: String)","description":"dev.fritz2.core.scope","location":"core/dev.fritz2.core/scope.html","searchKeys":["scope","fun Tag<HTMLLinkElement>.scope(value: String)","dev.fritz2.core.scope"]},{"name":"fun Tag<HTMLLinkElement>.target(value: Flow<String>)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLLinkElement>.target(value: Flow<String>)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLLinkElement>.target(value: String)","description":"dev.fritz2.core.target","location":"core/dev.fritz2.core/target.html","searchKeys":["target","fun Tag<HTMLLinkElement>.target(value: String)","dev.fritz2.core.target"]},{"name":"fun Tag<HTMLLinkElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLLinkElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLLinkElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLLinkElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLLinkElement>.workerType(value: Flow<WorkerType>)","description":"dev.fritz2.core.workerType","location":"core/dev.fritz2.core/worker-type.html","searchKeys":["workerType","fun Tag<HTMLLinkElement>.workerType(value: Flow<WorkerType>)","dev.fritz2.core.workerType"]},{"name":"fun Tag<HTMLLinkElement>.workerType(value: WorkerType)","description":"dev.fritz2.core.workerType","location":"core/dev.fritz2.core/worker-type.html","searchKeys":["workerType","fun Tag<HTMLLinkElement>.workerType(value: WorkerType)","dev.fritz2.core.workerType"]},{"name":"fun Tag<HTMLMapElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLMapElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLMapElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLMapElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLMarqueeElement>.behavior(value: Flow<String>)","description":"dev.fritz2.core.behavior","location":"core/dev.fritz2.core/behavior.html","searchKeys":["behavior","fun Tag<HTMLMarqueeElement>.behavior(value: Flow<String>)","dev.fritz2.core.behavior"]},{"name":"fun Tag<HTMLMarqueeElement>.behavior(value: String)","description":"dev.fritz2.core.behavior","location":"core/dev.fritz2.core/behavior.html","searchKeys":["behavior","fun Tag<HTMLMarqueeElement>.behavior(value: String)","dev.fritz2.core.behavior"]},{"name":"fun Tag<HTMLMarqueeElement>.bgColor(value: Flow<String>)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLMarqueeElement>.bgColor(value: Flow<String>)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLMarqueeElement>.bgColor(value: String)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLMarqueeElement>.bgColor(value: String)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLMarqueeElement>.direction(value: Flow<String>)","description":"dev.fritz2.core.direction","location":"core/dev.fritz2.core/direction.html","searchKeys":["direction","fun Tag<HTMLMarqueeElement>.direction(value: Flow<String>)","dev.fritz2.core.direction"]},{"name":"fun Tag<HTMLMarqueeElement>.direction(value: String)","description":"dev.fritz2.core.direction","location":"core/dev.fritz2.core/direction.html","searchKeys":["direction","fun Tag<HTMLMarqueeElement>.direction(value: String)","dev.fritz2.core.direction"]},{"name":"fun Tag<HTMLMarqueeElement>.height(value: Flow<String>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLMarqueeElement>.height(value: Flow<String>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLMarqueeElement>.height(value: String)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLMarqueeElement>.height(value: String)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLMarqueeElement>.hspace(value: Flow<Int>)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLMarqueeElement>.hspace(value: Flow<Int>)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLMarqueeElement>.hspace(value: Int)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLMarqueeElement>.hspace(value: Int)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLMarqueeElement>.loop(value: Flow<Int>)","description":"dev.fritz2.core.loop","location":"core/dev.fritz2.core/loop.html","searchKeys":["loop","fun Tag<HTMLMarqueeElement>.loop(value: Flow<Int>)","dev.fritz2.core.loop"]},{"name":"fun Tag<HTMLMarqueeElement>.loop(value: Int)","description":"dev.fritz2.core.loop","location":"core/dev.fritz2.core/loop.html","searchKeys":["loop","fun Tag<HTMLMarqueeElement>.loop(value: Int)","dev.fritz2.core.loop"]},{"name":"fun Tag<HTMLMarqueeElement>.scrollAmount(value: Flow<Int>)","description":"dev.fritz2.core.scrollAmount","location":"core/dev.fritz2.core/scroll-amount.html","searchKeys":["scrollAmount","fun Tag<HTMLMarqueeElement>.scrollAmount(value: Flow<Int>)","dev.fritz2.core.scrollAmount"]},{"name":"fun Tag<HTMLMarqueeElement>.scrollAmount(value: Int)","description":"dev.fritz2.core.scrollAmount","location":"core/dev.fritz2.core/scroll-amount.html","searchKeys":["scrollAmount","fun Tag<HTMLMarqueeElement>.scrollAmount(value: Int)","dev.fritz2.core.scrollAmount"]},{"name":"fun Tag<HTMLMarqueeElement>.scrollDelay(value: Flow<Int>)","description":"dev.fritz2.core.scrollDelay","location":"core/dev.fritz2.core/scroll-delay.html","searchKeys":["scrollDelay","fun Tag<HTMLMarqueeElement>.scrollDelay(value: Flow<Int>)","dev.fritz2.core.scrollDelay"]},{"name":"fun Tag<HTMLMarqueeElement>.scrollDelay(value: Int)","description":"dev.fritz2.core.scrollDelay","location":"core/dev.fritz2.core/scroll-delay.html","searchKeys":["scrollDelay","fun Tag<HTMLMarqueeElement>.scrollDelay(value: Int)","dev.fritz2.core.scrollDelay"]},{"name":"fun Tag<HTMLMarqueeElement>.trueSpeed(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.trueSpeed","location":"core/dev.fritz2.core/true-speed.html","searchKeys":["trueSpeed","fun Tag<HTMLMarqueeElement>.trueSpeed(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.trueSpeed"]},{"name":"fun Tag<HTMLMarqueeElement>.trueSpeed(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.trueSpeed","location":"core/dev.fritz2.core/true-speed.html","searchKeys":["trueSpeed","fun Tag<HTMLMarqueeElement>.trueSpeed(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.trueSpeed"]},{"name":"fun Tag<HTMLMarqueeElement>.vspace(value: Flow<Int>)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLMarqueeElement>.vspace(value: Flow<Int>)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLMarqueeElement>.vspace(value: Int)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLMarqueeElement>.vspace(value: Int)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLMarqueeElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLMarqueeElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLMarqueeElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLMarqueeElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLMediaElement>.autoplay(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.autoplay","location":"core/dev.fritz2.core/autoplay.html","searchKeys":["autoplay","fun Tag<HTMLMediaElement>.autoplay(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.autoplay"]},{"name":"fun Tag<HTMLMediaElement>.autoplay(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.autoplay","location":"core/dev.fritz2.core/autoplay.html","searchKeys":["autoplay","fun Tag<HTMLMediaElement>.autoplay(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.autoplay"]},{"name":"fun Tag<HTMLMediaElement>.controls(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.controls","location":"core/dev.fritz2.core/controls.html","searchKeys":["controls","fun Tag<HTMLMediaElement>.controls(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.controls"]},{"name":"fun Tag<HTMLMediaElement>.controls(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.controls","location":"core/dev.fritz2.core/controls.html","searchKeys":["controls","fun Tag<HTMLMediaElement>.controls(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.controls"]},{"name":"fun Tag<HTMLMediaElement>.crossOrigin(value: Flow<String?>)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLMediaElement>.crossOrigin(value: Flow<String?>)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLMediaElement>.crossOrigin(value: String?)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLMediaElement>.crossOrigin(value: String?)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLMediaElement>.currentTime(value: Double)","description":"dev.fritz2.core.currentTime","location":"core/dev.fritz2.core/current-time.html","searchKeys":["currentTime","fun Tag<HTMLMediaElement>.currentTime(value: Double)","dev.fritz2.core.currentTime"]},{"name":"fun Tag<HTMLMediaElement>.currentTime(value: Flow<Double>)","description":"dev.fritz2.core.currentTime","location":"core/dev.fritz2.core/current-time.html","searchKeys":["currentTime","fun Tag<HTMLMediaElement>.currentTime(value: Flow<Double>)","dev.fritz2.core.currentTime"]},{"name":"fun Tag<HTMLMediaElement>.defaultMuted(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.defaultMuted","location":"core/dev.fritz2.core/default-muted.html","searchKeys":["defaultMuted","fun Tag<HTMLMediaElement>.defaultMuted(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.defaultMuted"]},{"name":"fun Tag<HTMLMediaElement>.defaultMuted(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.defaultMuted","location":"core/dev.fritz2.core/default-muted.html","searchKeys":["defaultMuted","fun Tag<HTMLMediaElement>.defaultMuted(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.defaultMuted"]},{"name":"fun Tag<HTMLMediaElement>.defaultPlaybackRate(value: Double)","description":"dev.fritz2.core.defaultPlaybackRate","location":"core/dev.fritz2.core/default-playback-rate.html","searchKeys":["defaultPlaybackRate","fun Tag<HTMLMediaElement>.defaultPlaybackRate(value: Double)","dev.fritz2.core.defaultPlaybackRate"]},{"name":"fun Tag<HTMLMediaElement>.defaultPlaybackRate(value: Flow<Double>)","description":"dev.fritz2.core.defaultPlaybackRate","location":"core/dev.fritz2.core/default-playback-rate.html","searchKeys":["defaultPlaybackRate","fun Tag<HTMLMediaElement>.defaultPlaybackRate(value: Flow<Double>)","dev.fritz2.core.defaultPlaybackRate"]},{"name":"fun Tag<HTMLMediaElement>.loop(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.loop","location":"core/dev.fritz2.core/loop.html","searchKeys":["loop","fun Tag<HTMLMediaElement>.loop(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.loop"]},{"name":"fun Tag<HTMLMediaElement>.loop(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.loop","location":"core/dev.fritz2.core/loop.html","searchKeys":["loop","fun Tag<HTMLMediaElement>.loop(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.loop"]},{"name":"fun Tag<HTMLMediaElement>.muted(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.muted","location":"core/dev.fritz2.core/muted.html","searchKeys":["muted","fun Tag<HTMLMediaElement>.muted(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.muted"]},{"name":"fun Tag<HTMLMediaElement>.muted(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.muted","location":"core/dev.fritz2.core/muted.html","searchKeys":["muted","fun Tag<HTMLMediaElement>.muted(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.muted"]},{"name":"fun Tag<HTMLMediaElement>.playbackRate(value: Double)","description":"dev.fritz2.core.playbackRate","location":"core/dev.fritz2.core/playback-rate.html","searchKeys":["playbackRate","fun Tag<HTMLMediaElement>.playbackRate(value: Double)","dev.fritz2.core.playbackRate"]},{"name":"fun Tag<HTMLMediaElement>.playbackRate(value: Flow<Double>)","description":"dev.fritz2.core.playbackRate","location":"core/dev.fritz2.core/playback-rate.html","searchKeys":["playbackRate","fun Tag<HTMLMediaElement>.playbackRate(value: Flow<Double>)","dev.fritz2.core.playbackRate"]},{"name":"fun Tag<HTMLMediaElement>.preload(value: Flow<String>)","description":"dev.fritz2.core.preload","location":"core/dev.fritz2.core/preload.html","searchKeys":["preload","fun Tag<HTMLMediaElement>.preload(value: Flow<String>)","dev.fritz2.core.preload"]},{"name":"fun Tag<HTMLMediaElement>.preload(value: String)","description":"dev.fritz2.core.preload","location":"core/dev.fritz2.core/preload.html","searchKeys":["preload","fun Tag<HTMLMediaElement>.preload(value: String)","dev.fritz2.core.preload"]},{"name":"fun Tag<HTMLMediaElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLMediaElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLMediaElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLMediaElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLMediaElement>.srcObject(value: Flow<MediaProvider?>)","description":"dev.fritz2.core.srcObject","location":"core/dev.fritz2.core/src-object.html","searchKeys":["srcObject","fun Tag<HTMLMediaElement>.srcObject(value: Flow<MediaProvider?>)","dev.fritz2.core.srcObject"]},{"name":"fun Tag<HTMLMediaElement>.srcObject(value: MediaProvider?)","description":"dev.fritz2.core.srcObject","location":"core/dev.fritz2.core/src-object.html","searchKeys":["srcObject","fun Tag<HTMLMediaElement>.srcObject(value: MediaProvider?)","dev.fritz2.core.srcObject"]},{"name":"fun Tag<HTMLMediaElement>.volume(value: Double)","description":"dev.fritz2.core.volume","location":"core/dev.fritz2.core/volume.html","searchKeys":["volume","fun Tag<HTMLMediaElement>.volume(value: Double)","dev.fritz2.core.volume"]},{"name":"fun Tag<HTMLMediaElement>.volume(value: Flow<Double>)","description":"dev.fritz2.core.volume","location":"core/dev.fritz2.core/volume.html","searchKeys":["volume","fun Tag<HTMLMediaElement>.volume(value: Flow<Double>)","dev.fritz2.core.volume"]},{"name":"fun Tag<HTMLMenuElement>.compact(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLMenuElement>.compact(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLMenuElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLMenuElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLMenuElement>.label(value: Flow<String>)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLMenuElement>.label(value: Flow<String>)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLMenuElement>.label(value: String)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLMenuElement>.label(value: String)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLMenuElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLMenuElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLMenuElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLMenuElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLMenuItemElement>.checked(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.checked","location":"core/dev.fritz2.core/checked.html","searchKeys":["checked","fun Tag<HTMLMenuItemElement>.checked(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.checked"]},{"name":"fun Tag<HTMLMenuItemElement>.checked(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.checked","location":"core/dev.fritz2.core/checked.html","searchKeys":["checked","fun Tag<HTMLMenuItemElement>.checked(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.checked"]},{"name":"fun Tag<HTMLMenuItemElement>.default(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.default","location":"core/dev.fritz2.core/default.html","searchKeys":["default","fun Tag<HTMLMenuItemElement>.default(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.default"]},{"name":"fun Tag<HTMLMenuItemElement>.default(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.default","location":"core/dev.fritz2.core/default.html","searchKeys":["default","fun Tag<HTMLMenuItemElement>.default(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.default"]},{"name":"fun Tag<HTMLMenuItemElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLMenuItemElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLMenuItemElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLMenuItemElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLMenuItemElement>.icon(value: Flow<String>)","description":"dev.fritz2.core.icon","location":"core/dev.fritz2.core/icon.html","searchKeys":["icon","fun Tag<HTMLMenuItemElement>.icon(value: Flow<String>)","dev.fritz2.core.icon"]},{"name":"fun Tag<HTMLMenuItemElement>.icon(value: String)","description":"dev.fritz2.core.icon","location":"core/dev.fritz2.core/icon.html","searchKeys":["icon","fun Tag<HTMLMenuItemElement>.icon(value: String)","dev.fritz2.core.icon"]},{"name":"fun Tag<HTMLMenuItemElement>.label(value: Flow<String>)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLMenuItemElement>.label(value: Flow<String>)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLMenuItemElement>.label(value: String)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLMenuItemElement>.label(value: String)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLMenuItemElement>.radiogroup(value: Flow<String>)","description":"dev.fritz2.core.radiogroup","location":"core/dev.fritz2.core/radiogroup.html","searchKeys":["radiogroup","fun Tag<HTMLMenuItemElement>.radiogroup(value: Flow<String>)","dev.fritz2.core.radiogroup"]},{"name":"fun Tag<HTMLMenuItemElement>.radiogroup(value: String)","description":"dev.fritz2.core.radiogroup","location":"core/dev.fritz2.core/radiogroup.html","searchKeys":["radiogroup","fun Tag<HTMLMenuItemElement>.radiogroup(value: String)","dev.fritz2.core.radiogroup"]},{"name":"fun Tag<HTMLMenuItemElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLMenuItemElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLMenuItemElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLMenuItemElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLMetaElement>.content(value: Flow<String>)","description":"dev.fritz2.core.content","location":"core/dev.fritz2.core/content.html","searchKeys":["content","fun Tag<HTMLMetaElement>.content(value: Flow<String>)","dev.fritz2.core.content"]},{"name":"fun Tag<HTMLMetaElement>.content(value: String)","description":"dev.fritz2.core.content","location":"core/dev.fritz2.core/content.html","searchKeys":["content","fun Tag<HTMLMetaElement>.content(value: String)","dev.fritz2.core.content"]},{"name":"fun Tag<HTMLMetaElement>.httpEquiv(value: Flow<String>)","description":"dev.fritz2.core.httpEquiv","location":"core/dev.fritz2.core/http-equiv.html","searchKeys":["httpEquiv","fun Tag<HTMLMetaElement>.httpEquiv(value: Flow<String>)","dev.fritz2.core.httpEquiv"]},{"name":"fun Tag<HTMLMetaElement>.httpEquiv(value: String)","description":"dev.fritz2.core.httpEquiv","location":"core/dev.fritz2.core/http-equiv.html","searchKeys":["httpEquiv","fun Tag<HTMLMetaElement>.httpEquiv(value: String)","dev.fritz2.core.httpEquiv"]},{"name":"fun Tag<HTMLMetaElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLMetaElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLMetaElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLMetaElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLMetaElement>.scheme(value: Flow<String>)","description":"dev.fritz2.core.scheme","location":"core/dev.fritz2.core/scheme.html","searchKeys":["scheme","fun Tag<HTMLMetaElement>.scheme(value: Flow<String>)","dev.fritz2.core.scheme"]},{"name":"fun Tag<HTMLMetaElement>.scheme(value: String)","description":"dev.fritz2.core.scheme","location":"core/dev.fritz2.core/scheme.html","searchKeys":["scheme","fun Tag<HTMLMetaElement>.scheme(value: String)","dev.fritz2.core.scheme"]},{"name":"fun Tag<HTMLMeterElement>.high(value: Double)","description":"dev.fritz2.core.high","location":"core/dev.fritz2.core/high.html","searchKeys":["high","fun Tag<HTMLMeterElement>.high(value: Double)","dev.fritz2.core.high"]},{"name":"fun Tag<HTMLMeterElement>.high(value: Flow<Double>)","description":"dev.fritz2.core.high","location":"core/dev.fritz2.core/high.html","searchKeys":["high","fun Tag<HTMLMeterElement>.high(value: Flow<Double>)","dev.fritz2.core.high"]},{"name":"fun Tag<HTMLMeterElement>.low(value: Double)","description":"dev.fritz2.core.low","location":"core/dev.fritz2.core/low.html","searchKeys":["low","fun Tag<HTMLMeterElement>.low(value: Double)","dev.fritz2.core.low"]},{"name":"fun Tag<HTMLMeterElement>.low(value: Flow<Double>)","description":"dev.fritz2.core.low","location":"core/dev.fritz2.core/low.html","searchKeys":["low","fun Tag<HTMLMeterElement>.low(value: Flow<Double>)","dev.fritz2.core.low"]},{"name":"fun Tag<HTMLMeterElement>.max(value: Double)","description":"dev.fritz2.core.max","location":"core/dev.fritz2.core/max.html","searchKeys":["max","fun Tag<HTMLMeterElement>.max(value: Double)","dev.fritz2.core.max"]},{"name":"fun Tag<HTMLMeterElement>.max(value: Flow<Double>)","description":"dev.fritz2.core.max","location":"core/dev.fritz2.core/max.html","searchKeys":["max","fun Tag<HTMLMeterElement>.max(value: Flow<Double>)","dev.fritz2.core.max"]},{"name":"fun Tag<HTMLMeterElement>.min(value: Double)","description":"dev.fritz2.core.min","location":"core/dev.fritz2.core/min.html","searchKeys":["min","fun Tag<HTMLMeterElement>.min(value: Double)","dev.fritz2.core.min"]},{"name":"fun Tag<HTMLMeterElement>.min(value: Flow<Double>)","description":"dev.fritz2.core.min","location":"core/dev.fritz2.core/min.html","searchKeys":["min","fun Tag<HTMLMeterElement>.min(value: Flow<Double>)","dev.fritz2.core.min"]},{"name":"fun Tag<HTMLMeterElement>.optimum(value: Double)","description":"dev.fritz2.core.optimum","location":"core/dev.fritz2.core/optimum.html","searchKeys":["optimum","fun Tag<HTMLMeterElement>.optimum(value: Double)","dev.fritz2.core.optimum"]},{"name":"fun Tag<HTMLMeterElement>.optimum(value: Flow<Double>)","description":"dev.fritz2.core.optimum","location":"core/dev.fritz2.core/optimum.html","searchKeys":["optimum","fun Tag<HTMLMeterElement>.optimum(value: Flow<Double>)","dev.fritz2.core.optimum"]},{"name":"fun Tag<HTMLMeterElement>.value(value: Double)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLMeterElement>.value(value: Double)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLMeterElement>.value(value: Flow<Double>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLMeterElement>.value(value: Flow<Double>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLModElement>.cite(value: Flow<String>)","description":"dev.fritz2.core.cite","location":"core/dev.fritz2.core/cite.html","searchKeys":["cite","fun Tag<HTMLModElement>.cite(value: Flow<String>)","dev.fritz2.core.cite"]},{"name":"fun Tag<HTMLModElement>.cite(value: String)","description":"dev.fritz2.core.cite","location":"core/dev.fritz2.core/cite.html","searchKeys":["cite","fun Tag<HTMLModElement>.cite(value: String)","dev.fritz2.core.cite"]},{"name":"fun Tag<HTMLModElement>.dateTime(value: Flow<String>)","description":"dev.fritz2.core.dateTime","location":"core/dev.fritz2.core/date-time.html","searchKeys":["dateTime","fun Tag<HTMLModElement>.dateTime(value: Flow<String>)","dev.fritz2.core.dateTime"]},{"name":"fun Tag<HTMLModElement>.dateTime(value: String)","description":"dev.fritz2.core.dateTime","location":"core/dev.fritz2.core/date-time.html","searchKeys":["dateTime","fun Tag<HTMLModElement>.dateTime(value: String)","dev.fritz2.core.dateTime"]},{"name":"fun Tag<HTMLOListElement>.compact(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLOListElement>.compact(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLOListElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLOListElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLOListElement>.reversed(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.reversed","location":"core/dev.fritz2.core/reversed.html","searchKeys":["reversed","fun Tag<HTMLOListElement>.reversed(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.reversed"]},{"name":"fun Tag<HTMLOListElement>.reversed(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.reversed","location":"core/dev.fritz2.core/reversed.html","searchKeys":["reversed","fun Tag<HTMLOListElement>.reversed(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.reversed"]},{"name":"fun Tag<HTMLOListElement>.start(value: Flow<Int>)","description":"dev.fritz2.core.start","location":"core/dev.fritz2.core/start.html","searchKeys":["start","fun Tag<HTMLOListElement>.start(value: Flow<Int>)","dev.fritz2.core.start"]},{"name":"fun Tag<HTMLOListElement>.start(value: Int)","description":"dev.fritz2.core.start","location":"core/dev.fritz2.core/start.html","searchKeys":["start","fun Tag<HTMLOListElement>.start(value: Int)","dev.fritz2.core.start"]},{"name":"fun Tag<HTMLOListElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLOListElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLOListElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLOListElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLObjectElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLObjectElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLObjectElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLObjectElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLObjectElement>.archive(value: Flow<String>)","description":"dev.fritz2.core.archive","location":"core/dev.fritz2.core/archive.html","searchKeys":["archive","fun Tag<HTMLObjectElement>.archive(value: Flow<String>)","dev.fritz2.core.archive"]},{"name":"fun Tag<HTMLObjectElement>.archive(value: String)","description":"dev.fritz2.core.archive","location":"core/dev.fritz2.core/archive.html","searchKeys":["archive","fun Tag<HTMLObjectElement>.archive(value: String)","dev.fritz2.core.archive"]},{"name":"fun Tag<HTMLObjectElement>.border(value: Flow<String>)","description":"dev.fritz2.core.border","location":"core/dev.fritz2.core/border.html","searchKeys":["border","fun Tag<HTMLObjectElement>.border(value: Flow<String>)","dev.fritz2.core.border"]},{"name":"fun Tag<HTMLObjectElement>.border(value: String)","description":"dev.fritz2.core.border","location":"core/dev.fritz2.core/border.html","searchKeys":["border","fun Tag<HTMLObjectElement>.border(value: String)","dev.fritz2.core.border"]},{"name":"fun Tag<HTMLObjectElement>.code(value: Flow<String>)","description":"dev.fritz2.core.code","location":"core/dev.fritz2.core/code.html","searchKeys":["code","fun Tag<HTMLObjectElement>.code(value: Flow<String>)","dev.fritz2.core.code"]},{"name":"fun Tag<HTMLObjectElement>.code(value: String)","description":"dev.fritz2.core.code","location":"core/dev.fritz2.core/code.html","searchKeys":["code","fun Tag<HTMLObjectElement>.code(value: String)","dev.fritz2.core.code"]},{"name":"fun Tag<HTMLObjectElement>.codeBase(value: Flow<String>)","description":"dev.fritz2.core.codeBase","location":"core/dev.fritz2.core/code-base.html","searchKeys":["codeBase","fun Tag<HTMLObjectElement>.codeBase(value: Flow<String>)","dev.fritz2.core.codeBase"]},{"name":"fun Tag<HTMLObjectElement>.codeBase(value: String)","description":"dev.fritz2.core.codeBase","location":"core/dev.fritz2.core/code-base.html","searchKeys":["codeBase","fun Tag<HTMLObjectElement>.codeBase(value: String)","dev.fritz2.core.codeBase"]},{"name":"fun Tag<HTMLObjectElement>.codeType(value: Flow<String>)","description":"dev.fritz2.core.codeType","location":"core/dev.fritz2.core/code-type.html","searchKeys":["codeType","fun Tag<HTMLObjectElement>.codeType(value: Flow<String>)","dev.fritz2.core.codeType"]},{"name":"fun Tag<HTMLObjectElement>.codeType(value: String)","description":"dev.fritz2.core.codeType","location":"core/dev.fritz2.core/code-type.html","searchKeys":["codeType","fun Tag<HTMLObjectElement>.codeType(value: String)","dev.fritz2.core.codeType"]},{"name":"fun Tag<HTMLObjectElement>.data(value: Flow<String>)","description":"dev.fritz2.core.data","location":"core/dev.fritz2.core/data.html","searchKeys":["data","fun Tag<HTMLObjectElement>.data(value: Flow<String>)","dev.fritz2.core.data"]},{"name":"fun Tag<HTMLObjectElement>.data(value: String)","description":"dev.fritz2.core.data","location":"core/dev.fritz2.core/data.html","searchKeys":["data","fun Tag<HTMLObjectElement>.data(value: String)","dev.fritz2.core.data"]},{"name":"fun Tag<HTMLObjectElement>.declare(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.declare","location":"core/dev.fritz2.core/declare.html","searchKeys":["declare","fun Tag<HTMLObjectElement>.declare(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.declare"]},{"name":"fun Tag<HTMLObjectElement>.declare(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.declare","location":"core/dev.fritz2.core/declare.html","searchKeys":["declare","fun Tag<HTMLObjectElement>.declare(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.declare"]},{"name":"fun Tag<HTMLObjectElement>.height(value: Flow<String>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLObjectElement>.height(value: Flow<String>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLObjectElement>.height(value: String)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLObjectElement>.height(value: String)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLObjectElement>.hspace(value: Flow<Int>)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLObjectElement>.hspace(value: Flow<Int>)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLObjectElement>.hspace(value: Int)","description":"dev.fritz2.core.hspace","location":"core/dev.fritz2.core/hspace.html","searchKeys":["hspace","fun Tag<HTMLObjectElement>.hspace(value: Int)","dev.fritz2.core.hspace"]},{"name":"fun Tag<HTMLObjectElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLObjectElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLObjectElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLObjectElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLObjectElement>.standby(value: Flow<String>)","description":"dev.fritz2.core.standby","location":"core/dev.fritz2.core/standby.html","searchKeys":["standby","fun Tag<HTMLObjectElement>.standby(value: Flow<String>)","dev.fritz2.core.standby"]},{"name":"fun Tag<HTMLObjectElement>.standby(value: String)","description":"dev.fritz2.core.standby","location":"core/dev.fritz2.core/standby.html","searchKeys":["standby","fun Tag<HTMLObjectElement>.standby(value: String)","dev.fritz2.core.standby"]},{"name":"fun Tag<HTMLObjectElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLObjectElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLObjectElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLObjectElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLObjectElement>.typeMustMatch(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.typeMustMatch","location":"core/dev.fritz2.core/type-must-match.html","searchKeys":["typeMustMatch","fun Tag<HTMLObjectElement>.typeMustMatch(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.typeMustMatch"]},{"name":"fun Tag<HTMLObjectElement>.typeMustMatch(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.typeMustMatch","location":"core/dev.fritz2.core/type-must-match.html","searchKeys":["typeMustMatch","fun Tag<HTMLObjectElement>.typeMustMatch(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.typeMustMatch"]},{"name":"fun Tag<HTMLObjectElement>.useMap(value: Flow<String>)","description":"dev.fritz2.core.useMap","location":"core/dev.fritz2.core/use-map.html","searchKeys":["useMap","fun Tag<HTMLObjectElement>.useMap(value: Flow<String>)","dev.fritz2.core.useMap"]},{"name":"fun Tag<HTMLObjectElement>.useMap(value: String)","description":"dev.fritz2.core.useMap","location":"core/dev.fritz2.core/use-map.html","searchKeys":["useMap","fun Tag<HTMLObjectElement>.useMap(value: String)","dev.fritz2.core.useMap"]},{"name":"fun Tag<HTMLObjectElement>.vspace(value: Flow<Int>)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLObjectElement>.vspace(value: Flow<Int>)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLObjectElement>.vspace(value: Int)","description":"dev.fritz2.core.vspace","location":"core/dev.fritz2.core/vspace.html","searchKeys":["vspace","fun Tag<HTMLObjectElement>.vspace(value: Int)","dev.fritz2.core.vspace"]},{"name":"fun Tag<HTMLObjectElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLObjectElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLObjectElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLObjectElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLOptGroupElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLOptGroupElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLOptGroupElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLOptGroupElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLOptGroupElement>.label(value: Flow<String>)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLOptGroupElement>.label(value: Flow<String>)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLOptGroupElement>.label(value: String)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLOptGroupElement>.label(value: String)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLOptionElement>.defaultSelected(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.defaultSelected","location":"core/dev.fritz2.core/default-selected.html","searchKeys":["defaultSelected","fun Tag<HTMLOptionElement>.defaultSelected(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.defaultSelected"]},{"name":"fun Tag<HTMLOptionElement>.defaultSelected(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.defaultSelected","location":"core/dev.fritz2.core/default-selected.html","searchKeys":["defaultSelected","fun Tag<HTMLOptionElement>.defaultSelected(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.defaultSelected"]},{"name":"fun Tag<HTMLOptionElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLOptionElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLOptionElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLOptionElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLOptionElement>.label(value: Flow<String>)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLOptionElement>.label(value: Flow<String>)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLOptionElement>.label(value: String)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLOptionElement>.label(value: String)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLOptionElement>.selected(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.selected","location":"core/dev.fritz2.core/selected.html","searchKeys":["selected","fun Tag<HTMLOptionElement>.selected(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.selected"]},{"name":"fun Tag<HTMLOptionElement>.selected(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.selected","location":"core/dev.fritz2.core/selected.html","searchKeys":["selected","fun Tag<HTMLOptionElement>.selected(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.selected"]},{"name":"fun Tag<HTMLOptionElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLOptionElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLOptionElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLOptionElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLOutputElement>.defaultValue(value: Flow<String>)","description":"dev.fritz2.core.defaultValue","location":"core/dev.fritz2.core/default-value.html","searchKeys":["defaultValue","fun Tag<HTMLOutputElement>.defaultValue(value: Flow<String>)","dev.fritz2.core.defaultValue"]},{"name":"fun Tag<HTMLOutputElement>.defaultValue(value: String)","description":"dev.fritz2.core.defaultValue","location":"core/dev.fritz2.core/default-value.html","searchKeys":["defaultValue","fun Tag<HTMLOutputElement>.defaultValue(value: String)","dev.fritz2.core.defaultValue"]},{"name":"fun Tag<HTMLOutputElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLOutputElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLOutputElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLOutputElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLOutputElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLOutputElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLOutputElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLOutputElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLParagraphElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLParagraphElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLParagraphElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLParagraphElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLParamElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLParamElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLParamElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLParamElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLParamElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLParamElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLParamElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLParamElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLParamElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLParamElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLParamElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLParamElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLParamElement>.valueType(value: Flow<String>)","description":"dev.fritz2.core.valueType","location":"core/dev.fritz2.core/value-type.html","searchKeys":["valueType","fun Tag<HTMLParamElement>.valueType(value: Flow<String>)","dev.fritz2.core.valueType"]},{"name":"fun Tag<HTMLParamElement>.valueType(value: String)","description":"dev.fritz2.core.valueType","location":"core/dev.fritz2.core/value-type.html","searchKeys":["valueType","fun Tag<HTMLParamElement>.valueType(value: String)","dev.fritz2.core.valueType"]},{"name":"fun Tag<HTMLPreElement>.width(value: Flow<Int>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLPreElement>.width(value: Flow<Int>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLPreElement>.width(value: Int)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLPreElement>.width(value: Int)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLProgressElement>.max(value: Double)","description":"dev.fritz2.core.max","location":"core/dev.fritz2.core/max.html","searchKeys":["max","fun Tag<HTMLProgressElement>.max(value: Double)","dev.fritz2.core.max"]},{"name":"fun Tag<HTMLProgressElement>.max(value: Flow<Double>)","description":"dev.fritz2.core.max","location":"core/dev.fritz2.core/max.html","searchKeys":["max","fun Tag<HTMLProgressElement>.max(value: Flow<Double>)","dev.fritz2.core.max"]},{"name":"fun Tag<HTMLProgressElement>.value(value: Double)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLProgressElement>.value(value: Double)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLProgressElement>.value(value: Flow<Double>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLProgressElement>.value(value: Flow<Double>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLQuoteElement>.cite(value: Flow<String>)","description":"dev.fritz2.core.cite","location":"core/dev.fritz2.core/cite.html","searchKeys":["cite","fun Tag<HTMLQuoteElement>.cite(value: Flow<String>)","dev.fritz2.core.cite"]},{"name":"fun Tag<HTMLQuoteElement>.cite(value: String)","description":"dev.fritz2.core.cite","location":"core/dev.fritz2.core/cite.html","searchKeys":["cite","fun Tag<HTMLQuoteElement>.cite(value: String)","dev.fritz2.core.cite"]},{"name":"fun Tag<HTMLScriptElement>.async(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.async","location":"core/dev.fritz2.core/async.html","searchKeys":["async","fun Tag<HTMLScriptElement>.async(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.async"]},{"name":"fun Tag<HTMLScriptElement>.async(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.async","location":"core/dev.fritz2.core/async.html","searchKeys":["async","fun Tag<HTMLScriptElement>.async(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.async"]},{"name":"fun Tag<HTMLScriptElement>.charset(value: Flow<String>)","description":"dev.fritz2.core.charset","location":"core/dev.fritz2.core/charset.html","searchKeys":["charset","fun Tag<HTMLScriptElement>.charset(value: Flow<String>)","dev.fritz2.core.charset"]},{"name":"fun Tag<HTMLScriptElement>.charset(value: String)","description":"dev.fritz2.core.charset","location":"core/dev.fritz2.core/charset.html","searchKeys":["charset","fun Tag<HTMLScriptElement>.charset(value: String)","dev.fritz2.core.charset"]},{"name":"fun Tag<HTMLScriptElement>.crossOrigin(value: Flow<String?>)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLScriptElement>.crossOrigin(value: Flow<String?>)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLScriptElement>.crossOrigin(value: String?)","description":"dev.fritz2.core.crossOrigin","location":"core/dev.fritz2.core/cross-origin.html","searchKeys":["crossOrigin","fun Tag<HTMLScriptElement>.crossOrigin(value: String?)","dev.fritz2.core.crossOrigin"]},{"name":"fun Tag<HTMLScriptElement>.defer(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.defer","location":"core/dev.fritz2.core/defer.html","searchKeys":["defer","fun Tag<HTMLScriptElement>.defer(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.defer"]},{"name":"fun Tag<HTMLScriptElement>.defer(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.defer","location":"core/dev.fritz2.core/defer.html","searchKeys":["defer","fun Tag<HTMLScriptElement>.defer(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.defer"]},{"name":"fun Tag<HTMLScriptElement>.event(value: Flow<String>)","description":"dev.fritz2.core.event","location":"core/dev.fritz2.core/event.html","searchKeys":["event","fun Tag<HTMLScriptElement>.event(value: Flow<String>)","dev.fritz2.core.event"]},{"name":"fun Tag<HTMLScriptElement>.event(value: String)","description":"dev.fritz2.core.event","location":"core/dev.fritz2.core/event.html","searchKeys":["event","fun Tag<HTMLScriptElement>.event(value: String)","dev.fritz2.core.event"]},{"name":"fun Tag<HTMLScriptElement>.for(value: Flow<String>)","description":"dev.fritz2.core.for","location":"core/dev.fritz2.core/for.html","searchKeys":["for","fun Tag<HTMLScriptElement>.for(value: Flow<String>)","dev.fritz2.core.for"]},{"name":"fun Tag<HTMLScriptElement>.for(value: String)","description":"dev.fritz2.core.for","location":"core/dev.fritz2.core/for.html","searchKeys":["for","fun Tag<HTMLScriptElement>.for(value: String)","dev.fritz2.core.for"]},{"name":"fun Tag<HTMLScriptElement>.nonce(value: Flow<String>)","description":"dev.fritz2.core.nonce","location":"core/dev.fritz2.core/nonce.html","searchKeys":["nonce","fun Tag<HTMLScriptElement>.nonce(value: Flow<String>)","dev.fritz2.core.nonce"]},{"name":"fun Tag<HTMLScriptElement>.nonce(value: String)","description":"dev.fritz2.core.nonce","location":"core/dev.fritz2.core/nonce.html","searchKeys":["nonce","fun Tag<HTMLScriptElement>.nonce(value: String)","dev.fritz2.core.nonce"]},{"name":"fun Tag<HTMLScriptElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLScriptElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLScriptElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLScriptElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLScriptElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLScriptElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLScriptElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLScriptElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLSelectElement>.autocomplete(value: Flow<String>)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLSelectElement>.autocomplete(value: Flow<String>)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLSelectElement>.autocomplete(value: String)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLSelectElement>.autocomplete(value: String)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLSelectElement>.autofocus(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLSelectElement>.autofocus(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLSelectElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLSelectElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLSelectElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLSelectElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLSelectElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLSelectElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLSelectElement>.length(value: Flow<Int>)","description":"dev.fritz2.core.length","location":"core/dev.fritz2.core/length.html","searchKeys":["length","fun Tag<HTMLSelectElement>.length(value: Flow<Int>)","dev.fritz2.core.length"]},{"name":"fun Tag<HTMLSelectElement>.length(value: Int)","description":"dev.fritz2.core.length","location":"core/dev.fritz2.core/length.html","searchKeys":["length","fun Tag<HTMLSelectElement>.length(value: Int)","dev.fritz2.core.length"]},{"name":"fun Tag<HTMLSelectElement>.multiple(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.multiple","location":"core/dev.fritz2.core/multiple.html","searchKeys":["multiple","fun Tag<HTMLSelectElement>.multiple(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.multiple"]},{"name":"fun Tag<HTMLSelectElement>.multiple(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.multiple","location":"core/dev.fritz2.core/multiple.html","searchKeys":["multiple","fun Tag<HTMLSelectElement>.multiple(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.multiple"]},{"name":"fun Tag<HTMLSelectElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLSelectElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLSelectElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLSelectElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLSelectElement>.required(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.required","location":"core/dev.fritz2.core/required.html","searchKeys":["required","fun Tag<HTMLSelectElement>.required(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.required"]},{"name":"fun Tag<HTMLSelectElement>.required(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.required","location":"core/dev.fritz2.core/required.html","searchKeys":["required","fun Tag<HTMLSelectElement>.required(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.required"]},{"name":"fun Tag<HTMLSelectElement>.selectedIndex(value: Flow<Int>)","description":"dev.fritz2.core.selectedIndex","location":"core/dev.fritz2.core/selected-index.html","searchKeys":["selectedIndex","fun Tag<HTMLSelectElement>.selectedIndex(value: Flow<Int>)","dev.fritz2.core.selectedIndex"]},{"name":"fun Tag<HTMLSelectElement>.selectedIndex(value: Int)","description":"dev.fritz2.core.selectedIndex","location":"core/dev.fritz2.core/selected-index.html","searchKeys":["selectedIndex","fun Tag<HTMLSelectElement>.selectedIndex(value: Int)","dev.fritz2.core.selectedIndex"]},{"name":"fun Tag<HTMLSelectElement>.size(value: Flow<Int>)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLSelectElement>.size(value: Flow<Int>)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLSelectElement>.size(value: Int)","description":"dev.fritz2.core.size","location":"core/dev.fritz2.core/size.html","searchKeys":["size","fun Tag<HTMLSelectElement>.size(value: Int)","dev.fritz2.core.size"]},{"name":"fun Tag<HTMLSelectElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLSelectElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLSelectElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLSelectElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLSlotElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLSlotElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLSlotElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLSlotElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLSourceElement>.media(value: Flow<String>)","description":"dev.fritz2.core.media","location":"core/dev.fritz2.core/media.html","searchKeys":["media","fun Tag<HTMLSourceElement>.media(value: Flow<String>)","dev.fritz2.core.media"]},{"name":"fun Tag<HTMLSourceElement>.media(value: String)","description":"dev.fritz2.core.media","location":"core/dev.fritz2.core/media.html","searchKeys":["media","fun Tag<HTMLSourceElement>.media(value: String)","dev.fritz2.core.media"]},{"name":"fun Tag<HTMLSourceElement>.sizes(value: Flow<String>)","description":"dev.fritz2.core.sizes","location":"core/dev.fritz2.core/sizes.html","searchKeys":["sizes","fun Tag<HTMLSourceElement>.sizes(value: Flow<String>)","dev.fritz2.core.sizes"]},{"name":"fun Tag<HTMLSourceElement>.sizes(value: String)","description":"dev.fritz2.core.sizes","location":"core/dev.fritz2.core/sizes.html","searchKeys":["sizes","fun Tag<HTMLSourceElement>.sizes(value: String)","dev.fritz2.core.sizes"]},{"name":"fun Tag<HTMLSourceElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLSourceElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLSourceElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLSourceElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLSourceElement>.srcset(value: Flow<String>)","description":"dev.fritz2.core.srcset","location":"core/dev.fritz2.core/srcset.html","searchKeys":["srcset","fun Tag<HTMLSourceElement>.srcset(value: Flow<String>)","dev.fritz2.core.srcset"]},{"name":"fun Tag<HTMLSourceElement>.srcset(value: String)","description":"dev.fritz2.core.srcset","location":"core/dev.fritz2.core/srcset.html","searchKeys":["srcset","fun Tag<HTMLSourceElement>.srcset(value: String)","dev.fritz2.core.srcset"]},{"name":"fun Tag<HTMLSourceElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLSourceElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLSourceElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLSourceElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLStyleElement>.media(value: Flow<String>)","description":"dev.fritz2.core.media","location":"core/dev.fritz2.core/media.html","searchKeys":["media","fun Tag<HTMLStyleElement>.media(value: Flow<String>)","dev.fritz2.core.media"]},{"name":"fun Tag<HTMLStyleElement>.media(value: String)","description":"dev.fritz2.core.media","location":"core/dev.fritz2.core/media.html","searchKeys":["media","fun Tag<HTMLStyleElement>.media(value: String)","dev.fritz2.core.media"]},{"name":"fun Tag<HTMLStyleElement>.nonce(value: Flow<String>)","description":"dev.fritz2.core.nonce","location":"core/dev.fritz2.core/nonce.html","searchKeys":["nonce","fun Tag<HTMLStyleElement>.nonce(value: Flow<String>)","dev.fritz2.core.nonce"]},{"name":"fun Tag<HTMLStyleElement>.nonce(value: String)","description":"dev.fritz2.core.nonce","location":"core/dev.fritz2.core/nonce.html","searchKeys":["nonce","fun Tag<HTMLStyleElement>.nonce(value: String)","dev.fritz2.core.nonce"]},{"name":"fun Tag<HTMLStyleElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLStyleElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLStyleElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLStyleElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLTableCaptionElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableCaptionElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableCaptionElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableCaptionElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableCellElement>.abbr(value: Flow<String>)","description":"dev.fritz2.core.abbr","location":"core/dev.fritz2.core/abbr.html","searchKeys":["abbr","fun Tag<HTMLTableCellElement>.abbr(value: Flow<String>)","dev.fritz2.core.abbr"]},{"name":"fun Tag<HTMLTableCellElement>.abbr(value: String)","description":"dev.fritz2.core.abbr","location":"core/dev.fritz2.core/abbr.html","searchKeys":["abbr","fun Tag<HTMLTableCellElement>.abbr(value: String)","dev.fritz2.core.abbr"]},{"name":"fun Tag<HTMLTableCellElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableCellElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableCellElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableCellElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableCellElement>.axis(value: Flow<String>)","description":"dev.fritz2.core.axis","location":"core/dev.fritz2.core/axis.html","searchKeys":["axis","fun Tag<HTMLTableCellElement>.axis(value: Flow<String>)","dev.fritz2.core.axis"]},{"name":"fun Tag<HTMLTableCellElement>.axis(value: String)","description":"dev.fritz2.core.axis","location":"core/dev.fritz2.core/axis.html","searchKeys":["axis","fun Tag<HTMLTableCellElement>.axis(value: String)","dev.fritz2.core.axis"]},{"name":"fun Tag<HTMLTableCellElement>.bgColor(value: Flow<String>)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLTableCellElement>.bgColor(value: Flow<String>)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLTableCellElement>.bgColor(value: String)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLTableCellElement>.bgColor(value: String)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLTableCellElement>.ch(value: Flow<String>)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableCellElement>.ch(value: Flow<String>)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableCellElement>.ch(value: String)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableCellElement>.ch(value: String)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableCellElement>.chOff(value: Flow<String>)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableCellElement>.chOff(value: Flow<String>)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableCellElement>.chOff(value: String)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableCellElement>.chOff(value: String)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableCellElement>.colSpan(value: Flow<Int>)","description":"dev.fritz2.core.colSpan","location":"core/dev.fritz2.core/col-span.html","searchKeys":["colSpan","fun Tag<HTMLTableCellElement>.colSpan(value: Flow<Int>)","dev.fritz2.core.colSpan"]},{"name":"fun Tag<HTMLTableCellElement>.colSpan(value: Int)","description":"dev.fritz2.core.colSpan","location":"core/dev.fritz2.core/col-span.html","searchKeys":["colSpan","fun Tag<HTMLTableCellElement>.colSpan(value: Int)","dev.fritz2.core.colSpan"]},{"name":"fun Tag<HTMLTableCellElement>.headers(value: Flow<String>)","description":"dev.fritz2.core.headers","location":"core/dev.fritz2.core/headers.html","searchKeys":["headers","fun Tag<HTMLTableCellElement>.headers(value: Flow<String>)","dev.fritz2.core.headers"]},{"name":"fun Tag<HTMLTableCellElement>.headers(value: String)","description":"dev.fritz2.core.headers","location":"core/dev.fritz2.core/headers.html","searchKeys":["headers","fun Tag<HTMLTableCellElement>.headers(value: String)","dev.fritz2.core.headers"]},{"name":"fun Tag<HTMLTableCellElement>.height(value: Flow<String>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLTableCellElement>.height(value: Flow<String>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLTableCellElement>.height(value: String)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLTableCellElement>.height(value: String)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLTableCellElement>.noWrap(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.noWrap","location":"core/dev.fritz2.core/no-wrap.html","searchKeys":["noWrap","fun Tag<HTMLTableCellElement>.noWrap(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.noWrap"]},{"name":"fun Tag<HTMLTableCellElement>.noWrap(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.noWrap","location":"core/dev.fritz2.core/no-wrap.html","searchKeys":["noWrap","fun Tag<HTMLTableCellElement>.noWrap(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.noWrap"]},{"name":"fun Tag<HTMLTableCellElement>.rowSpan(value: Flow<Int>)","description":"dev.fritz2.core.rowSpan","location":"core/dev.fritz2.core/row-span.html","searchKeys":["rowSpan","fun Tag<HTMLTableCellElement>.rowSpan(value: Flow<Int>)","dev.fritz2.core.rowSpan"]},{"name":"fun Tag<HTMLTableCellElement>.rowSpan(value: Int)","description":"dev.fritz2.core.rowSpan","location":"core/dev.fritz2.core/row-span.html","searchKeys":["rowSpan","fun Tag<HTMLTableCellElement>.rowSpan(value: Int)","dev.fritz2.core.rowSpan"]},{"name":"fun Tag<HTMLTableCellElement>.scope(value: Flow<String>)","description":"dev.fritz2.core.scope","location":"core/dev.fritz2.core/scope.html","searchKeys":["scope","fun Tag<HTMLTableCellElement>.scope(value: Flow<String>)","dev.fritz2.core.scope"]},{"name":"fun Tag<HTMLTableCellElement>.scope(value: String)","description":"dev.fritz2.core.scope","location":"core/dev.fritz2.core/scope.html","searchKeys":["scope","fun Tag<HTMLTableCellElement>.scope(value: String)","dev.fritz2.core.scope"]},{"name":"fun Tag<HTMLTableCellElement>.vAlign(value: Flow<String>)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableCellElement>.vAlign(value: Flow<String>)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableCellElement>.vAlign(value: String)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableCellElement>.vAlign(value: String)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableCellElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLTableCellElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLTableCellElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLTableCellElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLTableColElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableColElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableColElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableColElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableColElement>.ch(value: Flow<String>)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableColElement>.ch(value: Flow<String>)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableColElement>.ch(value: String)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableColElement>.ch(value: String)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableColElement>.chOff(value: Flow<String>)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableColElement>.chOff(value: Flow<String>)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableColElement>.chOff(value: String)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableColElement>.chOff(value: String)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableColElement>.span(value: Flow<Int>)","description":"dev.fritz2.core.span","location":"core/dev.fritz2.core/span.html","searchKeys":["span","fun Tag<HTMLTableColElement>.span(value: Flow<Int>)","dev.fritz2.core.span"]},{"name":"fun Tag<HTMLTableColElement>.span(value: Int)","description":"dev.fritz2.core.span","location":"core/dev.fritz2.core/span.html","searchKeys":["span","fun Tag<HTMLTableColElement>.span(value: Int)","dev.fritz2.core.span"]},{"name":"fun Tag<HTMLTableColElement>.vAlign(value: Flow<String>)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableColElement>.vAlign(value: Flow<String>)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableColElement>.vAlign(value: String)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableColElement>.vAlign(value: String)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableColElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLTableColElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLTableColElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLTableColElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLTableElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableElement>.bgColor(value: Flow<String>)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLTableElement>.bgColor(value: Flow<String>)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLTableElement>.bgColor(value: String)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLTableElement>.bgColor(value: String)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLTableElement>.border(value: Flow<String>)","description":"dev.fritz2.core.border","location":"core/dev.fritz2.core/border.html","searchKeys":["border","fun Tag<HTMLTableElement>.border(value: Flow<String>)","dev.fritz2.core.border"]},{"name":"fun Tag<HTMLTableElement>.border(value: String)","description":"dev.fritz2.core.border","location":"core/dev.fritz2.core/border.html","searchKeys":["border","fun Tag<HTMLTableElement>.border(value: String)","dev.fritz2.core.border"]},{"name":"fun Tag<HTMLTableElement>.caption(value: Flow<HTMLTableCaptionElement?>)","description":"dev.fritz2.core.caption","location":"core/dev.fritz2.core/caption.html","searchKeys":["caption","fun Tag<HTMLTableElement>.caption(value: Flow<HTMLTableCaptionElement?>)","dev.fritz2.core.caption"]},{"name":"fun Tag<HTMLTableElement>.caption(value: HTMLTableCaptionElement?)","description":"dev.fritz2.core.caption","location":"core/dev.fritz2.core/caption.html","searchKeys":["caption","fun Tag<HTMLTableElement>.caption(value: HTMLTableCaptionElement?)","dev.fritz2.core.caption"]},{"name":"fun Tag<HTMLTableElement>.cellPadding(value: Flow<String>)","description":"dev.fritz2.core.cellPadding","location":"core/dev.fritz2.core/cell-padding.html","searchKeys":["cellPadding","fun Tag<HTMLTableElement>.cellPadding(value: Flow<String>)","dev.fritz2.core.cellPadding"]},{"name":"fun Tag<HTMLTableElement>.cellPadding(value: String)","description":"dev.fritz2.core.cellPadding","location":"core/dev.fritz2.core/cell-padding.html","searchKeys":["cellPadding","fun Tag<HTMLTableElement>.cellPadding(value: String)","dev.fritz2.core.cellPadding"]},{"name":"fun Tag<HTMLTableElement>.cellSpacing(value: Flow<String>)","description":"dev.fritz2.core.cellSpacing","location":"core/dev.fritz2.core/cell-spacing.html","searchKeys":["cellSpacing","fun Tag<HTMLTableElement>.cellSpacing(value: Flow<String>)","dev.fritz2.core.cellSpacing"]},{"name":"fun Tag<HTMLTableElement>.cellSpacing(value: String)","description":"dev.fritz2.core.cellSpacing","location":"core/dev.fritz2.core/cell-spacing.html","searchKeys":["cellSpacing","fun Tag<HTMLTableElement>.cellSpacing(value: String)","dev.fritz2.core.cellSpacing"]},{"name":"fun Tag<HTMLTableElement>.frame(value: Flow<String>)","description":"dev.fritz2.core.frame","location":"core/dev.fritz2.core/frame.html","searchKeys":["frame","fun Tag<HTMLTableElement>.frame(value: Flow<String>)","dev.fritz2.core.frame"]},{"name":"fun Tag<HTMLTableElement>.frame(value: String)","description":"dev.fritz2.core.frame","location":"core/dev.fritz2.core/frame.html","searchKeys":["frame","fun Tag<HTMLTableElement>.frame(value: String)","dev.fritz2.core.frame"]},{"name":"fun Tag<HTMLTableElement>.rules(value: Flow<String>)","description":"dev.fritz2.core.rules","location":"core/dev.fritz2.core/rules.html","searchKeys":["rules","fun Tag<HTMLTableElement>.rules(value: Flow<String>)","dev.fritz2.core.rules"]},{"name":"fun Tag<HTMLTableElement>.rules(value: String)","description":"dev.fritz2.core.rules","location":"core/dev.fritz2.core/rules.html","searchKeys":["rules","fun Tag<HTMLTableElement>.rules(value: String)","dev.fritz2.core.rules"]},{"name":"fun Tag<HTMLTableElement>.summary(value: Flow<String>)","description":"dev.fritz2.core.summary","location":"core/dev.fritz2.core/summary.html","searchKeys":["summary","fun Tag<HTMLTableElement>.summary(value: Flow<String>)","dev.fritz2.core.summary"]},{"name":"fun Tag<HTMLTableElement>.summary(value: String)","description":"dev.fritz2.core.summary","location":"core/dev.fritz2.core/summary.html","searchKeys":["summary","fun Tag<HTMLTableElement>.summary(value: String)","dev.fritz2.core.summary"]},{"name":"fun Tag<HTMLTableElement>.tFoot(value: Flow<HTMLTableSectionElement?>)","description":"dev.fritz2.core.tFoot","location":"core/dev.fritz2.core/t-foot.html","searchKeys":["tFoot","fun Tag<HTMLTableElement>.tFoot(value: Flow<HTMLTableSectionElement?>)","dev.fritz2.core.tFoot"]},{"name":"fun Tag<HTMLTableElement>.tFoot(value: HTMLTableSectionElement?)","description":"dev.fritz2.core.tFoot","location":"core/dev.fritz2.core/t-foot.html","searchKeys":["tFoot","fun Tag<HTMLTableElement>.tFoot(value: HTMLTableSectionElement?)","dev.fritz2.core.tFoot"]},{"name":"fun Tag<HTMLTableElement>.tHead(value: Flow<HTMLTableSectionElement?>)","description":"dev.fritz2.core.tHead","location":"core/dev.fritz2.core/t-head.html","searchKeys":["tHead","fun Tag<HTMLTableElement>.tHead(value: Flow<HTMLTableSectionElement?>)","dev.fritz2.core.tHead"]},{"name":"fun Tag<HTMLTableElement>.tHead(value: HTMLTableSectionElement?)","description":"dev.fritz2.core.tHead","location":"core/dev.fritz2.core/t-head.html","searchKeys":["tHead","fun Tag<HTMLTableElement>.tHead(value: HTMLTableSectionElement?)","dev.fritz2.core.tHead"]},{"name":"fun Tag<HTMLTableElement>.width(value: Flow<String>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLTableElement>.width(value: Flow<String>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLTableElement>.width(value: String)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLTableElement>.width(value: String)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLTableRowElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableRowElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableRowElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableRowElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableRowElement>.bgColor(value: Flow<String>)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLTableRowElement>.bgColor(value: Flow<String>)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLTableRowElement>.bgColor(value: String)","description":"dev.fritz2.core.bgColor","location":"core/dev.fritz2.core/bg-color.html","searchKeys":["bgColor","fun Tag<HTMLTableRowElement>.bgColor(value: String)","dev.fritz2.core.bgColor"]},{"name":"fun Tag<HTMLTableRowElement>.ch(value: Flow<String>)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableRowElement>.ch(value: Flow<String>)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableRowElement>.ch(value: String)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableRowElement>.ch(value: String)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableRowElement>.chOff(value: Flow<String>)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableRowElement>.chOff(value: Flow<String>)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableRowElement>.chOff(value: String)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableRowElement>.chOff(value: String)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableRowElement>.vAlign(value: Flow<String>)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableRowElement>.vAlign(value: Flow<String>)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableRowElement>.vAlign(value: String)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableRowElement>.vAlign(value: String)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableSectionElement>.align(value: Flow<String>)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableSectionElement>.align(value: Flow<String>)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableSectionElement>.align(value: String)","description":"dev.fritz2.core.align","location":"core/dev.fritz2.core/align.html","searchKeys":["align","fun Tag<HTMLTableSectionElement>.align(value: String)","dev.fritz2.core.align"]},{"name":"fun Tag<HTMLTableSectionElement>.ch(value: Flow<String>)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableSectionElement>.ch(value: Flow<String>)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableSectionElement>.ch(value: String)","description":"dev.fritz2.core.ch","location":"core/dev.fritz2.core/ch.html","searchKeys":["ch","fun Tag<HTMLTableSectionElement>.ch(value: String)","dev.fritz2.core.ch"]},{"name":"fun Tag<HTMLTableSectionElement>.chOff(value: Flow<String>)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableSectionElement>.chOff(value: Flow<String>)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableSectionElement>.chOff(value: String)","description":"dev.fritz2.core.chOff","location":"core/dev.fritz2.core/ch-off.html","searchKeys":["chOff","fun Tag<HTMLTableSectionElement>.chOff(value: String)","dev.fritz2.core.chOff"]},{"name":"fun Tag<HTMLTableSectionElement>.vAlign(value: Flow<String>)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableSectionElement>.vAlign(value: Flow<String>)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTableSectionElement>.vAlign(value: String)","description":"dev.fritz2.core.vAlign","location":"core/dev.fritz2.core/v-align.html","searchKeys":["vAlign","fun Tag<HTMLTableSectionElement>.vAlign(value: String)","dev.fritz2.core.vAlign"]},{"name":"fun Tag<HTMLTextAreaElement>.autocomplete(value: Flow<String>)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLTextAreaElement>.autocomplete(value: Flow<String>)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLTextAreaElement>.autocomplete(value: String)","description":"dev.fritz2.core.autocomplete","location":"core/dev.fritz2.core/autocomplete.html","searchKeys":["autocomplete","fun Tag<HTMLTextAreaElement>.autocomplete(value: String)","dev.fritz2.core.autocomplete"]},{"name":"fun Tag<HTMLTextAreaElement>.autofocus(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLTextAreaElement>.autofocus(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLTextAreaElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.autofocus","location":"core/dev.fritz2.core/autofocus.html","searchKeys":["autofocus","fun Tag<HTMLTextAreaElement>.autofocus(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.autofocus"]},{"name":"fun Tag<HTMLTextAreaElement>.cols(value: Flow<Int>)","description":"dev.fritz2.core.cols","location":"core/dev.fritz2.core/cols.html","searchKeys":["cols","fun Tag<HTMLTextAreaElement>.cols(value: Flow<Int>)","dev.fritz2.core.cols"]},{"name":"fun Tag<HTMLTextAreaElement>.cols(value: Int)","description":"dev.fritz2.core.cols","location":"core/dev.fritz2.core/cols.html","searchKeys":["cols","fun Tag<HTMLTextAreaElement>.cols(value: Int)","dev.fritz2.core.cols"]},{"name":"fun Tag<HTMLTextAreaElement>.defaultValue(value: Flow<String>)","description":"dev.fritz2.core.defaultValue","location":"core/dev.fritz2.core/default-value.html","searchKeys":["defaultValue","fun Tag<HTMLTextAreaElement>.defaultValue(value: Flow<String>)","dev.fritz2.core.defaultValue"]},{"name":"fun Tag<HTMLTextAreaElement>.defaultValue(value: String)","description":"dev.fritz2.core.defaultValue","location":"core/dev.fritz2.core/default-value.html","searchKeys":["defaultValue","fun Tag<HTMLTextAreaElement>.defaultValue(value: String)","dev.fritz2.core.defaultValue"]},{"name":"fun Tag<HTMLTextAreaElement>.dirName(value: Flow<String>)","description":"dev.fritz2.core.dirName","location":"core/dev.fritz2.core/dir-name.html","searchKeys":["dirName","fun Tag<HTMLTextAreaElement>.dirName(value: Flow<String>)","dev.fritz2.core.dirName"]},{"name":"fun Tag<HTMLTextAreaElement>.dirName(value: String)","description":"dev.fritz2.core.dirName","location":"core/dev.fritz2.core/dir-name.html","searchKeys":["dirName","fun Tag<HTMLTextAreaElement>.dirName(value: String)","dev.fritz2.core.dirName"]},{"name":"fun Tag<HTMLTextAreaElement>.disabled(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLTextAreaElement>.disabled(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLTextAreaElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.disabled","location":"core/dev.fritz2.core/disabled.html","searchKeys":["disabled","fun Tag<HTMLTextAreaElement>.disabled(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.disabled"]},{"name":"fun Tag<HTMLTextAreaElement>.inputMode(value: Flow<String>)","description":"dev.fritz2.core.inputMode","location":"core/dev.fritz2.core/input-mode.html","searchKeys":["inputMode","fun Tag<HTMLTextAreaElement>.inputMode(value: Flow<String>)","dev.fritz2.core.inputMode"]},{"name":"fun Tag<HTMLTextAreaElement>.inputMode(value: String)","description":"dev.fritz2.core.inputMode","location":"core/dev.fritz2.core/input-mode.html","searchKeys":["inputMode","fun Tag<HTMLTextAreaElement>.inputMode(value: String)","dev.fritz2.core.inputMode"]},{"name":"fun Tag<HTMLTextAreaElement>.maxLength(value: Flow<Int>)","description":"dev.fritz2.core.maxLength","location":"core/dev.fritz2.core/max-length.html","searchKeys":["maxLength","fun Tag<HTMLTextAreaElement>.maxLength(value: Flow<Int>)","dev.fritz2.core.maxLength"]},{"name":"fun Tag<HTMLTextAreaElement>.maxLength(value: Int)","description":"dev.fritz2.core.maxLength","location":"core/dev.fritz2.core/max-length.html","searchKeys":["maxLength","fun Tag<HTMLTextAreaElement>.maxLength(value: Int)","dev.fritz2.core.maxLength"]},{"name":"fun Tag<HTMLTextAreaElement>.minLength(value: Flow<Int>)","description":"dev.fritz2.core.minLength","location":"core/dev.fritz2.core/min-length.html","searchKeys":["minLength","fun Tag<HTMLTextAreaElement>.minLength(value: Flow<Int>)","dev.fritz2.core.minLength"]},{"name":"fun Tag<HTMLTextAreaElement>.minLength(value: Int)","description":"dev.fritz2.core.minLength","location":"core/dev.fritz2.core/min-length.html","searchKeys":["minLength","fun Tag<HTMLTextAreaElement>.minLength(value: Int)","dev.fritz2.core.minLength"]},{"name":"fun Tag<HTMLTextAreaElement>.name(value: Flow<String>)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLTextAreaElement>.name(value: Flow<String>)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLTextAreaElement>.name(value: String)","description":"dev.fritz2.core.name","location":"core/dev.fritz2.core/name.html","searchKeys":["name","fun Tag<HTMLTextAreaElement>.name(value: String)","dev.fritz2.core.name"]},{"name":"fun Tag<HTMLTextAreaElement>.placeholder(value: Flow<String>)","description":"dev.fritz2.core.placeholder","location":"core/dev.fritz2.core/placeholder.html","searchKeys":["placeholder","fun Tag<HTMLTextAreaElement>.placeholder(value: Flow<String>)","dev.fritz2.core.placeholder"]},{"name":"fun Tag<HTMLTextAreaElement>.placeholder(value: String)","description":"dev.fritz2.core.placeholder","location":"core/dev.fritz2.core/placeholder.html","searchKeys":["placeholder","fun Tag<HTMLTextAreaElement>.placeholder(value: String)","dev.fritz2.core.placeholder"]},{"name":"fun Tag<HTMLTextAreaElement>.readOnly(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.readOnly","location":"core/dev.fritz2.core/read-only.html","searchKeys":["readOnly","fun Tag<HTMLTextAreaElement>.readOnly(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.readOnly"]},{"name":"fun Tag<HTMLTextAreaElement>.readOnly(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.readOnly","location":"core/dev.fritz2.core/read-only.html","searchKeys":["readOnly","fun Tag<HTMLTextAreaElement>.readOnly(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.readOnly"]},{"name":"fun Tag<HTMLTextAreaElement>.required(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.required","location":"core/dev.fritz2.core/required.html","searchKeys":["required","fun Tag<HTMLTextAreaElement>.required(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.required"]},{"name":"fun Tag<HTMLTextAreaElement>.required(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.required","location":"core/dev.fritz2.core/required.html","searchKeys":["required","fun Tag<HTMLTextAreaElement>.required(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.required"]},{"name":"fun Tag<HTMLTextAreaElement>.rows(value: Flow<Int>)","description":"dev.fritz2.core.rows","location":"core/dev.fritz2.core/rows.html","searchKeys":["rows","fun Tag<HTMLTextAreaElement>.rows(value: Flow<Int>)","dev.fritz2.core.rows"]},{"name":"fun Tag<HTMLTextAreaElement>.rows(value: Int)","description":"dev.fritz2.core.rows","location":"core/dev.fritz2.core/rows.html","searchKeys":["rows","fun Tag<HTMLTextAreaElement>.rows(value: Int)","dev.fritz2.core.rows"]},{"name":"fun Tag<HTMLTextAreaElement>.selectionDirection(value: Flow<String?>)","description":"dev.fritz2.core.selectionDirection","location":"core/dev.fritz2.core/selection-direction.html","searchKeys":["selectionDirection","fun Tag<HTMLTextAreaElement>.selectionDirection(value: Flow<String?>)","dev.fritz2.core.selectionDirection"]},{"name":"fun Tag<HTMLTextAreaElement>.selectionDirection(value: String?)","description":"dev.fritz2.core.selectionDirection","location":"core/dev.fritz2.core/selection-direction.html","searchKeys":["selectionDirection","fun Tag<HTMLTextAreaElement>.selectionDirection(value: String?)","dev.fritz2.core.selectionDirection"]},{"name":"fun Tag<HTMLTextAreaElement>.selectionEnd(value: Flow<Int?>)","description":"dev.fritz2.core.selectionEnd","location":"core/dev.fritz2.core/selection-end.html","searchKeys":["selectionEnd","fun Tag<HTMLTextAreaElement>.selectionEnd(value: Flow<Int?>)","dev.fritz2.core.selectionEnd"]},{"name":"fun Tag<HTMLTextAreaElement>.selectionEnd(value: Int?)","description":"dev.fritz2.core.selectionEnd","location":"core/dev.fritz2.core/selection-end.html","searchKeys":["selectionEnd","fun Tag<HTMLTextAreaElement>.selectionEnd(value: Int?)","dev.fritz2.core.selectionEnd"]},{"name":"fun Tag<HTMLTextAreaElement>.selectionStart(value: Flow<Int?>)","description":"dev.fritz2.core.selectionStart","location":"core/dev.fritz2.core/selection-start.html","searchKeys":["selectionStart","fun Tag<HTMLTextAreaElement>.selectionStart(value: Flow<Int?>)","dev.fritz2.core.selectionStart"]},{"name":"fun Tag<HTMLTextAreaElement>.selectionStart(value: Int?)","description":"dev.fritz2.core.selectionStart","location":"core/dev.fritz2.core/selection-start.html","searchKeys":["selectionStart","fun Tag<HTMLTextAreaElement>.selectionStart(value: Int?)","dev.fritz2.core.selectionStart"]},{"name":"fun Tag<HTMLTextAreaElement>.value(value: Flow<String>)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLTextAreaElement>.value(value: Flow<String>)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLTextAreaElement>.value(value: String)","description":"dev.fritz2.core.value","location":"core/dev.fritz2.core/value.html","searchKeys":["value","fun Tag<HTMLTextAreaElement>.value(value: String)","dev.fritz2.core.value"]},{"name":"fun Tag<HTMLTextAreaElement>.wrap(value: Flow<String>)","description":"dev.fritz2.core.wrap","location":"core/dev.fritz2.core/wrap.html","searchKeys":["wrap","fun Tag<HTMLTextAreaElement>.wrap(value: Flow<String>)","dev.fritz2.core.wrap"]},{"name":"fun Tag<HTMLTextAreaElement>.wrap(value: String)","description":"dev.fritz2.core.wrap","location":"core/dev.fritz2.core/wrap.html","searchKeys":["wrap","fun Tag<HTMLTextAreaElement>.wrap(value: String)","dev.fritz2.core.wrap"]},{"name":"fun Tag<HTMLTimeElement>.dateTime(value: Flow<String>)","description":"dev.fritz2.core.dateTime","location":"core/dev.fritz2.core/date-time.html","searchKeys":["dateTime","fun Tag<HTMLTimeElement>.dateTime(value: Flow<String>)","dev.fritz2.core.dateTime"]},{"name":"fun Tag<HTMLTimeElement>.dateTime(value: String)","description":"dev.fritz2.core.dateTime","location":"core/dev.fritz2.core/date-time.html","searchKeys":["dateTime","fun Tag<HTMLTimeElement>.dateTime(value: String)","dev.fritz2.core.dateTime"]},{"name":"fun Tag<HTMLTrackElement>.default(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.default","location":"core/dev.fritz2.core/default.html","searchKeys":["default","fun Tag<HTMLTrackElement>.default(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.default"]},{"name":"fun Tag<HTMLTrackElement>.default(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.default","location":"core/dev.fritz2.core/default.html","searchKeys":["default","fun Tag<HTMLTrackElement>.default(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.default"]},{"name":"fun Tag<HTMLTrackElement>.kind(value: Flow<String>)","description":"dev.fritz2.core.kind","location":"core/dev.fritz2.core/kind.html","searchKeys":["kind","fun Tag<HTMLTrackElement>.kind(value: Flow<String>)","dev.fritz2.core.kind"]},{"name":"fun Tag<HTMLTrackElement>.kind(value: String)","description":"dev.fritz2.core.kind","location":"core/dev.fritz2.core/kind.html","searchKeys":["kind","fun Tag<HTMLTrackElement>.kind(value: String)","dev.fritz2.core.kind"]},{"name":"fun Tag<HTMLTrackElement>.label(value: Flow<String>)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLTrackElement>.label(value: Flow<String>)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLTrackElement>.label(value: String)","description":"dev.fritz2.core.label","location":"core/dev.fritz2.core/label.html","searchKeys":["label","fun Tag<HTMLTrackElement>.label(value: String)","dev.fritz2.core.label"]},{"name":"fun Tag<HTMLTrackElement>.src(value: Flow<String>)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLTrackElement>.src(value: Flow<String>)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLTrackElement>.src(value: String)","description":"dev.fritz2.core.src","location":"core/dev.fritz2.core/src.html","searchKeys":["src","fun Tag<HTMLTrackElement>.src(value: String)","dev.fritz2.core.src"]},{"name":"fun Tag<HTMLTrackElement>.srclang(value: Flow<String>)","description":"dev.fritz2.core.srclang","location":"core/dev.fritz2.core/srclang.html","searchKeys":["srclang","fun Tag<HTMLTrackElement>.srclang(value: Flow<String>)","dev.fritz2.core.srclang"]},{"name":"fun Tag<HTMLTrackElement>.srclang(value: String)","description":"dev.fritz2.core.srclang","location":"core/dev.fritz2.core/srclang.html","searchKeys":["srclang","fun Tag<HTMLTrackElement>.srclang(value: String)","dev.fritz2.core.srclang"]},{"name":"fun Tag<HTMLUListElement>.compact(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLUListElement>.compact(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLUListElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.compact","location":"core/dev.fritz2.core/compact.html","searchKeys":["compact","fun Tag<HTMLUListElement>.compact(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.compact"]},{"name":"fun Tag<HTMLUListElement>.type(value: Flow<String>)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLUListElement>.type(value: Flow<String>)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLUListElement>.type(value: String)","description":"dev.fritz2.core.type","location":"core/dev.fritz2.core/type.html","searchKeys":["type","fun Tag<HTMLUListElement>.type(value: String)","dev.fritz2.core.type"]},{"name":"fun Tag<HTMLVideoElement>.height(value: Flow<Int>)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLVideoElement>.height(value: Flow<Int>)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLVideoElement>.height(value: Int)","description":"dev.fritz2.core.height","location":"core/dev.fritz2.core/height.html","searchKeys":["height","fun Tag<HTMLVideoElement>.height(value: Int)","dev.fritz2.core.height"]},{"name":"fun Tag<HTMLVideoElement>.playsInline(value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.playsInline","location":"core/dev.fritz2.core/plays-inline.html","searchKeys":["playsInline","fun Tag<HTMLVideoElement>.playsInline(value: Boolean, trueValue: String = \"\")","dev.fritz2.core.playsInline"]},{"name":"fun Tag<HTMLVideoElement>.playsInline(value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.playsInline","location":"core/dev.fritz2.core/plays-inline.html","searchKeys":["playsInline","fun Tag<HTMLVideoElement>.playsInline(value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.playsInline"]},{"name":"fun Tag<HTMLVideoElement>.poster(value: Flow<String>)","description":"dev.fritz2.core.poster","location":"core/dev.fritz2.core/poster.html","searchKeys":["poster","fun Tag<HTMLVideoElement>.poster(value: Flow<String>)","dev.fritz2.core.poster"]},{"name":"fun Tag<HTMLVideoElement>.poster(value: String)","description":"dev.fritz2.core.poster","location":"core/dev.fritz2.core/poster.html","searchKeys":["poster","fun Tag<HTMLVideoElement>.poster(value: String)","dev.fritz2.core.poster"]},{"name":"fun Tag<HTMLVideoElement>.width(value: Flow<Int>)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLVideoElement>.width(value: Flow<Int>)","dev.fritz2.core.width"]},{"name":"fun Tag<HTMLVideoElement>.width(value: Int)","description":"dev.fritz2.core.width","location":"core/dev.fritz2.core/width.html","searchKeys":["width","fun Tag<HTMLVideoElement>.width(value: Int)","dev.fritz2.core.width"]},{"name":"fun WithScope.mountPoint(): MountPoint?","description":"dev.fritz2.core.mountPoint","location":"core/dev.fritz2.core/mount-point.html","searchKeys":["mountPoint","fun WithScope.mountPoint(): MountPoint?","dev.fritz2.core.mountPoint"]},{"name":"fun accept(value: String): Request","description":"dev.fritz2.remote.Request.accept","location":"core/dev.fritz2.remote/-request/accept.html","searchKeys":["accept","fun accept(value: String): Request","dev.fritz2.remote.Request.accept"]},{"name":"fun acceptJson(): Request","description":"dev.fritz2.remote.Request.acceptJson","location":"core/dev.fritz2.remote/-request/accept-json.html","searchKeys":["acceptJson","fun acceptJson(): Request","dev.fritz2.remote.Request.acceptJson"]},{"name":"fun addGlobalStyle(css: String)","description":"dev.fritz2.core.addGlobalStyle","location":"core/dev.fritz2.core/add-global-style.html","searchKeys":["addGlobalStyle","fun addGlobalStyle(css: String)","dev.fritz2.core.addGlobalStyle"]},{"name":"fun addGlobalStyles(css: List<String>)","description":"dev.fritz2.core.addGlobalStyles","location":"core/dev.fritz2.core/add-global-styles.html","searchKeys":["addGlobalStyles","fun addGlobalStyles(css: List<String>)","dev.fritz2.core.addGlobalStyles"]},{"name":"fun append(subUrl: String): Request","description":"dev.fritz2.remote.Request.append","location":"core/dev.fritz2.remote/-request/append.html","searchKeys":["append","fun append(subUrl: String): Request","dev.fritz2.remote.Request.append"]},{"name":"fun append(subUrl: String): Socket","description":"dev.fritz2.remote.Socket.append","location":"core/dev.fritz2.remote/-socket/append.html","searchKeys":["append","fun append(subUrl: String): Socket","dev.fritz2.remote.Socket.append"]},{"name":"fun arrayBuffer(content: ArrayBuffer): Request","description":"dev.fritz2.remote.Request.arrayBuffer","location":"core/dev.fritz2.remote/-request/array-buffer.html","searchKeys":["arrayBuffer","fun arrayBuffer(content: ArrayBuffer): Request","dev.fritz2.remote.Request.arrayBuffer"]},{"name":"fun attributeChangedCallback(name: String, value: String)","description":"dev.fritz2.webcomponents.WebComponent.attributeChangedCallback","location":"core/dev.fritz2.webcomponents/-web-component/attribute-changed-callback.html","searchKeys":["attributeChangedCallback","fun attributeChangedCallback(name: String, value: String)","dev.fritz2.webcomponents.WebComponent.attributeChangedCallback"]},{"name":"fun attributeChanges(name: String): Flow<String>","description":"dev.fritz2.webcomponents.WebComponent.attributeChanges","location":"core/dev.fritz2.webcomponents/-web-component/attribute-changes.html","searchKeys":["attributeChanges","fun attributeChanges(name: String): Flow<String>","dev.fritz2.webcomponents.WebComponent.attributeChanges"]},{"name":"fun back(): T","description":"dev.fritz2.history.History.back","location":"core/dev.fritz2.history/-history/back.html","searchKeys":["back","fun back(): T","dev.fritz2.history.History.back"]},{"name":"fun basicAuth(username: String, password: String): Request","description":"dev.fritz2.remote.Request.basicAuth","location":"core/dev.fritz2.remote/-request/basic-auth.html","searchKeys":["basicAuth","fun basicAuth(username: String, password: String): Request","dev.fritz2.remote.Request.basicAuth"]},{"name":"fun blob(content: Blob): Request","description":"dev.fritz2.remote.Request.blob","location":"core/dev.fritz2.remote/-request/blob.html","searchKeys":["blob","fun blob(content: Blob): Request","dev.fritz2.remote.Request.blob"]},{"name":"fun body(content: String): Request","description":"dev.fritz2.remote.Request.body","location":"core/dev.fritz2.remote/-request/body.html","searchKeys":["body","fun body(content: String): Request","dev.fritz2.remote.Request.body"]},{"name":"fun cache(value: RequestCache): Request","description":"dev.fritz2.remote.Request.cache","location":"core/dev.fritz2.remote/-request/cache.html","searchKeys":["cache","fun cache(value: RequestCache): Request","dev.fritz2.remote.Request.cache"]},{"name":"fun cacheControl(value: String): Request","description":"dev.fritz2.remote.Request.cacheControl","location":"core/dev.fritz2.remote/-request/cache-control.html","searchKeys":["cacheControl","fun cacheControl(value: String): Request","dev.fritz2.remote.Request.cacheControl"]},{"name":"fun classes(vararg classes: String?): String","description":"dev.fritz2.core.classes","location":"core/dev.fritz2.core/classes.html","searchKeys":["classes","fun classes(vararg classes: String?): String","dev.fritz2.core.classes"]},{"name":"fun clear()","description":"dev.fritz2.history.History.clear","location":"core/dev.fritz2.history/-history/clear.html","searchKeys":["clear","fun clear()","dev.fritz2.history.History.clear"]},{"name":"fun clear()","description":"dev.fritz2.remote.Authentication.clear","location":"core/dev.fritz2.remote/-authentication/clear.html","searchKeys":["clear","fun clear()","dev.fritz2.remote.Authentication.clear"]},{"name":"fun complete(principal: P)","description":"dev.fritz2.remote.Authentication.complete","location":"core/dev.fritz2.remote/-authentication/complete.html","searchKeys":["complete","fun complete(principal: P)","dev.fritz2.remote.Authentication.complete"]},{"name":"fun connect(subUrl: String = \"\"): Session","description":"dev.fritz2.remote.Socket.connect","location":"core/dev.fritz2.remote/-socket/connect.html","searchKeys":["connect","fun connect(subUrl: String = \"\"): Session","dev.fritz2.remote.Socket.connect"]},{"name":"fun content(xml: String)","description":"dev.fritz2.core.SvgTag.content","location":"core/dev.fritz2.core/-svg-tag/content.html","searchKeys":["content","fun content(xml: String)","dev.fritz2.core.SvgTag.content"]},{"name":"fun contentType(value: String): Request","description":"dev.fritz2.remote.Request.contentType","location":"core/dev.fritz2.remote/-request/content-type.html","searchKeys":["contentType","fun contentType(value: String): Request","dev.fritz2.remote.Request.contentType"]},{"name":"fun copy(response: Response = this.response, request: Request = this.request, propagate: Boolean = this.propagate): Response","description":"dev.fritz2.remote.Response.copy","location":"core/dev.fritz2.remote/-response/copy.html","searchKeys":["copy","fun copy(response: Response = this.response, request: Request = this.request, propagate: Boolean = this.propagate): Response","dev.fritz2.remote.Response.copy"]},{"name":"fun credentials(value: RequestCredentials): Request","description":"dev.fritz2.remote.Request.credentials","location":"core/dev.fritz2.remote/-request/credentials.html","searchKeys":["credentials","fun credentials(value: RequestCredentials): Request","dev.fritz2.remote.Request.credentials"]},{"name":"fun formData(content: FormData): Request","description":"dev.fritz2.remote.Request.formData","location":"core/dev.fritz2.remote/-request/form-data.html","searchKeys":["formData","fun formData(content: FormData): Request","dev.fritz2.remote.Request.formData"]},{"name":"fun header(name: String, value: String): Request","description":"dev.fritz2.remote.Request.header","location":"core/dev.fritz2.remote/-request/header.html","searchKeys":["header","fun header(name: String, value: String): Request","dev.fritz2.remote.Request.header"]},{"name":"fun http(baseUrl: String = \"\"): Request","description":"dev.fritz2.remote.http","location":"core/dev.fritz2.remote/http.html","searchKeys":["http","fun http(baseUrl: String = \"\"): Request","dev.fritz2.remote.http"]},{"name":"fun initializeInternal(element: HTMLElement, shadowRoot: ShadowRoot): HtmlTag<E>","description":"dev.fritz2.webcomponents.WebComponent.initializeInternal","location":"core/dev.fritz2.webcomponents/-web-component/initialize-internal.html","searchKeys":["initializeInternal","fun initializeInternal(element: HTMLElement, shadowRoot: ShadowRoot): HtmlTag<E>","dev.fritz2.webcomponents.WebComponent.initializeInternal"]},{"name":"fun integrity(value: String): Request","description":"dev.fritz2.remote.Request.integrity","location":"core/dev.fritz2.remote/-request/integrity.html","searchKeys":["integrity","fun integrity(value: String): Request","dev.fritz2.remote.Request.integrity"]},{"name":"fun joinClasses(vararg classes: String?): String","description":"dev.fritz2.core.joinClasses","location":"core/dev.fritz2.core/join-classes.html","searchKeys":["joinClasses","fun joinClasses(vararg classes: String?): String","dev.fritz2.core.joinClasses"]},{"name":"fun keepalive(value: Boolean): Request","description":"dev.fritz2.remote.Request.keepalive","location":"core/dev.fritz2.remote/-request/keepalive.html","searchKeys":["keepalive","fun keepalive(value: Boolean): Request","dev.fritz2.remote.Request.keepalive"]},{"name":"fun linkStylesheet(shadowRoot: ShadowRoot, url: String)","description":"dev.fritz2.webcomponents.WebComponent.linkStylesheet","location":"core/dev.fritz2.webcomponents/-web-component/link-stylesheet.html","searchKeys":["linkStylesheet","fun linkStylesheet(shadowRoot: ShadowRoot, url: String)","dev.fritz2.webcomponents.WebComponent.linkStylesheet"]},{"name":"fun next(length: Int = defaultLength): String","description":"dev.fritz2.core.Id.next","location":"core/dev.fritz2.core/-id/next.html","searchKeys":["next","fun next(length: Int = defaultLength): String","dev.fritz2.core.Id.next"]},{"name":"fun protocols(vararg protocols: String): Socket","description":"dev.fritz2.remote.Socket.protocols","location":"core/dev.fritz2.remote/-socket/protocols.html","searchKeys":["protocols","fun protocols(vararg protocols: String): Socket","dev.fritz2.remote.Socket.protocols"]},{"name":"fun push(entry: T)","description":"dev.fritz2.history.History.push","location":"core/dev.fritz2.history/-history/push.html","searchKeys":["push","fun push(entry: T)","dev.fritz2.history.History.push"]},{"name":"fun queryParameters(parameters: Map<String, String>): Request","description":"dev.fritz2.remote.Request.queryParameters","location":"core/dev.fritz2.remote/-request/query-parameters.html","searchKeys":["queryParameters","fun queryParameters(parameters: Map<String, String>): Request","dev.fritz2.remote.Request.queryParameters"]},{"name":"fun redirect(value: RequestRedirect): Request","description":"dev.fritz2.remote.Request.redirect","location":"core/dev.fritz2.remote/-request/redirect.html","searchKeys":["redirect","fun redirect(value: RequestRedirect): Request","dev.fritz2.remote.Request.redirect"]},{"name":"fun referrer(value: String): Request","description":"dev.fritz2.remote.Request.referrer","location":"core/dev.fritz2.remote/-request/referrer.html","searchKeys":["referrer","fun referrer(value: String): Request","dev.fritz2.remote.Request.referrer"]},{"name":"fun referrerPolicy(value: dynamic): Request","description":"dev.fritz2.remote.Request.referrerPolicy","location":"core/dev.fritz2.remote/-request/referrer-policy.html","searchKeys":["referrerPolicy","fun referrerPolicy(value: dynamic): Request","dev.fritz2.remote.Request.referrerPolicy"]},{"name":"fun render(selector: String, override: Boolean = true, scope: ScopeContext.() -> Unit = {}, content: RenderContext.() -> Unit)","description":"dev.fritz2.core.render","location":"core/dev.fritz2.core/render.html","searchKeys":["render","fun render(selector: String, override: Boolean = true, scope: ScopeContext.() -> Unit = {}, content: RenderContext.() -> Unit)","dev.fritz2.core.render"]},{"name":"fun render(targetElement: HTMLElement? = document.body, override: Boolean = true, scope: ScopeContext.() -> Unit = {}, content: RenderContext.() -> Unit)","description":"dev.fritz2.core.render","location":"core/dev.fritz2.core/render.html","searchKeys":["render","fun render(targetElement: HTMLElement? = document.body, override: Boolean = true, scope: ScopeContext.() -> Unit = {}, content: RenderContext.() -> Unit)","dev.fritz2.core.render"]},{"name":"fun reqWindow(value: Any): Request","description":"dev.fritz2.remote.Request.reqWindow","location":"core/dev.fritz2.remote/-request/req-window.html","searchKeys":["reqWindow","fun reqWindow(value: Any): Request","dev.fritz2.remote.Request.reqWindow"]},{"name":"fun requestMode(value: RequestMode): Request","description":"dev.fritz2.remote.Request.requestMode","location":"core/dev.fritz2.remote/-request/request-mode.html","searchKeys":["requestMode","fun requestMode(value: RequestMode): Request","dev.fritz2.remote.Request.requestMode"]},{"name":"fun resetCounters()","description":"dev.fritz2.core.RootStore.Companion.resetCounters","location":"core/dev.fritz2.core/-root-store/-companion/reset-counters.html","searchKeys":["resetCounters","fun resetCounters()","dev.fritz2.core.RootStore.Companion.resetCounters"]},{"name":"fun routerOf(default: Map<String, String> = emptyMap(), job: Job = Job()): MapRouter","description":"dev.fritz2.routing.routerOf","location":"core/dev.fritz2.routing/router-of.html","searchKeys":["routerOf","fun routerOf(default: Map<String, String> = emptyMap(), job: Job = Job()): MapRouter","dev.fritz2.routing.routerOf"]},{"name":"fun routerOf(default: String = \"\", job: Job = Job()): Router<String>","description":"dev.fritz2.routing.routerOf","location":"core/dev.fritz2.routing/router-of.html","searchKeys":["routerOf","fun routerOf(default: String = \"\", job: Job = Job()): Router<String>","dev.fritz2.routing.routerOf"]},{"name":"fun runWithJob(init: WithJob.() -> Unit)","description":"dev.fritz2.core.RootStore.runWithJob","location":"core/dev.fritz2.core/-root-store/run-with-job.html","searchKeys":["runWithJob","fun runWithJob(init: WithJob.() -> Unit)","dev.fritz2.core.RootStore.runWithJob"]},{"name":"fun setStylesheet(shadowRoot: ShadowRoot, text: String)","description":"dev.fritz2.webcomponents.WebComponent.setStylesheet","location":"core/dev.fritz2.webcomponents/-web-component/set-stylesheet.html","searchKeys":["setStylesheet","fun setStylesheet(shadowRoot: ShadowRoot, text: String)","dev.fritz2.webcomponents.WebComponent.setStylesheet"]},{"name":"fun shortcutOf(event: KeyboardEvent): Shortcut","description":"dev.fritz2.core.shortcutOf","location":"core/dev.fritz2.core/shortcut-of.html","searchKeys":["shortcutOf","fun shortcutOf(event: KeyboardEvent): Shortcut","dev.fritz2.core.shortcutOf"]},{"name":"fun shortcutOf(key: String): Shortcut","description":"dev.fritz2.core.shortcutOf","location":"core/dev.fritz2.core/shortcut-of.html","searchKeys":["shortcutOf","fun shortcutOf(key: String): Shortcut","dev.fritz2.core.shortcutOf"]},{"name":"fun start()","description":"dev.fritz2.remote.Authentication.start","location":"core/dev.fritz2.remote/-authentication/start.html","searchKeys":["start","fun start()","dev.fritz2.remote.Authentication.start"]},{"name":"fun tracker(debounceTimeout: Long = 100): Tracker","description":"dev.fritz2.tracking.tracker","location":"core/dev.fritz2.tracking/tracker.html","searchKeys":["tracker","fun tracker(debounceTimeout: Long = 100): Tracker","dev.fritz2.tracking.tracker"]},{"name":"fun use(middleware: Middleware): Request","description":"dev.fritz2.remote.Request.use","location":"core/dev.fritz2.remote/-request/use.html","searchKeys":["use","fun use(middleware: Middleware): Request","dev.fritz2.remote.Request.use"]},{"name":"fun use(vararg middlewares: Middleware): Request","description":"dev.fritz2.remote.Request.use","location":"core/dev.fritz2.remote/-request/use.html","searchKeys":["use","fun use(vararg middlewares: Middleware): Request","dev.fritz2.remote.Request.use"]},{"name":"fun websocket(url: String, vararg protocols: String): Socket","description":"dev.fritz2.remote.websocket","location":"core/dev.fritz2.remote/websocket.html","searchKeys":["websocket","fun websocket(url: String, vararg protocols: String): Socket","dev.fritz2.remote.websocket"]},{"name":"fun xmlns(value: String)","description":"dev.fritz2.core.SvgTag.xmlns","location":"core/dev.fritz2.core/-svg-tag/xmlns.html","searchKeys":["xmlns","fun xmlns(value: String)","dev.fritz2.core.SvgTag.xmlns"]},{"name":"inline fun <P, C : P> lensForUpcasting(): Lens<P, C>","description":"dev.fritz2.core.lensForUpcasting","location":"core/dev.fritz2.core/lens-for-upcasting.html","searchKeys":["lensForUpcasting","inline fun <P, C : P> lensForUpcasting(): Lens<P, C>","dev.fritz2.core.lensForUpcasting"]},{"name":"inline fun <P, T> lensOf(id: String, crossinline getter: (P) -> T, crossinline setter: (P, T) -> P): Lens<P, T>","description":"dev.fritz2.core.lensOf","location":"core/dev.fritz2.core/lens-of.html","searchKeys":["lensOf","inline fun <P, T> lensOf(id: String, crossinline getter: (P) -> T, crossinline setter: (P, T) -> P): Lens<P, T>","dev.fritz2.core.lensOf"]},{"name":"inline fun <P> lensOf(crossinline format: (P) -> String, crossinline parse: (String) -> P): Lens<P, String>","description":"dev.fritz2.core.lensOf","location":"core/dev.fritz2.core/lens-of.html","searchKeys":["lensOf","inline fun <P> lensOf(crossinline format: (P) -> String, crossinline parse: (String) -> P): Lens<P, String>","dev.fritz2.core.lensOf"]},{"name":"inline fun <T : Any> keyOf(name: String? = null): Scope.Key<T>","description":"dev.fritz2.core.Scope.Companion.keyOf","location":"core/dev.fritz2.core/-scope/-companion/key-of.html","searchKeys":["keyOf","inline fun <T : Any> keyOf(name: String? = null): Scope.Key<T>","dev.fritz2.core.Scope.Companion.keyOf"]},{"name":"inline fun <T> mountSimple(parentJob: Job, upstream: Flow<T>, crossinline collect: suspend (T) -> Unit)","description":"dev.fritz2.core.mountSimple","location":"core/dev.fritz2.core/mount-simple.html","searchKeys":["mountSimple","inline fun <T> mountSimple(parentJob: Job, upstream: Flow<T>, crossinline collect: suspend (T) -> Unit)","dev.fritz2.core.mountSimple"]},{"name":"inline override fun <N : Node, W : WithDomNode<N>> register(element: W, content: (W) -> Unit): W","description":"dev.fritz2.core.HtmlTag.register","location":"core/dev.fritz2.core/-html-tag/register.html","searchKeys":["register","inline override fun <N : Node, W : WithDomNode<N>> register(element: W, content: (W) -> Unit): W","dev.fritz2.core.HtmlTag.register"]},{"name":"interface Handler<A>","description":"dev.fritz2.core.Handler","location":"core/dev.fritz2.core/-handler/index.html","searchKeys":["Handler","interface Handler<A>","dev.fritz2.core.Handler"]},{"name":"interface Inspector<D>","description":"dev.fritz2.core.Inspector","location":"core/dev.fritz2.core/-inspector/index.html","searchKeys":["Inspector","interface Inspector<D>","dev.fritz2.core.Inspector"]},{"name":"interface Lens<P, T>","description":"dev.fritz2.core.Lens","location":"core/dev.fritz2.core/-lens/index.html","searchKeys":["Lens","interface Lens<P, T>","dev.fritz2.core.Lens"]},{"name":"interface Middleware","description":"dev.fritz2.remote.Middleware","location":"core/dev.fritz2.remote/-middleware/index.html","searchKeys":["Middleware","interface Middleware","dev.fritz2.remote.Middleware"]},{"name":"interface ModifierShortcut","description":"dev.fritz2.core.ModifierShortcut","location":"core/dev.fritz2.core/-modifier-shortcut/index.html","searchKeys":["ModifierShortcut","interface ModifierShortcut","dev.fritz2.core.ModifierShortcut"]},{"name":"interface MountPoint","description":"dev.fritz2.core.MountPoint","location":"core/dev.fritz2.core/-mount-point/index.html","searchKeys":["MountPoint","interface MountPoint","dev.fritz2.core.MountPoint"]},{"name":"interface RenderContext : WithJob, WithScope","description":"dev.fritz2.core.RenderContext","location":"core/dev.fritz2.core/-render-context/index.html","searchKeys":["RenderContext","interface RenderContext : WithJob, WithScope","dev.fritz2.core.RenderContext"]},{"name":"interface Route<T>","description":"dev.fritz2.routing.Route","location":"core/dev.fritz2.routing/-route/index.html","searchKeys":["Route","interface Route<T>","dev.fritz2.routing.Route"]},{"name":"interface Store<D>","description":"dev.fritz2.core.Store","location":"core/dev.fritz2.core/-store/index.html","searchKeys":["Store","interface Store<D>","dev.fritz2.core.Store"]},{"name":"interface Tag<out E : Element> : RenderContext, WithDomNode<E> , WithEvents<E> ","description":"dev.fritz2.core.Tag","location":"core/dev.fritz2.core/-tag/index.html","searchKeys":["Tag","interface Tag<out E : Element> : RenderContext, WithDomNode<E> , WithEvents<E> ","dev.fritz2.core.Tag"]},{"name":"interface ValidationMessage","description":"dev.fritz2.validation.ValidationMessage","location":"core/dev.fritz2.validation/-validation-message/index.html","searchKeys":["ValidationMessage","interface ValidationMessage","dev.fritz2.validation.ValidationMessage"]},{"name":"interface WithEvents<out T : EventTarget>","description":"dev.fritz2.core.WithEvents","location":"core/dev.fritz2.core/-with-events/index.html","searchKeys":["WithEvents","interface WithEvents<out T : EventTarget>","dev.fritz2.core.WithEvents"]},{"name":"interface WithJob","description":"dev.fritz2.core.WithJob","location":"core/dev.fritz2.core/-with-job/index.html","searchKeys":["WithJob","interface WithJob","dev.fritz2.core.WithJob"]},{"name":"interface WithScope","description":"dev.fritz2.core.WithScope","location":"core/dev.fritz2.core/-with-scope/index.html","searchKeys":["WithScope","interface WithScope","dev.fritz2.core.WithScope"]},{"name":"object Companion","description":"dev.fritz2.core.RootStore.Companion","location":"core/dev.fritz2.core/-root-store/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.core.RootStore.Companion"]},{"name":"object Companion","description":"dev.fritz2.core.Scope.Companion","location":"core/dev.fritz2.core/-scope/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.core.Scope.Companion"]},{"name":"object Companion","description":"dev.fritz2.core.Transition.Companion","location":"core/dev.fritz2.core/-transition/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.core.Transition.Companion"]},{"name":"object Companion","description":"dev.fritz2.core.WithEvents.Companion","location":"core/dev.fritz2.core/-with-events/-companion/index.html","searchKeys":["Companion","object Companion","dev.fritz2.core.WithEvents.Companion"]},{"name":"object Connecting : SessionState","description":"dev.fritz2.remote.SessionState.Connecting","location":"core/dev.fritz2.remote/-session-state/-connecting/index.html","searchKeys":["Connecting","object Connecting : SessionState","dev.fritz2.remote.SessionState.Connecting"]},{"name":"object Id","description":"dev.fritz2.core.Id","location":"core/dev.fritz2.core/-id/index.html","searchKeys":["Id","object Id","dev.fritz2.core.Id"]},{"name":"object Keys","description":"dev.fritz2.core.Keys","location":"core/dev.fritz2.core/-keys/index.html","searchKeys":["Keys","object Keys","dev.fritz2.core.Keys"]},{"name":"object Myer","description":"dev.fritz2.core.Myer","location":"core/dev.fritz2.core/-myer/index.html","searchKeys":["Myer","object Myer","dev.fritz2.core.Myer"]},{"name":"object Window : WithEvents<Window> ","description":"dev.fritz2.core.Window","location":"core/dev.fritz2.core/-window/index.html","searchKeys":["Window","object Window : WithEvents<Window> ","dev.fritz2.core.Window"]},{"name":"open class HtmlTag<out E : Element>(tagName: String, val id: String? = null, val baseClass: String? = null, val job: Job, val scope: Scope) : Tag<E> ","description":"dev.fritz2.core.HtmlTag","location":"core/dev.fritz2.core/-html-tag/index.html","searchKeys":["HtmlTag","open class HtmlTag<out E : Element>(tagName: String, val id: String? = null, val baseClass: String? = null, val job: Job, val scope: Scope) : Tag<E> ","dev.fritz2.core.HtmlTag"]},{"name":"open class Key<T : Any>(val name: String)","description":"dev.fritz2.core.Scope.Key","location":"core/dev.fritz2.core/-scope/-key/index.html","searchKeys":["Key","open class Key<T : Any>(val name: String)","dev.fritz2.core.Scope.Key"]},{"name":"open class MapRoute(val default: Map<String, String> = emptyMap()) : Route<Map<String, String>> ","description":"dev.fritz2.routing.MapRoute","location":"core/dev.fritz2.routing/-map-route/index.html","searchKeys":["MapRoute","open class MapRoute(val default: Map<String, String> = emptyMap()) : Route<Map<String, String>> ","dev.fritz2.routing.MapRoute"]},{"name":"open class MapRouter(defaultRoute: Map<String, String> = emptyMap(), job: Job) : Router<Map<String, String>> ","description":"dev.fritz2.routing.MapRouter","location":"core/dev.fritz2.routing/-map-router/index.html","searchKeys":["MapRouter","open class MapRouter(defaultRoute: Map<String, String> = emptyMap(), job: Job) : Router<Map<String, String>> ","dev.fritz2.routing.MapRouter"]},{"name":"open class Request(val url: String = \"\", val method: String = \"\", val headers: Map<String, String> = emptyMap(), val body: dynamic = undefined, val referrer: String? = undefined, val referrerPolicy: dynamic = undefined, val mode: RequestMode? = undefined, val credentials: RequestCredentials? = undefined, val cache: RequestCache? = undefined, val redirect: RequestRedirect? = undefined, val integrity: String? = undefined, val keepalive: Boolean? = undefined, val reqWindow: Any? = undefined, val middlewares: List<Middleware> = emptyList())","description":"dev.fritz2.remote.Request","location":"core/dev.fritz2.remote/-request/index.html","searchKeys":["Request","open class Request(val url: String = \"\", val method: String = \"\", val headers: Map<String, String> = emptyMap(), val body: dynamic = undefined, val referrer: String? = undefined, val referrerPolicy: dynamic = undefined, val mode: RequestMode? = undefined, val credentials: RequestCredentials? = undefined, val cache: RequestCache? = undefined, val redirect: RequestRedirect? = undefined, val integrity: String? = undefined, val keepalive: Boolean? = undefined, val reqWindow: Any? = undefined, val middlewares: List<Middleware> = emptyList())","dev.fritz2.remote.Request"]},{"name":"open class Response(response: Response, val request: Request, val propagate: Boolean = true)","description":"dev.fritz2.remote.Response","location":"core/dev.fritz2.remote/-response/index.html","searchKeys":["Response","open class Response(response: Response, val request: Request, val propagate: Boolean = true)","dev.fritz2.remote.Response"]},{"name":"open class RootStore<D>(initialData: D, job: Job, val id: String = Id.next()) : Store<D> ","description":"dev.fritz2.core.RootStore","location":"core/dev.fritz2.core/-root-store/index.html","searchKeys":["RootStore","open class RootStore<D>(initialData: D, job: Job, val id: String = Id.next()) : Store<D> ","dev.fritz2.core.RootStore"]},{"name":"open class Router<T>(defaultRoute: Route<T>, val job: Job) : Store<T> ","description":"dev.fritz2.routing.Router","location":"core/dev.fritz2.routing/-router/index.html","searchKeys":["Router","open class Router<T>(defaultRoute: Route<T>, val job: Job) : Store<T> ","dev.fritz2.routing.Router"]},{"name":"open class Session(webSocket: WebSocket)","description":"dev.fritz2.remote.Session","location":"core/dev.fritz2.remote/-session/index.html","searchKeys":["Session","open class Session(webSocket: WebSocket)","dev.fritz2.remote.Session"]},{"name":"open class Socket(baseUrl: String = \"\", protocols: Array<out String> = emptyArray())","description":"dev.fritz2.remote.Socket","location":"core/dev.fritz2.remote/-socket/index.html","searchKeys":["Socket","open class Socket(baseUrl: String = \"\", protocols: Array<out String> = emptyArray())","dev.fritz2.remote.Socket"]},{"name":"open class StringRoute(val default: String = \"\") : Route<String> ","description":"dev.fritz2.routing.StringRoute","location":"core/dev.fritz2.routing/-string-route/index.html","searchKeys":["StringRoute","open class StringRoute(val default: String = \"\") : Route<String> ","dev.fritz2.routing.StringRoute"]},{"name":"open class ValidatingStore<D, T, M>(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job, validateAfterUpdate: Boolean = true, val id: String = Id.next()) : RootStore<D> ","description":"dev.fritz2.validation.ValidatingStore","location":"core/dev.fritz2.validation/-validating-store/index.html","searchKeys":["ValidatingStore","open class ValidatingStore<D, T, M>(initialData: D, validation: Validation<D, T, M>, metadataDefault: T, job: Job, validateAfterUpdate: Boolean = true, val id: String = Id.next()) : RootStore<D> ","dev.fritz2.validation.ValidatingStore"]},{"name":"open fun <A, E> handleAndEmit(execute: suspend FlowCollector<E>.(D, A) -> D): EmittingHandler<A, E>","description":"dev.fritz2.core.Store.handleAndEmit","location":"core/dev.fritz2.core/-store/handle-and-emit.html","searchKeys":["handleAndEmit","open fun <A, E> handleAndEmit(execute: suspend FlowCollector<E>.(D, A) -> D): EmittingHandler<A, E>","dev.fritz2.core.Store.handleAndEmit"]},{"name":"open fun <A> handle(execute: suspend (D, A) -> D): SimpleHandler<A>","description":"dev.fritz2.core.Store.handle","location":"core/dev.fritz2.core/-store/handle.html","searchKeys":["handle","open fun <A> handle(execute: suspend (D, A) -> D): SimpleHandler<A>","dev.fritz2.core.Store.handle"]},{"name":"open fun <E> handleAndEmit(execute: suspend FlowCollector<E>.(D) -> D): EmittingHandler<Unit, E>","description":"dev.fritz2.core.Store.handleAndEmit","location":"core/dev.fritz2.core/-store/handle-and-emit.html","searchKeys":["handleAndEmit","open fun <E> handleAndEmit(execute: suspend FlowCollector<E>.(D) -> D): EmittingHandler<Unit, E>","dev.fritz2.core.Store.handleAndEmit"]},{"name":"open fun <T : Any> Scope.asDataAttr(key: Scope.Key<T>)","description":"dev.fritz2.core.Tag.asDataAttr","location":"core/dev.fritz2.core/-tag/as-data-attr.html","searchKeys":["asDataAttr","open fun <T : Any> Scope.asDataAttr(key: Scope.Key<T>)","dev.fritz2.core.Tag.asDataAttr"]},{"name":"open fun <T> Flow<T>.asString(): Flow<String>","description":"dev.fritz2.core.RenderContext.asString","location":"core/dev.fritz2.core/-render-context/as-string.html","searchKeys":["asString","open fun <T> Flow<T>.asString(): Flow<String>","dev.fritz2.core.RenderContext.asString"]},{"name":"open fun <T> Flow<T>.renderText(into: Tag<*>? = null)","description":"dev.fritz2.core.Tag.renderText","location":"core/dev.fritz2.core/-tag/render-text.html","searchKeys":["renderText","open fun <T> Flow<T>.renderText(into: Tag<*>? = null)","dev.fritz2.core.Tag.renderText"]},{"name":"open fun <T> attr(name: String, value: Flow<T>)","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun <T> attr(name: String, value: Flow<T>)","dev.fritz2.core.Tag.attr"]},{"name":"open fun <T> attr(name: String, value: T)","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun <T> attr(name: String, value: T)","dev.fritz2.core.Tag.attr"]},{"name":"open fun <T> className(value: Flow<T>, initial: T, transform: (T) -> String)","description":"dev.fritz2.core.Tag.className","location":"core/dev.fritz2.core/-tag/class-name.html","searchKeys":["className","open fun <T> className(value: Flow<T>, initial: T, transform: (T) -> String)","dev.fritz2.core.Tag.className"]},{"name":"open fun <V> Flow<List<V>>.renderEach(idProvider: IdProvider<V, *>? = null, into: Tag<HTMLElement>? = null, batch: Boolean = false, content: RenderContext.(V) -> Tag<HTMLElement>)","description":"dev.fritz2.core.RenderContext.renderEach","location":"core/dev.fritz2.core/-render-context/render-each.html","searchKeys":["renderEach","open fun <V> Flow<List<V>>.renderEach(idProvider: IdProvider<V, *>? = null, into: Tag<HTMLElement>? = null, batch: Boolean = false, content: RenderContext.(V) -> Tag<HTMLElement>)","dev.fritz2.core.RenderContext.renderEach"]},{"name":"open fun <V> Flow<V>.render(into: Tag<HTMLElement>? = null, content: Tag<*>.(V) -> Unit)","description":"dev.fritz2.core.RenderContext.render","location":"core/dev.fritz2.core/-render-context/render.html","searchKeys":["render","open fun <V> Flow<V>.render(into: Tag<HTMLElement>? = null, content: Tag<*>.(V) -> Unit)","dev.fritz2.core.RenderContext.render"]},{"name":"open fun <V> Flow<V>.renderIf(predicate: (V) -> Boolean, into: Tag<HTMLElement>? = null, content: Tag<*>.(V) -> Unit)","description":"dev.fritz2.core.RenderContext.renderIf","location":"core/dev.fritz2.core/-render-context/render-if.html","searchKeys":["renderIf","open fun <V> Flow<V>.renderIf(predicate: (V) -> Boolean, into: Tag<HTMLElement>? = null, content: Tag<*>.(V) -> Unit)","dev.fritz2.core.RenderContext.renderIf"]},{"name":"open fun <V> Flow<V?>.renderNotNull(into: Tag<HTMLElement>? = null, content: Tag<*>.(V) -> Unit)","description":"dev.fritz2.core.RenderContext.renderNotNull","location":"core/dev.fritz2.core/-render-context/render-not-null.html","searchKeys":["renderNotNull","open fun <V> Flow<V?>.renderNotNull(into: Tag<HTMLElement>? = null, content: Tag<*>.(V) -> Unit)","dev.fritz2.core.RenderContext.renderNotNull"]},{"name":"open fun <V> Store<List<V>>.renderEach(idProvider: IdProvider<V, *>, into: Tag<HTMLElement>? = null, content: RenderContext.(Store<V>) -> HtmlTag<HTMLElement>)","description":"dev.fritz2.core.RenderContext.renderEach","location":"core/dev.fritz2.core/-render-context/render-each.html","searchKeys":["renderEach","open fun <V> Store<List<V>>.renderEach(idProvider: IdProvider<V, *>, into: Tag<HTMLElement>? = null, content: RenderContext.(Store<V>) -> HtmlTag<HTMLElement>)","dev.fritz2.core.RenderContext.renderEach"]},{"name":"open fun <W : Any> Flow<*>.renderIs(klass: KClass<W>, into: Tag<HTMLElement>? = null, content: Tag<*>.(W) -> Unit)","description":"dev.fritz2.core.RenderContext.renderIs","location":"core/dev.fritz2.core/-render-context/render-is.html","searchKeys":["renderIs","open fun <W : Any> Flow<*>.renderIs(klass: KClass<W>, into: Tag<HTMLElement>? = null, content: Tag<*>.(W) -> Unit)","dev.fritz2.core.RenderContext.renderIs"]},{"name":"open fun <X> map(lens: Lens<D, X>): Inspector<X>","description":"dev.fritz2.core.Inspector.map","location":"core/dev.fritz2.core/-inspector/map.html","searchKeys":["map","open fun <X> map(lens: Lens<D, X>): Inspector<X>","dev.fritz2.core.Inspector.map"]},{"name":"open fun <X> map(lens: Lens<D, X>): Store<X>","description":"dev.fritz2.core.Store.map","location":"core/dev.fritz2.core/-store/map.html","searchKeys":["map","open fun <X> map(lens: Lens<D, X>): Store<X>","dev.fritz2.core.Store.map"]},{"name":"open fun Flow<Boolean>.renderFalse(into: Tag<HTMLElement>? = null, content: Tag<*>.() -> Unit)","description":"dev.fritz2.core.RenderContext.renderFalse","location":"core/dev.fritz2.core/-render-context/render-false.html","searchKeys":["renderFalse","open fun Flow<Boolean>.renderFalse(into: Tag<HTMLElement>? = null, content: Tag<*>.() -> Unit)","dev.fritz2.core.RenderContext.renderFalse"]},{"name":"open fun Flow<Boolean>.renderTrue(into: Tag<HTMLElement>? = null, content: Tag<*>.() -> Unit)","description":"dev.fritz2.core.RenderContext.renderTrue","location":"core/dev.fritz2.core/-render-context/render-true.html","searchKeys":["renderTrue","open fun Flow<Boolean>.renderTrue(into: Tag<HTMLElement>? = null, content: Tag<*>.() -> Unit)","dev.fritz2.core.RenderContext.renderTrue"]},{"name":"open fun Flow<String>.renderText(into: Tag<*>? = null)","description":"dev.fritz2.core.Tag.renderText","location":"core/dev.fritz2.core/-tag/render-text.html","searchKeys":["renderText","open fun Flow<String>.renderText(into: Tag<*>? = null)","dev.fritz2.core.Tag.renderText"]},{"name":"open fun Response.stopPropagation(): Response","description":"dev.fritz2.remote.Middleware.stopPropagation","location":"core/dev.fritz2.remote/-middleware/stop-propagation.html","searchKeys":["stopPropagation","open fun Response.stopPropagation(): Response","dev.fritz2.remote.Middleware.stopPropagation"]},{"name":"open fun Scope.asDataAttr()","description":"dev.fritz2.core.Tag.asDataAttr","location":"core/dev.fritz2.core/-tag/as-data-attr.html","searchKeys":["asDataAttr","open fun Scope.asDataAttr()","dev.fritz2.core.Tag.asDataAttr"]},{"name":"open fun a(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLAnchorElement>.() -> Unit): HtmlTag<HTMLAnchorElement>","description":"dev.fritz2.core.RenderContext.a","location":"core/dev.fritz2.core/-render-context/a.html","searchKeys":["a","open fun a(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLAnchorElement>.() -> Unit): HtmlTag<HTMLAnchorElement>","dev.fritz2.core.RenderContext.a"]},{"name":"open fun abbr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.abbr","location":"core/dev.fritz2.core/-render-context/abbr.html","searchKeys":["abbr","open fun abbr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.abbr"]},{"name":"open fun aborts(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.aborts","location":"core/dev.fritz2.core/-with-events/aborts.html","searchKeys":["aborts","open fun aborts(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.aborts"]},{"name":"open fun abortsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.abortsCaptured","location":"core/dev.fritz2.core/-with-events/aborts-captured.html","searchKeys":["abortsCaptured","open fun abortsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.abortsCaptured"]},{"name":"open fun abortsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.abortsCapturedIf","location":"core/dev.fritz2.core/-with-events/aborts-captured-if.html","searchKeys":["abortsCapturedIf","open fun abortsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.abortsCapturedIf"]},{"name":"open fun abortsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.abortsIf","location":"core/dev.fritz2.core/-with-events/aborts-if.html","searchKeys":["abortsIf","open fun abortsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.abortsIf"]},{"name":"open fun address(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.address","location":"core/dev.fritz2.core/-render-context/address.html","searchKeys":["address","open fun address(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.address"]},{"name":"open fun adoptedCallback(element: HTMLElement)","description":"dev.fritz2.webcomponents.WebComponent.adoptedCallback","location":"core/dev.fritz2.webcomponents/-web-component/adopted-callback.html","searchKeys":["adoptedCallback","open fun adoptedCallback(element: HTMLElement)","dev.fritz2.webcomponents.WebComponent.adoptedCallback"]},{"name":"open fun afterprints(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.afterprints","location":"core/dev.fritz2.core/-with-events/afterprints.html","searchKeys":["afterprints","open fun afterprints(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.afterprints"]},{"name":"open fun afterprintsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.afterprintsCaptured","location":"core/dev.fritz2.core/-with-events/afterprints-captured.html","searchKeys":["afterprintsCaptured","open fun afterprintsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.afterprintsCaptured"]},{"name":"open fun afterprintsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.afterprintsCapturedIf","location":"core/dev.fritz2.core/-with-events/afterprints-captured-if.html","searchKeys":["afterprintsCapturedIf","open fun afterprintsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.afterprintsCapturedIf"]},{"name":"open fun afterprintsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.afterprintsIf","location":"core/dev.fritz2.core/-with-events/afterprints-if.html","searchKeys":["afterprintsIf","open fun afterprintsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.afterprintsIf"]},{"name":"open fun animationends(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationends","location":"core/dev.fritz2.core/-with-events/animationends.html","searchKeys":["animationends","open fun animationends(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.animationends"]},{"name":"open fun animationendsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationendsCaptured","location":"core/dev.fritz2.core/-with-events/animationends-captured.html","searchKeys":["animationendsCaptured","open fun animationendsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.animationendsCaptured"]},{"name":"open fun animationendsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationendsCapturedIf","location":"core/dev.fritz2.core/-with-events/animationends-captured-if.html","searchKeys":["animationendsCapturedIf","open fun animationendsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.animationendsCapturedIf"]},{"name":"open fun animationendsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationendsIf","location":"core/dev.fritz2.core/-with-events/animationends-if.html","searchKeys":["animationendsIf","open fun animationendsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.animationendsIf"]},{"name":"open fun animationiterations(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationiterations","location":"core/dev.fritz2.core/-with-events/animationiterations.html","searchKeys":["animationiterations","open fun animationiterations(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.animationiterations"]},{"name":"open fun animationiterationsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationiterationsCaptured","location":"core/dev.fritz2.core/-with-events/animationiterations-captured.html","searchKeys":["animationiterationsCaptured","open fun animationiterationsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.animationiterationsCaptured"]},{"name":"open fun animationiterationsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationiterationsCapturedIf","location":"core/dev.fritz2.core/-with-events/animationiterations-captured-if.html","searchKeys":["animationiterationsCapturedIf","open fun animationiterationsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.animationiterationsCapturedIf"]},{"name":"open fun animationiterationsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationiterationsIf","location":"core/dev.fritz2.core/-with-events/animationiterations-if.html","searchKeys":["animationiterationsIf","open fun animationiterationsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.animationiterationsIf"]},{"name":"open fun animationstarts(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationstarts","location":"core/dev.fritz2.core/-with-events/animationstarts.html","searchKeys":["animationstarts","open fun animationstarts(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.animationstarts"]},{"name":"open fun animationstartsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationstartsCaptured","location":"core/dev.fritz2.core/-with-events/animationstarts-captured.html","searchKeys":["animationstartsCaptured","open fun animationstartsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.animationstartsCaptured"]},{"name":"open fun animationstartsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationstartsCapturedIf","location":"core/dev.fritz2.core/-with-events/animationstarts-captured-if.html","searchKeys":["animationstartsCapturedIf","open fun animationstartsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.animationstartsCapturedIf"]},{"name":"open fun animationstartsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationstartsIf","location":"core/dev.fritz2.core/-with-events/animationstarts-if.html","searchKeys":["animationstartsIf","open fun animationstartsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.animationstartsIf"]},{"name":"open fun area(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLAreaElement>.() -> Unit): HtmlTag<HTMLAreaElement>","description":"dev.fritz2.core.RenderContext.area","location":"core/dev.fritz2.core/-render-context/area.html","searchKeys":["area","open fun area(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLAreaElement>.() -> Unit): HtmlTag<HTMLAreaElement>","dev.fritz2.core.RenderContext.area"]},{"name":"open fun article(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.article","location":"core/dev.fritz2.core/-render-context/article.html","searchKeys":["article","open fun article(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.article"]},{"name":"open fun aside(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.aside","location":"core/dev.fritz2.core/-render-context/aside.html","searchKeys":["aside","open fun aside(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.aside"]},{"name":"open fun attr(name: String, value: Boolean, trueValue: String = \"\")","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: Boolean, trueValue: String = \"\")","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: Boolean?, trueValue: String = \"\")","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: Boolean?, trueValue: String = \"\")","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: Flow<Boolean>, trueValue: String = \"\")","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: Flow<Boolean>, trueValue: String = \"\")","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: Flow<Boolean?>, trueValue: String = \"\")","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: Flow<Boolean?>, trueValue: String = \"\")","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: Flow<String>)","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: Flow<String>)","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: Flow<String?>)","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: Flow<String?>)","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: String)","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: String)","dev.fritz2.core.Tag.attr"]},{"name":"open fun attr(name: String, value: String?)","description":"dev.fritz2.core.Tag.attr","location":"core/dev.fritz2.core/-tag/attr.html","searchKeys":["attr","open fun attr(name: String, value: String?)","dev.fritz2.core.Tag.attr"]},{"name":"open fun audio(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLAudioElement>.() -> Unit): HtmlTag<HTMLAudioElement>","description":"dev.fritz2.core.RenderContext.audio","location":"core/dev.fritz2.core/-render-context/audio.html","searchKeys":["audio","open fun audio(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLAudioElement>.() -> Unit): HtmlTag<HTMLAudioElement>","dev.fritz2.core.RenderContext.audio"]},{"name":"open fun b(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.b","location":"core/dev.fritz2.core/-render-context/b.html","searchKeys":["b","open fun b(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.b"]},{"name":"open fun bdi(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.bdi","location":"core/dev.fritz2.core/-render-context/bdi.html","searchKeys":["bdi","open fun bdi(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.bdi"]},{"name":"open fun bdo(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.bdo","location":"core/dev.fritz2.core/-render-context/bdo.html","searchKeys":["bdo","open fun bdo(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.bdo"]},{"name":"open fun beforeprints(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeprints","location":"core/dev.fritz2.core/-with-events/beforeprints.html","searchKeys":["beforeprints","open fun beforeprints(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeprints"]},{"name":"open fun beforeprintsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeprintsCaptured","location":"core/dev.fritz2.core/-with-events/beforeprints-captured.html","searchKeys":["beforeprintsCaptured","open fun beforeprintsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeprintsCaptured"]},{"name":"open fun beforeprintsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeprintsCapturedIf","location":"core/dev.fritz2.core/-with-events/beforeprints-captured-if.html","searchKeys":["beforeprintsCapturedIf","open fun beforeprintsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeprintsCapturedIf"]},{"name":"open fun beforeprintsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeprintsIf","location":"core/dev.fritz2.core/-with-events/beforeprints-if.html","searchKeys":["beforeprintsIf","open fun beforeprintsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeprintsIf"]},{"name":"open fun beforeunloads(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeunloads","location":"core/dev.fritz2.core/-with-events/beforeunloads.html","searchKeys":["beforeunloads","open fun beforeunloads(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeunloads"]},{"name":"open fun beforeunloadsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeunloadsCaptured","location":"core/dev.fritz2.core/-with-events/beforeunloads-captured.html","searchKeys":["beforeunloadsCaptured","open fun beforeunloadsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeunloadsCaptured"]},{"name":"open fun beforeunloadsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeunloadsCapturedIf","location":"core/dev.fritz2.core/-with-events/beforeunloads-captured-if.html","searchKeys":["beforeunloadsCapturedIf","open fun beforeunloadsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeunloadsCapturedIf"]},{"name":"open fun beforeunloadsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeunloadsIf","location":"core/dev.fritz2.core/-with-events/beforeunloads-if.html","searchKeys":["beforeunloadsIf","open fun beforeunloadsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.beforeunloadsIf"]},{"name":"open fun blockquote(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLQuoteElement>.() -> Unit): HtmlTag<HTMLQuoteElement>","description":"dev.fritz2.core.RenderContext.blockquote","location":"core/dev.fritz2.core/-render-context/blockquote.html","searchKeys":["blockquote","open fun blockquote(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLQuoteElement>.() -> Unit): HtmlTag<HTMLQuoteElement>","dev.fritz2.core.RenderContext.blockquote"]},{"name":"open fun blurs(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.blurs","location":"core/dev.fritz2.core/-with-events/blurs.html","searchKeys":["blurs","open fun blurs(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.blurs"]},{"name":"open fun blursCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.blursCaptured","location":"core/dev.fritz2.core/-with-events/blurs-captured.html","searchKeys":["blursCaptured","open fun blursCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.blursCaptured"]},{"name":"open fun blursCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.blursCapturedIf","location":"core/dev.fritz2.core/-with-events/blurs-captured-if.html","searchKeys":["blursCapturedIf","open fun blursCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.blursCapturedIf"]},{"name":"open fun blursIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.blursIf","location":"core/dev.fritz2.core/-with-events/blurs-if.html","searchKeys":["blursIf","open fun blursIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.blursIf"]},{"name":"open fun br(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLBRElement>.() -> Unit): HtmlTag<HTMLBRElement>","description":"dev.fritz2.core.RenderContext.br","location":"core/dev.fritz2.core/-render-context/br.html","searchKeys":["br","open fun br(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLBRElement>.() -> Unit): HtmlTag<HTMLBRElement>","dev.fritz2.core.RenderContext.br"]},{"name":"open fun button(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLButtonElement>.() -> Unit): HtmlTag<HTMLButtonElement>","description":"dev.fritz2.core.RenderContext.button","location":"core/dev.fritz2.core/-render-context/button.html","searchKeys":["button","open fun button(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLButtonElement>.() -> Unit): HtmlTag<HTMLButtonElement>","dev.fritz2.core.RenderContext.button"]},{"name":"open fun canplays(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplays","location":"core/dev.fritz2.core/-with-events/canplays.html","searchKeys":["canplays","open fun canplays(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.canplays"]},{"name":"open fun canplaysCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaysCaptured","location":"core/dev.fritz2.core/-with-events/canplays-captured.html","searchKeys":["canplaysCaptured","open fun canplaysCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaysCaptured"]},{"name":"open fun canplaysCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaysCapturedIf","location":"core/dev.fritz2.core/-with-events/canplays-captured-if.html","searchKeys":["canplaysCapturedIf","open fun canplaysCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaysCapturedIf"]},{"name":"open fun canplaysIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaysIf","location":"core/dev.fritz2.core/-with-events/canplays-if.html","searchKeys":["canplaysIf","open fun canplaysIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaysIf"]},{"name":"open fun canplaythroughs(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaythroughs","location":"core/dev.fritz2.core/-with-events/canplaythroughs.html","searchKeys":["canplaythroughs","open fun canplaythroughs(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaythroughs"]},{"name":"open fun canplaythroughsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaythroughsCaptured","location":"core/dev.fritz2.core/-with-events/canplaythroughs-captured.html","searchKeys":["canplaythroughsCaptured","open fun canplaythroughsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaythroughsCaptured"]},{"name":"open fun canplaythroughsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaythroughsCapturedIf","location":"core/dev.fritz2.core/-with-events/canplaythroughs-captured-if.html","searchKeys":["canplaythroughsCapturedIf","open fun canplaythroughsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaythroughsCapturedIf"]},{"name":"open fun canplaythroughsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaythroughsIf","location":"core/dev.fritz2.core/-with-events/canplaythroughs-if.html","searchKeys":["canplaythroughsIf","open fun canplaythroughsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.canplaythroughsIf"]},{"name":"open fun canvas(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLCanvasElement>.() -> Unit): HtmlTag<HTMLCanvasElement>","description":"dev.fritz2.core.RenderContext.canvas","location":"core/dev.fritz2.core/-render-context/canvas.html","searchKeys":["canvas","open fun canvas(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLCanvasElement>.() -> Unit): HtmlTag<HTMLCanvasElement>","dev.fritz2.core.RenderContext.canvas"]},{"name":"open fun caption(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableCaptionElement>.() -> Unit): HtmlTag<HTMLTableCaptionElement>","description":"dev.fritz2.core.RenderContext.caption","location":"core/dev.fritz2.core/-render-context/caption.html","searchKeys":["caption","open fun caption(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableCaptionElement>.() -> Unit): HtmlTag<HTMLTableCaptionElement>","dev.fritz2.core.RenderContext.caption"]},{"name":"open fun changes(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.changes","location":"core/dev.fritz2.core/-with-events/changes.html","searchKeys":["changes","open fun changes(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.changes"]},{"name":"open fun changesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.changesCaptured","location":"core/dev.fritz2.core/-with-events/changes-captured.html","searchKeys":["changesCaptured","open fun changesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.changesCaptured"]},{"name":"open fun changesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.changesCapturedIf","location":"core/dev.fritz2.core/-with-events/changes-captured-if.html","searchKeys":["changesCapturedIf","open fun changesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.changesCapturedIf"]},{"name":"open fun changesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.changesIf","location":"core/dev.fritz2.core/-with-events/changes-if.html","searchKeys":["changesIf","open fun changesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.changesIf"]},{"name":"open fun cite(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.cite","location":"core/dev.fritz2.core/-render-context/cite.html","searchKeys":["cite","open fun cite(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.cite"]},{"name":"open fun classList(values: Flow<List<String>>)","description":"dev.fritz2.core.Tag.classList","location":"core/dev.fritz2.core/-tag/class-list.html","searchKeys":["classList","open fun classList(values: Flow<List<String>>)","dev.fritz2.core.Tag.classList"]},{"name":"open fun classList(values: List<String>)","description":"dev.fritz2.core.Tag.classList","location":"core/dev.fritz2.core/-tag/class-list.html","searchKeys":["classList","open fun classList(values: List<String>)","dev.fritz2.core.Tag.classList"]},{"name":"open fun classMap(values: Flow<Map<String, Boolean>>)","description":"dev.fritz2.core.Tag.classMap","location":"core/dev.fritz2.core/-tag/class-map.html","searchKeys":["classMap","open fun classMap(values: Flow<Map<String, Boolean>>)","dev.fritz2.core.Tag.classMap"]},{"name":"open fun classMap(values: Map<String, Boolean>)","description":"dev.fritz2.core.Tag.classMap","location":"core/dev.fritz2.core/-tag/class-map.html","searchKeys":["classMap","open fun classMap(values: Map<String, Boolean>)","dev.fritz2.core.Tag.classMap"]},{"name":"open fun clicks(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.clicks","location":"core/dev.fritz2.core/-with-events/clicks.html","searchKeys":["clicks","open fun clicks(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.clicks"]},{"name":"open fun clicksCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.clicksCaptured","location":"core/dev.fritz2.core/-with-events/clicks-captured.html","searchKeys":["clicksCaptured","open fun clicksCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.clicksCaptured"]},{"name":"open fun clicksCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.clicksCapturedIf","location":"core/dev.fritz2.core/-with-events/clicks-captured-if.html","searchKeys":["clicksCapturedIf","open fun clicksCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.clicksCapturedIf"]},{"name":"open fun clicksIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.clicksIf","location":"core/dev.fritz2.core/-with-events/clicks-if.html","searchKeys":["clicksIf","open fun clicksIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.clicksIf"]},{"name":"open fun code(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.code","location":"core/dev.fritz2.core/-render-context/code.html","searchKeys":["code","open fun code(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.code"]},{"name":"open fun col(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableColElement>.() -> Unit): HtmlTag<HTMLTableColElement>","description":"dev.fritz2.core.RenderContext.col","location":"core/dev.fritz2.core/-render-context/col.html","searchKeys":["col","open fun col(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableColElement>.() -> Unit): HtmlTag<HTMLTableColElement>","dev.fritz2.core.RenderContext.col"]},{"name":"open fun colgroup(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableColElement>.() -> Unit): HtmlTag<HTMLTableColElement>","description":"dev.fritz2.core.RenderContext.colgroup","location":"core/dev.fritz2.core/-render-context/colgroup.html","searchKeys":["colgroup","open fun colgroup(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableColElement>.() -> Unit): HtmlTag<HTMLTableColElement>","dev.fritz2.core.RenderContext.colgroup"]},{"name":"open fun command(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.command","location":"core/dev.fritz2.core/-render-context/command.html","searchKeys":["command","open fun command(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.command"]},{"name":"open fun connectedCallback(element: HTMLElement)","description":"dev.fritz2.webcomponents.WebComponent.connectedCallback","location":"core/dev.fritz2.webcomponents/-web-component/connected-callback.html","searchKeys":["connectedCallback","open fun connectedCallback(element: HTMLElement)","dev.fritz2.webcomponents.WebComponent.connectedCallback"]},{"name":"open fun contextmenus(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.contextmenus","location":"core/dev.fritz2.core/-with-events/contextmenus.html","searchKeys":["contextmenus","open fun contextmenus(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.contextmenus"]},{"name":"open fun contextmenusCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.contextmenusCaptured","location":"core/dev.fritz2.core/-with-events/contextmenus-captured.html","searchKeys":["contextmenusCaptured","open fun contextmenusCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.contextmenusCaptured"]},{"name":"open fun contextmenusCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.contextmenusCapturedIf","location":"core/dev.fritz2.core/-with-events/contextmenus-captured-if.html","searchKeys":["contextmenusCapturedIf","open fun contextmenusCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.contextmenusCapturedIf"]},{"name":"open fun contextmenusIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.contextmenusIf","location":"core/dev.fritz2.core/-with-events/contextmenus-if.html","searchKeys":["contextmenusIf","open fun contextmenusIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.contextmenusIf"]},{"name":"open fun copy(url: String = this.url, method: String = this.method, headers: Map<String, String> = this.headers, body: dynamic = this.body, referrer: String? = this.referrer, referrerPolicy: dynamic = this.referrerPolicy, mode: RequestMode? = this.mode, credentials: RequestCredentials? = this.credentials, cache: RequestCache? = this.cache, redirect: RequestRedirect? = this.redirect, integrity: String? = this.integrity, keepalive: Boolean? = this.keepalive, reqWindow: Any? = this.reqWindow, middlewares: List<Middleware> = this.middlewares): Request","description":"dev.fritz2.remote.Request.copy","location":"core/dev.fritz2.remote/-request/copy.html","searchKeys":["copy","open fun copy(url: String = this.url, method: String = this.method, headers: Map<String, String> = this.headers, body: dynamic = this.body, referrer: String? = this.referrer, referrerPolicy: dynamic = this.referrerPolicy, mode: RequestMode? = this.mode, credentials: RequestCredentials? = this.credentials, cache: RequestCache? = this.cache, redirect: RequestRedirect? = this.redirect, integrity: String? = this.integrity, keepalive: Boolean? = this.keepalive, reqWindow: Any? = this.reqWindow, middlewares: List<Middleware> = this.middlewares): Request","dev.fritz2.remote.Request.copy"]},{"name":"open fun copys(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.copys","location":"core/dev.fritz2.core/-with-events/copys.html","searchKeys":["copys","open fun copys(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.copys"]},{"name":"open fun copysCaptured(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.copysCaptured","location":"core/dev.fritz2.core/-with-events/copys-captured.html","searchKeys":["copysCaptured","open fun copysCaptured(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.copysCaptured"]},{"name":"open fun copysCapturedIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.copysCapturedIf","location":"core/dev.fritz2.core/-with-events/copys-captured-if.html","searchKeys":["copysCapturedIf","open fun copysCapturedIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.copysCapturedIf"]},{"name":"open fun copysIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.copysIf","location":"core/dev.fritz2.core/-with-events/copys-if.html","searchKeys":["copysIf","open fun copysIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.copysIf"]},{"name":"open fun custom(tagName: String, baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<Element>.() -> Unit): HtmlTag<Element>","description":"dev.fritz2.core.RenderContext.custom","location":"core/dev.fritz2.core/-render-context/custom.html","searchKeys":["custom","open fun custom(tagName: String, baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<Element>.() -> Unit): HtmlTag<Element>","dev.fritz2.core.RenderContext.custom"]},{"name":"open fun cuts(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.cuts","location":"core/dev.fritz2.core/-with-events/cuts.html","searchKeys":["cuts","open fun cuts(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.cuts"]},{"name":"open fun cutsCaptured(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.cutsCaptured","location":"core/dev.fritz2.core/-with-events/cuts-captured.html","searchKeys":["cutsCaptured","open fun cutsCaptured(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.cutsCaptured"]},{"name":"open fun cutsCapturedIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.cutsCapturedIf","location":"core/dev.fritz2.core/-with-events/cuts-captured-if.html","searchKeys":["cutsCapturedIf","open fun cutsCapturedIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.cutsCapturedIf"]},{"name":"open fun cutsIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.cutsIf","location":"core/dev.fritz2.core/-with-events/cuts-if.html","searchKeys":["cutsIf","open fun cutsIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.cutsIf"]},{"name":"open fun data(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDataElement>.() -> Unit): HtmlTag<HTMLDataElement>","description":"dev.fritz2.core.RenderContext.data","location":"core/dev.fritz2.core/-render-context/data.html","searchKeys":["data","open fun data(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDataElement>.() -> Unit): HtmlTag<HTMLDataElement>","dev.fritz2.core.RenderContext.data"]},{"name":"open fun datalist(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDataListElement>.() -> Unit): HtmlTag<HTMLDataListElement>","description":"dev.fritz2.core.RenderContext.datalist","location":"core/dev.fritz2.core/-render-context/datalist.html","searchKeys":["datalist","open fun datalist(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDataListElement>.() -> Unit): HtmlTag<HTMLDataListElement>","dev.fritz2.core.RenderContext.datalist"]},{"name":"open fun dblclicks(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.dblclicks","location":"core/dev.fritz2.core/-with-events/dblclicks.html","searchKeys":["dblclicks","open fun dblclicks(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.dblclicks"]},{"name":"open fun dblclicksCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.dblclicksCaptured","location":"core/dev.fritz2.core/-with-events/dblclicks-captured.html","searchKeys":["dblclicksCaptured","open fun dblclicksCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.dblclicksCaptured"]},{"name":"open fun dblclicksCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.dblclicksCapturedIf","location":"core/dev.fritz2.core/-with-events/dblclicks-captured-if.html","searchKeys":["dblclicksCapturedIf","open fun dblclicksCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.dblclicksCapturedIf"]},{"name":"open fun dblclicksIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.dblclicksIf","location":"core/dev.fritz2.core/-with-events/dblclicks-if.html","searchKeys":["dblclicksIf","open fun dblclicksIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.dblclicksIf"]},{"name":"open fun dd(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSpanElement>.() -> Unit): HtmlTag<HTMLSpanElement>","description":"dev.fritz2.core.RenderContext.dd","location":"core/dev.fritz2.core/-render-context/dd.html","searchKeys":["dd","open fun dd(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSpanElement>.() -> Unit): HtmlTag<HTMLSpanElement>","dev.fritz2.core.RenderContext.dd"]},{"name":"open fun del(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLModElement>.() -> Unit): HtmlTag<HTMLModElement>","description":"dev.fritz2.core.RenderContext.del","location":"core/dev.fritz2.core/-render-context/del.html","searchKeys":["del","open fun del(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLModElement>.() -> Unit): HtmlTag<HTMLModElement>","dev.fritz2.core.RenderContext.del"]},{"name":"open fun details(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDetailsElement>.() -> Unit): HtmlTag<HTMLDetailsElement>","description":"dev.fritz2.core.RenderContext.details","location":"core/dev.fritz2.core/-render-context/details.html","searchKeys":["details","open fun details(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDetailsElement>.() -> Unit): HtmlTag<HTMLDetailsElement>","dev.fritz2.core.RenderContext.details"]},{"name":"open fun dfn(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.dfn","location":"core/dev.fritz2.core/-render-context/dfn.html","searchKeys":["dfn","open fun dfn(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.dfn"]},{"name":"open fun dialog(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDialogElement>.() -> Unit): HtmlTag<HTMLDialogElement>","description":"dev.fritz2.core.RenderContext.dialog","location":"core/dev.fritz2.core/-render-context/dialog.html","searchKeys":["dialog","open fun dialog(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDialogElement>.() -> Unit): HtmlTag<HTMLDialogElement>","dev.fritz2.core.RenderContext.dialog"]},{"name":"open fun disconnectedCallback(element: HTMLElement)","description":"dev.fritz2.webcomponents.WebComponent.disconnectedCallback","location":"core/dev.fritz2.webcomponents/-web-component/disconnected-callback.html","searchKeys":["disconnectedCallback","open fun disconnectedCallback(element: HTMLElement)","dev.fritz2.webcomponents.WebComponent.disconnectedCallback"]},{"name":"open fun div(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDivElement>.() -> Unit): HtmlTag<HTMLDivElement>","description":"dev.fritz2.core.RenderContext.div","location":"core/dev.fritz2.core/-render-context/div.html","searchKeys":["div","open fun div(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDivElement>.() -> Unit): HtmlTag<HTMLDivElement>","dev.fritz2.core.RenderContext.div"]},{"name":"open fun dl(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDListElement>.() -> Unit): HtmlTag<HTMLDListElement>","description":"dev.fritz2.core.RenderContext.dl","location":"core/dev.fritz2.core/-render-context/dl.html","searchKeys":["dl","open fun dl(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLDListElement>.() -> Unit): HtmlTag<HTMLDListElement>","dev.fritz2.core.RenderContext.dl"]},{"name":"open fun dragends(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragends","location":"core/dev.fritz2.core/-with-events/dragends.html","searchKeys":["dragends","open fun dragends(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragends"]},{"name":"open fun dragendsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragendsCaptured","location":"core/dev.fritz2.core/-with-events/dragends-captured.html","searchKeys":["dragendsCaptured","open fun dragendsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragendsCaptured"]},{"name":"open fun dragendsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragendsCapturedIf","location":"core/dev.fritz2.core/-with-events/dragends-captured-if.html","searchKeys":["dragendsCapturedIf","open fun dragendsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragendsCapturedIf"]},{"name":"open fun dragendsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragendsIf","location":"core/dev.fritz2.core/-with-events/dragends-if.html","searchKeys":["dragendsIf","open fun dragendsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragendsIf"]},{"name":"open fun dragenters(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragenters","location":"core/dev.fritz2.core/-with-events/dragenters.html","searchKeys":["dragenters","open fun dragenters(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragenters"]},{"name":"open fun dragentersCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragentersCaptured","location":"core/dev.fritz2.core/-with-events/dragenters-captured.html","searchKeys":["dragentersCaptured","open fun dragentersCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragentersCaptured"]},{"name":"open fun dragentersCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragentersCapturedIf","location":"core/dev.fritz2.core/-with-events/dragenters-captured-if.html","searchKeys":["dragentersCapturedIf","open fun dragentersCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragentersCapturedIf"]},{"name":"open fun dragentersIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragentersIf","location":"core/dev.fritz2.core/-with-events/dragenters-if.html","searchKeys":["dragentersIf","open fun dragentersIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragentersIf"]},{"name":"open fun dragleaves(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragleaves","location":"core/dev.fritz2.core/-with-events/dragleaves.html","searchKeys":["dragleaves","open fun dragleaves(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragleaves"]},{"name":"open fun dragleavesCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragleavesCaptured","location":"core/dev.fritz2.core/-with-events/dragleaves-captured.html","searchKeys":["dragleavesCaptured","open fun dragleavesCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragleavesCaptured"]},{"name":"open fun dragleavesCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragleavesCapturedIf","location":"core/dev.fritz2.core/-with-events/dragleaves-captured-if.html","searchKeys":["dragleavesCapturedIf","open fun dragleavesCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragleavesCapturedIf"]},{"name":"open fun dragleavesIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragleavesIf","location":"core/dev.fritz2.core/-with-events/dragleaves-if.html","searchKeys":["dragleavesIf","open fun dragleavesIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragleavesIf"]},{"name":"open fun dragovers(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragovers","location":"core/dev.fritz2.core/-with-events/dragovers.html","searchKeys":["dragovers","open fun dragovers(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragovers"]},{"name":"open fun dragoversCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragoversCaptured","location":"core/dev.fritz2.core/-with-events/dragovers-captured.html","searchKeys":["dragoversCaptured","open fun dragoversCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragoversCaptured"]},{"name":"open fun dragoversCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragoversCapturedIf","location":"core/dev.fritz2.core/-with-events/dragovers-captured-if.html","searchKeys":["dragoversCapturedIf","open fun dragoversCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragoversCapturedIf"]},{"name":"open fun dragoversIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragoversIf","location":"core/dev.fritz2.core/-with-events/dragovers-if.html","searchKeys":["dragoversIf","open fun dragoversIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragoversIf"]},{"name":"open fun drags(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.drags","location":"core/dev.fritz2.core/-with-events/drags.html","searchKeys":["drags","open fun drags(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.drags"]},{"name":"open fun dragsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragsCaptured","location":"core/dev.fritz2.core/-with-events/drags-captured.html","searchKeys":["dragsCaptured","open fun dragsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragsCaptured"]},{"name":"open fun dragsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragsCapturedIf","location":"core/dev.fritz2.core/-with-events/drags-captured-if.html","searchKeys":["dragsCapturedIf","open fun dragsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragsCapturedIf"]},{"name":"open fun dragsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragsIf","location":"core/dev.fritz2.core/-with-events/drags-if.html","searchKeys":["dragsIf","open fun dragsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragsIf"]},{"name":"open fun dragstarts(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragstarts","location":"core/dev.fritz2.core/-with-events/dragstarts.html","searchKeys":["dragstarts","open fun dragstarts(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragstarts"]},{"name":"open fun dragstartsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragstartsCaptured","location":"core/dev.fritz2.core/-with-events/dragstarts-captured.html","searchKeys":["dragstartsCaptured","open fun dragstartsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragstartsCaptured"]},{"name":"open fun dragstartsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragstartsCapturedIf","location":"core/dev.fritz2.core/-with-events/dragstarts-captured-if.html","searchKeys":["dragstartsCapturedIf","open fun dragstartsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragstartsCapturedIf"]},{"name":"open fun dragstartsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragstartsIf","location":"core/dev.fritz2.core/-with-events/dragstarts-if.html","searchKeys":["dragstartsIf","open fun dragstartsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragstartsIf"]},{"name":"open fun drops(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.drops","location":"core/dev.fritz2.core/-with-events/drops.html","searchKeys":["drops","open fun drops(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.drops"]},{"name":"open fun dropsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dropsCaptured","location":"core/dev.fritz2.core/-with-events/drops-captured.html","searchKeys":["dropsCaptured","open fun dropsCaptured(init: DragEvent.() -> Unit): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dropsCaptured"]},{"name":"open fun dropsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dropsCapturedIf","location":"core/dev.fritz2.core/-with-events/drops-captured-if.html","searchKeys":["dropsCapturedIf","open fun dropsCapturedIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dropsCapturedIf"]},{"name":"open fun dropsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dropsIf","location":"core/dev.fritz2.core/-with-events/drops-if.html","searchKeys":["dropsIf","open fun dropsIf(selector: DragEvent.() -> Boolean): Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dropsIf"]},{"name":"open fun dt(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSpanElement>.() -> Unit): HtmlTag<HTMLSpanElement>","description":"dev.fritz2.core.RenderContext.dt","location":"core/dev.fritz2.core/-render-context/dt.html","searchKeys":["dt","open fun dt(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSpanElement>.() -> Unit): HtmlTag<HTMLSpanElement>","dev.fritz2.core.RenderContext.dt"]},{"name":"open fun durationchanges(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.durationchanges","location":"core/dev.fritz2.core/-with-events/durationchanges.html","searchKeys":["durationchanges","open fun durationchanges(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.durationchanges"]},{"name":"open fun durationchangesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.durationchangesCaptured","location":"core/dev.fritz2.core/-with-events/durationchanges-captured.html","searchKeys":["durationchangesCaptured","open fun durationchangesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.durationchangesCaptured"]},{"name":"open fun durationchangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.durationchangesCapturedIf","location":"core/dev.fritz2.core/-with-events/durationchanges-captured-if.html","searchKeys":["durationchangesCapturedIf","open fun durationchangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.durationchangesCapturedIf"]},{"name":"open fun durationchangesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.durationchangesIf","location":"core/dev.fritz2.core/-with-events/durationchanges-if.html","searchKeys":["durationchangesIf","open fun durationchangesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.durationchangesIf"]},{"name":"open fun em(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.em","location":"core/dev.fritz2.core/-render-context/em.html","searchKeys":["em","open fun em(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.em"]},{"name":"open fun embed(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLEmbedElement>.() -> Unit): HtmlTag<HTMLEmbedElement>","description":"dev.fritz2.core.RenderContext.embed","location":"core/dev.fritz2.core/-render-context/embed.html","searchKeys":["embed","open fun embed(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLEmbedElement>.() -> Unit): HtmlTag<HTMLEmbedElement>","dev.fritz2.core.RenderContext.embed"]},{"name":"open fun endeds(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.endeds","location":"core/dev.fritz2.core/-with-events/endeds.html","searchKeys":["endeds","open fun endeds(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.endeds"]},{"name":"open fun endedsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.endedsCaptured","location":"core/dev.fritz2.core/-with-events/endeds-captured.html","searchKeys":["endedsCaptured","open fun endedsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.endedsCaptured"]},{"name":"open fun endedsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.endedsCapturedIf","location":"core/dev.fritz2.core/-with-events/endeds-captured-if.html","searchKeys":["endedsCapturedIf","open fun endedsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.endedsCapturedIf"]},{"name":"open fun endedsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.endedsIf","location":"core/dev.fritz2.core/-with-events/endeds-if.html","searchKeys":["endedsIf","open fun endedsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.endedsIf"]},{"name":"open fun errorHandler(cause: Throwable)","description":"dev.fritz2.core.Store.errorHandler","location":"core/dev.fritz2.core/-store/error-handler.html","searchKeys":["errorHandler","open fun errorHandler(cause: Throwable)","dev.fritz2.core.Store.errorHandler"]},{"name":"open fun errorHandler(cause: Throwable)","description":"dev.fritz2.core.WithJob.errorHandler","location":"core/dev.fritz2.core/-with-job/error-handler.html","searchKeys":["errorHandler","open fun errorHandler(cause: Throwable)","dev.fritz2.core.WithJob.errorHandler"]},{"name":"open fun errors(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.errors","location":"core/dev.fritz2.core/-with-events/errors.html","searchKeys":["errors","open fun errors(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.errors"]},{"name":"open fun errorsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.errorsCaptured","location":"core/dev.fritz2.core/-with-events/errors-captured.html","searchKeys":["errorsCaptured","open fun errorsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.errorsCaptured"]},{"name":"open fun errorsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.errorsCapturedIf","location":"core/dev.fritz2.core/-with-events/errors-captured-if.html","searchKeys":["errorsCapturedIf","open fun errorsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.errorsCapturedIf"]},{"name":"open fun errorsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.errorsIf","location":"core/dev.fritz2.core/-with-events/errors-if.html","searchKeys":["errorsIf","open fun errorsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.errorsIf"]},{"name":"open fun fieldset(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLFieldSetElement>.() -> Unit): HtmlTag<HTMLFieldSetElement>","description":"dev.fritz2.core.RenderContext.fieldset","location":"core/dev.fritz2.core/-render-context/fieldset.html","searchKeys":["fieldset","open fun fieldset(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLFieldSetElement>.() -> Unit): HtmlTag<HTMLFieldSetElement>","dev.fritz2.core.RenderContext.fieldset"]},{"name":"open fun figcaption(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.figcaption","location":"core/dev.fritz2.core/-render-context/figcaption.html","searchKeys":["figcaption","open fun figcaption(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.figcaption"]},{"name":"open fun figure(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.figure","location":"core/dev.fritz2.core/-render-context/figure.html","searchKeys":["figure","open fun figure(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.figure"]},{"name":"open fun focusins(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusins","location":"core/dev.fritz2.core/-with-events/focusins.html","searchKeys":["focusins","open fun focusins(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusins"]},{"name":"open fun focusinsCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusinsCaptured","location":"core/dev.fritz2.core/-with-events/focusins-captured.html","searchKeys":["focusinsCaptured","open fun focusinsCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusinsCaptured"]},{"name":"open fun focusinsCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusinsCapturedIf","location":"core/dev.fritz2.core/-with-events/focusins-captured-if.html","searchKeys":["focusinsCapturedIf","open fun focusinsCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusinsCapturedIf"]},{"name":"open fun focusinsIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusinsIf","location":"core/dev.fritz2.core/-with-events/focusins-if.html","searchKeys":["focusinsIf","open fun focusinsIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusinsIf"]},{"name":"open fun focusouts(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusouts","location":"core/dev.fritz2.core/-with-events/focusouts.html","searchKeys":["focusouts","open fun focusouts(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusouts"]},{"name":"open fun focusoutsCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusoutsCaptured","location":"core/dev.fritz2.core/-with-events/focusouts-captured.html","searchKeys":["focusoutsCaptured","open fun focusoutsCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusoutsCaptured"]},{"name":"open fun focusoutsCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusoutsCapturedIf","location":"core/dev.fritz2.core/-with-events/focusouts-captured-if.html","searchKeys":["focusoutsCapturedIf","open fun focusoutsCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusoutsCapturedIf"]},{"name":"open fun focusoutsIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusoutsIf","location":"core/dev.fritz2.core/-with-events/focusouts-if.html","searchKeys":["focusoutsIf","open fun focusoutsIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusoutsIf"]},{"name":"open fun focuss(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focuss","location":"core/dev.fritz2.core/-with-events/focuss.html","searchKeys":["focuss","open fun focuss(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focuss"]},{"name":"open fun focussCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focussCaptured","location":"core/dev.fritz2.core/-with-events/focuss-captured.html","searchKeys":["focussCaptured","open fun focussCaptured(init: FocusEvent.() -> Unit): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focussCaptured"]},{"name":"open fun focussCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focussCapturedIf","location":"core/dev.fritz2.core/-with-events/focuss-captured-if.html","searchKeys":["focussCapturedIf","open fun focussCapturedIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focussCapturedIf"]},{"name":"open fun focussIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focussIf","location":"core/dev.fritz2.core/-with-events/focuss-if.html","searchKeys":["focussIf","open fun focussIf(selector: FocusEvent.() -> Boolean): Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focussIf"]},{"name":"open fun footer(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.footer","location":"core/dev.fritz2.core/-render-context/footer.html","searchKeys":["footer","open fun footer(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.footer"]},{"name":"open fun form(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLFormElement>.() -> Unit): HtmlTag<HTMLFormElement>","description":"dev.fritz2.core.RenderContext.form","location":"core/dev.fritz2.core/-render-context/form.html","searchKeys":["form","open fun form(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLFormElement>.() -> Unit): HtmlTag<HTMLFormElement>","dev.fritz2.core.RenderContext.form"]},{"name":"open fun fullscreenchanges(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenchanges","location":"core/dev.fritz2.core/-with-events/fullscreenchanges.html","searchKeys":["fullscreenchanges","open fun fullscreenchanges(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenchanges"]},{"name":"open fun fullscreenchangesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenchangesCaptured","location":"core/dev.fritz2.core/-with-events/fullscreenchanges-captured.html","searchKeys":["fullscreenchangesCaptured","open fun fullscreenchangesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenchangesCaptured"]},{"name":"open fun fullscreenchangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenchangesCapturedIf","location":"core/dev.fritz2.core/-with-events/fullscreenchanges-captured-if.html","searchKeys":["fullscreenchangesCapturedIf","open fun fullscreenchangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenchangesCapturedIf"]},{"name":"open fun fullscreenchangesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenchangesIf","location":"core/dev.fritz2.core/-with-events/fullscreenchanges-if.html","searchKeys":["fullscreenchangesIf","open fun fullscreenchangesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenchangesIf"]},{"name":"open fun fullscreenerrors(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenerrors","location":"core/dev.fritz2.core/-with-events/fullscreenerrors.html","searchKeys":["fullscreenerrors","open fun fullscreenerrors(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenerrors"]},{"name":"open fun fullscreenerrorsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenerrorsCaptured","location":"core/dev.fritz2.core/-with-events/fullscreenerrors-captured.html","searchKeys":["fullscreenerrorsCaptured","open fun fullscreenerrorsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenerrorsCaptured"]},{"name":"open fun fullscreenerrorsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenerrorsCapturedIf","location":"core/dev.fritz2.core/-with-events/fullscreenerrors-captured-if.html","searchKeys":["fullscreenerrorsCapturedIf","open fun fullscreenerrorsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenerrorsCapturedIf"]},{"name":"open fun fullscreenerrorsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenerrorsIf","location":"core/dev.fritz2.core/-with-events/fullscreenerrors-if.html","searchKeys":["fullscreenerrorsIf","open fun fullscreenerrorsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenerrorsIf"]},{"name":"open fun h1(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","description":"dev.fritz2.core.RenderContext.h1","location":"core/dev.fritz2.core/-render-context/h1.html","searchKeys":["h1","open fun h1(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","dev.fritz2.core.RenderContext.h1"]},{"name":"open fun h2(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","description":"dev.fritz2.core.RenderContext.h2","location":"core/dev.fritz2.core/-render-context/h2.html","searchKeys":["h2","open fun h2(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","dev.fritz2.core.RenderContext.h2"]},{"name":"open fun h3(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","description":"dev.fritz2.core.RenderContext.h3","location":"core/dev.fritz2.core/-render-context/h3.html","searchKeys":["h3","open fun h3(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","dev.fritz2.core.RenderContext.h3"]},{"name":"open fun h4(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","description":"dev.fritz2.core.RenderContext.h4","location":"core/dev.fritz2.core/-render-context/h4.html","searchKeys":["h4","open fun h4(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","dev.fritz2.core.RenderContext.h4"]},{"name":"open fun h5(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","description":"dev.fritz2.core.RenderContext.h5","location":"core/dev.fritz2.core/-render-context/h5.html","searchKeys":["h5","open fun h5(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","dev.fritz2.core.RenderContext.h5"]},{"name":"open fun h6(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","description":"dev.fritz2.core.RenderContext.h6","location":"core/dev.fritz2.core/-render-context/h6.html","searchKeys":["h6","open fun h6(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHeadingElement>.() -> Unit): HtmlTag<HTMLHeadingElement>","dev.fritz2.core.RenderContext.h6"]},{"name":"open fun handle(execute: suspend (D) -> D): SimpleHandler<Unit>","description":"dev.fritz2.core.Store.handle","location":"core/dev.fritz2.core/-store/handle.html","searchKeys":["handle","open fun handle(execute: suspend (D) -> D): SimpleHandler<Unit>","dev.fritz2.core.Store.handle"]},{"name":"open fun hashchanges(init: HashChangeEvent.() -> Unit): Listener<HashChangeEvent, T>","description":"dev.fritz2.core.WithEvents.hashchanges","location":"core/dev.fritz2.core/-with-events/hashchanges.html","searchKeys":["hashchanges","open fun hashchanges(init: HashChangeEvent.() -> Unit): Listener<HashChangeEvent, T>","dev.fritz2.core.WithEvents.hashchanges"]},{"name":"open fun hashchangesCaptured(init: HashChangeEvent.() -> Unit): Listener<HashChangeEvent, T>","description":"dev.fritz2.core.WithEvents.hashchangesCaptured","location":"core/dev.fritz2.core/-with-events/hashchanges-captured.html","searchKeys":["hashchangesCaptured","open fun hashchangesCaptured(init: HashChangeEvent.() -> Unit): Listener<HashChangeEvent, T>","dev.fritz2.core.WithEvents.hashchangesCaptured"]},{"name":"open fun hashchangesCapturedIf(selector: HashChangeEvent.() -> Boolean): Listener<HashChangeEvent, T>","description":"dev.fritz2.core.WithEvents.hashchangesCapturedIf","location":"core/dev.fritz2.core/-with-events/hashchanges-captured-if.html","searchKeys":["hashchangesCapturedIf","open fun hashchangesCapturedIf(selector: HashChangeEvent.() -> Boolean): Listener<HashChangeEvent, T>","dev.fritz2.core.WithEvents.hashchangesCapturedIf"]},{"name":"open fun hashchangesIf(selector: HashChangeEvent.() -> Boolean): Listener<HashChangeEvent, T>","description":"dev.fritz2.core.WithEvents.hashchangesIf","location":"core/dev.fritz2.core/-with-events/hashchanges-if.html","searchKeys":["hashchangesIf","open fun hashchangesIf(selector: HashChangeEvent.() -> Boolean): Listener<HashChangeEvent, T>","dev.fritz2.core.WithEvents.hashchangesIf"]},{"name":"open fun header(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.header","location":"core/dev.fritz2.core/-render-context/header.html","searchKeys":["header","open fun header(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.header"]},{"name":"open fun hr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHRElement>.() -> Unit): HtmlTag<HTMLHRElement>","description":"dev.fritz2.core.RenderContext.hr","location":"core/dev.fritz2.core/-render-context/hr.html","searchKeys":["hr","open fun hr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLHRElement>.() -> Unit): HtmlTag<HTMLHRElement>","dev.fritz2.core.RenderContext.hr"]},{"name":"open fun i(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.i","location":"core/dev.fritz2.core/-render-context/i.html","searchKeys":["i","open fun i(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.i"]},{"name":"open fun iframe(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLIFrameElement>.() -> Unit): HtmlTag<HTMLIFrameElement>","description":"dev.fritz2.core.RenderContext.iframe","location":"core/dev.fritz2.core/-render-context/iframe.html","searchKeys":["iframe","open fun iframe(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLIFrameElement>.() -> Unit): HtmlTag<HTMLIFrameElement>","dev.fritz2.core.RenderContext.iframe"]},{"name":"open fun img(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLImageElement>.() -> Unit): HtmlTag<HTMLImageElement>","description":"dev.fritz2.core.RenderContext.img","location":"core/dev.fritz2.core/-render-context/img.html","searchKeys":["img","open fun img(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLImageElement>.() -> Unit): HtmlTag<HTMLImageElement>","dev.fritz2.core.RenderContext.img"]},{"name":"open fun inlineStyle(value: Flow<String>)","description":"dev.fritz2.core.Tag.inlineStyle","location":"core/dev.fritz2.core/-tag/inline-style.html","searchKeys":["inlineStyle","open fun inlineStyle(value: Flow<String>)","dev.fritz2.core.Tag.inlineStyle"]},{"name":"open fun inlineStyle(value: String)","description":"dev.fritz2.core.Tag.inlineStyle","location":"core/dev.fritz2.core/-tag/inline-style.html","searchKeys":["inlineStyle","open fun inlineStyle(value: String)","dev.fritz2.core.Tag.inlineStyle"]},{"name":"open fun input(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLInputElement>.() -> Unit): HtmlTag<HTMLInputElement>","description":"dev.fritz2.core.RenderContext.input","location":"core/dev.fritz2.core/-render-context/input.html","searchKeys":["input","open fun input(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLInputElement>.() -> Unit): HtmlTag<HTMLInputElement>","dev.fritz2.core.RenderContext.input"]},{"name":"open fun inputs(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.inputs","location":"core/dev.fritz2.core/-with-events/inputs.html","searchKeys":["inputs","open fun inputs(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.inputs"]},{"name":"open fun inputsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.inputsCaptured","location":"core/dev.fritz2.core/-with-events/inputs-captured.html","searchKeys":["inputsCaptured","open fun inputsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.inputsCaptured"]},{"name":"open fun inputsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.inputsCapturedIf","location":"core/dev.fritz2.core/-with-events/inputs-captured-if.html","searchKeys":["inputsCapturedIf","open fun inputsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.inputsCapturedIf"]},{"name":"open fun inputsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.inputsIf","location":"core/dev.fritz2.core/-with-events/inputs-if.html","searchKeys":["inputsIf","open fun inputsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.inputsIf"]},{"name":"open fun ins(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLModElement>.() -> Unit): HtmlTag<HTMLModElement>","description":"dev.fritz2.core.RenderContext.ins","location":"core/dev.fritz2.core/-render-context/ins.html","searchKeys":["ins","open fun ins(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLModElement>.() -> Unit): HtmlTag<HTMLModElement>","dev.fritz2.core.RenderContext.ins"]},{"name":"open fun invalids(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.invalids","location":"core/dev.fritz2.core/-with-events/invalids.html","searchKeys":["invalids","open fun invalids(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.invalids"]},{"name":"open fun invalidsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.invalidsCaptured","location":"core/dev.fritz2.core/-with-events/invalids-captured.html","searchKeys":["invalidsCaptured","open fun invalidsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.invalidsCaptured"]},{"name":"open fun invalidsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.invalidsCapturedIf","location":"core/dev.fritz2.core/-with-events/invalids-captured-if.html","searchKeys":["invalidsCapturedIf","open fun invalidsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.invalidsCapturedIf"]},{"name":"open fun invalidsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.invalidsIf","location":"core/dev.fritz2.core/-with-events/invalids-if.html","searchKeys":["invalidsIf","open fun invalidsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.invalidsIf"]},{"name":"open fun kbd(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.kbd","location":"core/dev.fritz2.core/-render-context/kbd.html","searchKeys":["kbd","open fun kbd(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.kbd"]},{"name":"open fun keydowns(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keydowns","location":"core/dev.fritz2.core/-with-events/keydowns.html","searchKeys":["keydowns","open fun keydowns(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keydowns"]},{"name":"open fun keydownsCaptured(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keydownsCaptured","location":"core/dev.fritz2.core/-with-events/keydowns-captured.html","searchKeys":["keydownsCaptured","open fun keydownsCaptured(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keydownsCaptured"]},{"name":"open fun keydownsCapturedIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keydownsCapturedIf","location":"core/dev.fritz2.core/-with-events/keydowns-captured-if.html","searchKeys":["keydownsCapturedIf","open fun keydownsCapturedIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keydownsCapturedIf"]},{"name":"open fun keydownsIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keydownsIf","location":"core/dev.fritz2.core/-with-events/keydowns-if.html","searchKeys":["keydownsIf","open fun keydownsIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keydownsIf"]},{"name":"open fun keypresss(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keypresss","location":"core/dev.fritz2.core/-with-events/keypresss.html","searchKeys":["keypresss","open fun keypresss(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keypresss"]},{"name":"open fun keypresssCaptured(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keypresssCaptured","location":"core/dev.fritz2.core/-with-events/keypresss-captured.html","searchKeys":["keypresssCaptured","open fun keypresssCaptured(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keypresssCaptured"]},{"name":"open fun keypresssCapturedIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keypresssCapturedIf","location":"core/dev.fritz2.core/-with-events/keypresss-captured-if.html","searchKeys":["keypresssCapturedIf","open fun keypresssCapturedIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keypresssCapturedIf"]},{"name":"open fun keypresssIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keypresssIf","location":"core/dev.fritz2.core/-with-events/keypresss-if.html","searchKeys":["keypresssIf","open fun keypresssIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keypresssIf"]},{"name":"open fun keyups(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keyups","location":"core/dev.fritz2.core/-with-events/keyups.html","searchKeys":["keyups","open fun keyups(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keyups"]},{"name":"open fun keyupsCaptured(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keyupsCaptured","location":"core/dev.fritz2.core/-with-events/keyups-captured.html","searchKeys":["keyupsCaptured","open fun keyupsCaptured(init: KeyboardEvent.() -> Unit): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keyupsCaptured"]},{"name":"open fun keyupsCapturedIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keyupsCapturedIf","location":"core/dev.fritz2.core/-with-events/keyups-captured-if.html","searchKeys":["keyupsCapturedIf","open fun keyupsCapturedIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keyupsCapturedIf"]},{"name":"open fun keyupsIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keyupsIf","location":"core/dev.fritz2.core/-with-events/keyups-if.html","searchKeys":["keyupsIf","open fun keyupsIf(selector: KeyboardEvent.() -> Boolean): Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keyupsIf"]},{"name":"open fun label(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLLabelElement>.() -> Unit): HtmlTag<HTMLLabelElement>","description":"dev.fritz2.core.RenderContext.label","location":"core/dev.fritz2.core/-render-context/label.html","searchKeys":["label","open fun label(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLLabelElement>.() -> Unit): HtmlTag<HTMLLabelElement>","dev.fritz2.core.RenderContext.label"]},{"name":"open fun legend(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLLegendElement>.() -> Unit): HtmlTag<HTMLLegendElement>","description":"dev.fritz2.core.RenderContext.legend","location":"core/dev.fritz2.core/-render-context/legend.html","searchKeys":["legend","open fun legend(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLLegendElement>.() -> Unit): HtmlTag<HTMLLegendElement>","dev.fritz2.core.RenderContext.legend"]},{"name":"open fun li(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLLIElement>.() -> Unit): HtmlTag<HTMLLIElement>","description":"dev.fritz2.core.RenderContext.li","location":"core/dev.fritz2.core/-render-context/li.html","searchKeys":["li","open fun li(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLLIElement>.() -> Unit): HtmlTag<HTMLLIElement>","dev.fritz2.core.RenderContext.li"]},{"name":"open fun loadeddatas(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadeddatas","location":"core/dev.fritz2.core/-with-events/loadeddatas.html","searchKeys":["loadeddatas","open fun loadeddatas(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.loadeddatas"]},{"name":"open fun loadeddatasCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadeddatasCaptured","location":"core/dev.fritz2.core/-with-events/loadeddatas-captured.html","searchKeys":["loadeddatasCaptured","open fun loadeddatasCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.loadeddatasCaptured"]},{"name":"open fun loadeddatasCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadeddatasCapturedIf","location":"core/dev.fritz2.core/-with-events/loadeddatas-captured-if.html","searchKeys":["loadeddatasCapturedIf","open fun loadeddatasCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.loadeddatasCapturedIf"]},{"name":"open fun loadeddatasIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadeddatasIf","location":"core/dev.fritz2.core/-with-events/loadeddatas-if.html","searchKeys":["loadeddatasIf","open fun loadeddatasIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.loadeddatasIf"]},{"name":"open fun loadedmetadatas(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadedmetadatas","location":"core/dev.fritz2.core/-with-events/loadedmetadatas.html","searchKeys":["loadedmetadatas","open fun loadedmetadatas(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.loadedmetadatas"]},{"name":"open fun loadedmetadatasCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadedmetadatasCaptured","location":"core/dev.fritz2.core/-with-events/loadedmetadatas-captured.html","searchKeys":["loadedmetadatasCaptured","open fun loadedmetadatasCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.loadedmetadatasCaptured"]},{"name":"open fun loadedmetadatasCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadedmetadatasCapturedIf","location":"core/dev.fritz2.core/-with-events/loadedmetadatas-captured-if.html","searchKeys":["loadedmetadatasCapturedIf","open fun loadedmetadatasCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.loadedmetadatasCapturedIf"]},{"name":"open fun loadedmetadatasIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadedmetadatasIf","location":"core/dev.fritz2.core/-with-events/loadedmetadatas-if.html","searchKeys":["loadedmetadatasIf","open fun loadedmetadatasIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.loadedmetadatasIf"]},{"name":"open fun loads(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loads","location":"core/dev.fritz2.core/-with-events/loads.html","searchKeys":["loads","open fun loads(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.loads"]},{"name":"open fun loadsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadsCaptured","location":"core/dev.fritz2.core/-with-events/loads-captured.html","searchKeys":["loadsCaptured","open fun loadsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.loadsCaptured"]},{"name":"open fun loadsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadsCapturedIf","location":"core/dev.fritz2.core/-with-events/loads-captured-if.html","searchKeys":["loadsCapturedIf","open fun loadsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.loadsCapturedIf"]},{"name":"open fun loadsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadsIf","location":"core/dev.fritz2.core/-with-events/loads-if.html","searchKeys":["loadsIf","open fun loadsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.loadsIf"]},{"name":"open fun loadstarts(init: ProgressEvent.() -> Unit): Listener<ProgressEvent, T>","description":"dev.fritz2.core.WithEvents.loadstarts","location":"core/dev.fritz2.core/-with-events/loadstarts.html","searchKeys":["loadstarts","open fun loadstarts(init: ProgressEvent.() -> Unit): Listener<ProgressEvent, T>","dev.fritz2.core.WithEvents.loadstarts"]},{"name":"open fun loadstartsCaptured(init: ProgressEvent.() -> Unit): Listener<ProgressEvent, T>","description":"dev.fritz2.core.WithEvents.loadstartsCaptured","location":"core/dev.fritz2.core/-with-events/loadstarts-captured.html","searchKeys":["loadstartsCaptured","open fun loadstartsCaptured(init: ProgressEvent.() -> Unit): Listener<ProgressEvent, T>","dev.fritz2.core.WithEvents.loadstartsCaptured"]},{"name":"open fun loadstartsCapturedIf(selector: ProgressEvent.() -> Boolean): Listener<ProgressEvent, T>","description":"dev.fritz2.core.WithEvents.loadstartsCapturedIf","location":"core/dev.fritz2.core/-with-events/loadstarts-captured-if.html","searchKeys":["loadstartsCapturedIf","open fun loadstartsCapturedIf(selector: ProgressEvent.() -> Boolean): Listener<ProgressEvent, T>","dev.fritz2.core.WithEvents.loadstartsCapturedIf"]},{"name":"open fun loadstartsIf(selector: ProgressEvent.() -> Boolean): Listener<ProgressEvent, T>","description":"dev.fritz2.core.WithEvents.loadstartsIf","location":"core/dev.fritz2.core/-with-events/loadstarts-if.html","searchKeys":["loadstartsIf","open fun loadstartsIf(selector: ProgressEvent.() -> Boolean): Listener<ProgressEvent, T>","dev.fritz2.core.WithEvents.loadstartsIf"]},{"name":"open fun main(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.main","location":"core/dev.fritz2.core/-render-context/main.html","searchKeys":["main","open fun main(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.main"]},{"name":"open fun map(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLMapElement>.() -> Unit): HtmlTag<HTMLMapElement>","description":"dev.fritz2.core.RenderContext.map","location":"core/dev.fritz2.core/-render-context/map.html","searchKeys":["map","open fun map(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLMapElement>.() -> Unit): HtmlTag<HTMLMapElement>","dev.fritz2.core.RenderContext.map"]},{"name":"open fun mapByKey(key: String): Store<String>","description":"dev.fritz2.routing.MapRouter.mapByKey","location":"core/dev.fritz2.routing/-map-router/map-by-key.html","searchKeys":["mapByKey","open fun mapByKey(key: String): Store<String>","dev.fritz2.routing.MapRouter.mapByKey"]},{"name":"open fun mark(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.mark","location":"core/dev.fritz2.core/-render-context/mark.html","searchKeys":["mark","open fun mark(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.mark"]},{"name":"open fun messages(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.messages","location":"core/dev.fritz2.core/-with-events/messages.html","searchKeys":["messages","open fun messages(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.messages"]},{"name":"open fun messagesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.messagesCaptured","location":"core/dev.fritz2.core/-with-events/messages-captured.html","searchKeys":["messagesCaptured","open fun messagesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.messagesCaptured"]},{"name":"open fun messagesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.messagesCapturedIf","location":"core/dev.fritz2.core/-with-events/messages-captured-if.html","searchKeys":["messagesCapturedIf","open fun messagesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.messagesCapturedIf"]},{"name":"open fun messagesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.messagesIf","location":"core/dev.fritz2.core/-with-events/messages-if.html","searchKeys":["messagesIf","open fun messagesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.messagesIf"]},{"name":"open fun meter(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLMeterElement>.() -> Unit): HtmlTag<HTMLMeterElement>","description":"dev.fritz2.core.RenderContext.meter","location":"core/dev.fritz2.core/-render-context/meter.html","searchKeys":["meter","open fun meter(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLMeterElement>.() -> Unit): HtmlTag<HTMLMeterElement>","dev.fritz2.core.RenderContext.meter"]},{"name":"open fun mousedowns(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousedowns","location":"core/dev.fritz2.core/-with-events/mousedowns.html","searchKeys":["mousedowns","open fun mousedowns(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousedowns"]},{"name":"open fun mousedownsCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousedownsCaptured","location":"core/dev.fritz2.core/-with-events/mousedowns-captured.html","searchKeys":["mousedownsCaptured","open fun mousedownsCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousedownsCaptured"]},{"name":"open fun mousedownsCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousedownsCapturedIf","location":"core/dev.fritz2.core/-with-events/mousedowns-captured-if.html","searchKeys":["mousedownsCapturedIf","open fun mousedownsCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousedownsCapturedIf"]},{"name":"open fun mousedownsIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousedownsIf","location":"core/dev.fritz2.core/-with-events/mousedowns-if.html","searchKeys":["mousedownsIf","open fun mousedownsIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousedownsIf"]},{"name":"open fun mouseenters(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseenters","location":"core/dev.fritz2.core/-with-events/mouseenters.html","searchKeys":["mouseenters","open fun mouseenters(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseenters"]},{"name":"open fun mouseentersCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseentersCaptured","location":"core/dev.fritz2.core/-with-events/mouseenters-captured.html","searchKeys":["mouseentersCaptured","open fun mouseentersCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseentersCaptured"]},{"name":"open fun mouseentersCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseentersCapturedIf","location":"core/dev.fritz2.core/-with-events/mouseenters-captured-if.html","searchKeys":["mouseentersCapturedIf","open fun mouseentersCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseentersCapturedIf"]},{"name":"open fun mouseentersIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseentersIf","location":"core/dev.fritz2.core/-with-events/mouseenters-if.html","searchKeys":["mouseentersIf","open fun mouseentersIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseentersIf"]},{"name":"open fun mouseleaves(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseleaves","location":"core/dev.fritz2.core/-with-events/mouseleaves.html","searchKeys":["mouseleaves","open fun mouseleaves(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseleaves"]},{"name":"open fun mouseleavesCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseleavesCaptured","location":"core/dev.fritz2.core/-with-events/mouseleaves-captured.html","searchKeys":["mouseleavesCaptured","open fun mouseleavesCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseleavesCaptured"]},{"name":"open fun mouseleavesCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseleavesCapturedIf","location":"core/dev.fritz2.core/-with-events/mouseleaves-captured-if.html","searchKeys":["mouseleavesCapturedIf","open fun mouseleavesCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseleavesCapturedIf"]},{"name":"open fun mouseleavesIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseleavesIf","location":"core/dev.fritz2.core/-with-events/mouseleaves-if.html","searchKeys":["mouseleavesIf","open fun mouseleavesIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseleavesIf"]},{"name":"open fun mousemoves(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousemoves","location":"core/dev.fritz2.core/-with-events/mousemoves.html","searchKeys":["mousemoves","open fun mousemoves(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousemoves"]},{"name":"open fun mousemovesCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousemovesCaptured","location":"core/dev.fritz2.core/-with-events/mousemoves-captured.html","searchKeys":["mousemovesCaptured","open fun mousemovesCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousemovesCaptured"]},{"name":"open fun mousemovesCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousemovesCapturedIf","location":"core/dev.fritz2.core/-with-events/mousemoves-captured-if.html","searchKeys":["mousemovesCapturedIf","open fun mousemovesCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousemovesCapturedIf"]},{"name":"open fun mousemovesIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousemovesIf","location":"core/dev.fritz2.core/-with-events/mousemoves-if.html","searchKeys":["mousemovesIf","open fun mousemovesIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousemovesIf"]},{"name":"open fun mouseouts(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseouts","location":"core/dev.fritz2.core/-with-events/mouseouts.html","searchKeys":["mouseouts","open fun mouseouts(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseouts"]},{"name":"open fun mouseoutsCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoutsCaptured","location":"core/dev.fritz2.core/-with-events/mouseouts-captured.html","searchKeys":["mouseoutsCaptured","open fun mouseoutsCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoutsCaptured"]},{"name":"open fun mouseoutsCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoutsCapturedIf","location":"core/dev.fritz2.core/-with-events/mouseouts-captured-if.html","searchKeys":["mouseoutsCapturedIf","open fun mouseoutsCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoutsCapturedIf"]},{"name":"open fun mouseoutsIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoutsIf","location":"core/dev.fritz2.core/-with-events/mouseouts-if.html","searchKeys":["mouseoutsIf","open fun mouseoutsIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoutsIf"]},{"name":"open fun mouseovers(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseovers","location":"core/dev.fritz2.core/-with-events/mouseovers.html","searchKeys":["mouseovers","open fun mouseovers(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseovers"]},{"name":"open fun mouseoversCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoversCaptured","location":"core/dev.fritz2.core/-with-events/mouseovers-captured.html","searchKeys":["mouseoversCaptured","open fun mouseoversCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoversCaptured"]},{"name":"open fun mouseoversCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoversCapturedIf","location":"core/dev.fritz2.core/-with-events/mouseovers-captured-if.html","searchKeys":["mouseoversCapturedIf","open fun mouseoversCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoversCapturedIf"]},{"name":"open fun mouseoversIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoversIf","location":"core/dev.fritz2.core/-with-events/mouseovers-if.html","searchKeys":["mouseoversIf","open fun mouseoversIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoversIf"]},{"name":"open fun mouseups(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseups","location":"core/dev.fritz2.core/-with-events/mouseups.html","searchKeys":["mouseups","open fun mouseups(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseups"]},{"name":"open fun mouseupsCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseupsCaptured","location":"core/dev.fritz2.core/-with-events/mouseups-captured.html","searchKeys":["mouseupsCaptured","open fun mouseupsCaptured(init: MouseEvent.() -> Unit): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseupsCaptured"]},{"name":"open fun mouseupsCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseupsCapturedIf","location":"core/dev.fritz2.core/-with-events/mouseups-captured-if.html","searchKeys":["mouseupsCapturedIf","open fun mouseupsCapturedIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseupsCapturedIf"]},{"name":"open fun mouseupsIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseupsIf","location":"core/dev.fritz2.core/-with-events/mouseups-if.html","searchKeys":["mouseupsIf","open fun mouseupsIf(selector: MouseEvent.() -> Boolean): Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseupsIf"]},{"name":"open fun nav(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.nav","location":"core/dev.fritz2.core/-render-context/nav.html","searchKeys":["nav","open fun nav(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.nav"]},{"name":"open fun noscript(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.noscript","location":"core/dev.fritz2.core/-render-context/noscript.html","searchKeys":["noscript","open fun noscript(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.noscript"]},{"name":"open fun object(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLObjectElement>.() -> Unit): HtmlTag<HTMLObjectElement>","description":"dev.fritz2.core.RenderContext.object","location":"core/dev.fritz2.core/-render-context/object.html","searchKeys":["object","open fun object(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLObjectElement>.() -> Unit): HtmlTag<HTMLObjectElement>","dev.fritz2.core.RenderContext.object"]},{"name":"open fun offlines(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.offlines","location":"core/dev.fritz2.core/-with-events/offlines.html","searchKeys":["offlines","open fun offlines(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.offlines"]},{"name":"open fun offlinesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.offlinesCaptured","location":"core/dev.fritz2.core/-with-events/offlines-captured.html","searchKeys":["offlinesCaptured","open fun offlinesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.offlinesCaptured"]},{"name":"open fun offlinesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.offlinesCapturedIf","location":"core/dev.fritz2.core/-with-events/offlines-captured-if.html","searchKeys":["offlinesCapturedIf","open fun offlinesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.offlinesCapturedIf"]},{"name":"open fun offlinesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.offlinesIf","location":"core/dev.fritz2.core/-with-events/offlines-if.html","searchKeys":["offlinesIf","open fun offlinesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.offlinesIf"]},{"name":"open fun ol(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOListElement>.() -> Unit): HtmlTag<HTMLOListElement>","description":"dev.fritz2.core.RenderContext.ol","location":"core/dev.fritz2.core/-render-context/ol.html","searchKeys":["ol","open fun ol(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOListElement>.() -> Unit): HtmlTag<HTMLOListElement>","dev.fritz2.core.RenderContext.ol"]},{"name":"open fun onlines(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.onlines","location":"core/dev.fritz2.core/-with-events/onlines.html","searchKeys":["onlines","open fun onlines(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.onlines"]},{"name":"open fun onlinesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.onlinesCaptured","location":"core/dev.fritz2.core/-with-events/onlines-captured.html","searchKeys":["onlinesCaptured","open fun onlinesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.onlinesCaptured"]},{"name":"open fun onlinesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.onlinesCapturedIf","location":"core/dev.fritz2.core/-with-events/onlines-captured-if.html","searchKeys":["onlinesCapturedIf","open fun onlinesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.onlinesCapturedIf"]},{"name":"open fun onlinesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.onlinesIf","location":"core/dev.fritz2.core/-with-events/onlines-if.html","searchKeys":["onlinesIf","open fun onlinesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.onlinesIf"]},{"name":"open fun opens(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.opens","location":"core/dev.fritz2.core/-with-events/opens.html","searchKeys":["opens","open fun opens(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.opens"]},{"name":"open fun opensCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.opensCaptured","location":"core/dev.fritz2.core/-with-events/opens-captured.html","searchKeys":["opensCaptured","open fun opensCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.opensCaptured"]},{"name":"open fun opensCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.opensCapturedIf","location":"core/dev.fritz2.core/-with-events/opens-captured-if.html","searchKeys":["opensCapturedIf","open fun opensCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.opensCapturedIf"]},{"name":"open fun opensIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.opensIf","location":"core/dev.fritz2.core/-with-events/opens-if.html","searchKeys":["opensIf","open fun opensIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.opensIf"]},{"name":"open fun optgroup(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOptGroupElement>.() -> Unit): HtmlTag<HTMLOptGroupElement>","description":"dev.fritz2.core.RenderContext.optgroup","location":"core/dev.fritz2.core/-render-context/optgroup.html","searchKeys":["optgroup","open fun optgroup(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOptGroupElement>.() -> Unit): HtmlTag<HTMLOptGroupElement>","dev.fritz2.core.RenderContext.optgroup"]},{"name":"open fun option(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOptionElement>.() -> Unit): HtmlTag<HTMLOptionElement>","description":"dev.fritz2.core.RenderContext.option","location":"core/dev.fritz2.core/-render-context/option.html","searchKeys":["option","open fun option(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOptionElement>.() -> Unit): HtmlTag<HTMLOptionElement>","dev.fritz2.core.RenderContext.option"]},{"name":"open fun output(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOutputElement>.() -> Unit): HtmlTag<HTMLOutputElement>","description":"dev.fritz2.core.RenderContext.output","location":"core/dev.fritz2.core/-render-context/output.html","searchKeys":["output","open fun output(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLOutputElement>.() -> Unit): HtmlTag<HTMLOutputElement>","dev.fritz2.core.RenderContext.output"]},{"name":"open fun p(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLParagraphElement>.() -> Unit): HtmlTag<HTMLParagraphElement>","description":"dev.fritz2.core.RenderContext.p","location":"core/dev.fritz2.core/-render-context/p.html","searchKeys":["p","open fun p(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLParagraphElement>.() -> Unit): HtmlTag<HTMLParagraphElement>","dev.fritz2.core.RenderContext.p"]},{"name":"open fun pagehides(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pagehides","location":"core/dev.fritz2.core/-with-events/pagehides.html","searchKeys":["pagehides","open fun pagehides(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pagehides"]},{"name":"open fun pagehidesCaptured(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pagehidesCaptured","location":"core/dev.fritz2.core/-with-events/pagehides-captured.html","searchKeys":["pagehidesCaptured","open fun pagehidesCaptured(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pagehidesCaptured"]},{"name":"open fun pagehidesCapturedIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pagehidesCapturedIf","location":"core/dev.fritz2.core/-with-events/pagehides-captured-if.html","searchKeys":["pagehidesCapturedIf","open fun pagehidesCapturedIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pagehidesCapturedIf"]},{"name":"open fun pagehidesIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pagehidesIf","location":"core/dev.fritz2.core/-with-events/pagehides-if.html","searchKeys":["pagehidesIf","open fun pagehidesIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pagehidesIf"]},{"name":"open fun pageshows(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pageshows","location":"core/dev.fritz2.core/-with-events/pageshows.html","searchKeys":["pageshows","open fun pageshows(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pageshows"]},{"name":"open fun pageshowsCaptured(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pageshowsCaptured","location":"core/dev.fritz2.core/-with-events/pageshows-captured.html","searchKeys":["pageshowsCaptured","open fun pageshowsCaptured(init: PageTransitionEvent.() -> Unit): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pageshowsCaptured"]},{"name":"open fun pageshowsCapturedIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pageshowsCapturedIf","location":"core/dev.fritz2.core/-with-events/pageshows-captured-if.html","searchKeys":["pageshowsCapturedIf","open fun pageshowsCapturedIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pageshowsCapturedIf"]},{"name":"open fun pageshowsIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pageshowsIf","location":"core/dev.fritz2.core/-with-events/pageshows-if.html","searchKeys":["pageshowsIf","open fun pageshowsIf(selector: PageTransitionEvent.() -> Boolean): Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pageshowsIf"]},{"name":"open fun param(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLParamElement>.() -> Unit): HtmlTag<HTMLParamElement>","description":"dev.fritz2.core.RenderContext.param","location":"core/dev.fritz2.core/-render-context/param.html","searchKeys":["param","open fun param(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLParamElement>.() -> Unit): HtmlTag<HTMLParamElement>","dev.fritz2.core.RenderContext.param"]},{"name":"open fun pastes(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.pastes","location":"core/dev.fritz2.core/-with-events/pastes.html","searchKeys":["pastes","open fun pastes(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.pastes"]},{"name":"open fun pastesCaptured(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.pastesCaptured","location":"core/dev.fritz2.core/-with-events/pastes-captured.html","searchKeys":["pastesCaptured","open fun pastesCaptured(init: ClipboardEvent.() -> Unit): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.pastesCaptured"]},{"name":"open fun pastesCapturedIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.pastesCapturedIf","location":"core/dev.fritz2.core/-with-events/pastes-captured-if.html","searchKeys":["pastesCapturedIf","open fun pastesCapturedIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.pastesCapturedIf"]},{"name":"open fun pastesIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.pastesIf","location":"core/dev.fritz2.core/-with-events/pastes-if.html","searchKeys":["pastesIf","open fun pastesIf(selector: ClipboardEvent.() -> Boolean): Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.pastesIf"]},{"name":"open fun path(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: SvgTag.() -> Unit): SvgTag","description":"dev.fritz2.core.RenderContext.path","location":"core/dev.fritz2.core/-render-context/path.html","searchKeys":["path","open fun path(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: SvgTag.() -> Unit): SvgTag","dev.fritz2.core.RenderContext.path"]},{"name":"open fun pauses(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.pauses","location":"core/dev.fritz2.core/-with-events/pauses.html","searchKeys":["pauses","open fun pauses(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.pauses"]},{"name":"open fun pausesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.pausesCaptured","location":"core/dev.fritz2.core/-with-events/pauses-captured.html","searchKeys":["pausesCaptured","open fun pausesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.pausesCaptured"]},{"name":"open fun pausesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.pausesCapturedIf","location":"core/dev.fritz2.core/-with-events/pauses-captured-if.html","searchKeys":["pausesCapturedIf","open fun pausesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.pausesCapturedIf"]},{"name":"open fun pausesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.pausesIf","location":"core/dev.fritz2.core/-with-events/pauses-if.html","searchKeys":["pausesIf","open fun pausesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.pausesIf"]},{"name":"open fun picture(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLPictureElement>.() -> Unit): HtmlTag<HTMLPictureElement>","description":"dev.fritz2.core.RenderContext.picture","location":"core/dev.fritz2.core/-render-context/picture.html","searchKeys":["picture","open fun picture(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLPictureElement>.() -> Unit): HtmlTag<HTMLPictureElement>","dev.fritz2.core.RenderContext.picture"]},{"name":"open fun playings(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playings","location":"core/dev.fritz2.core/-with-events/playings.html","searchKeys":["playings","open fun playings(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.playings"]},{"name":"open fun playingsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playingsCaptured","location":"core/dev.fritz2.core/-with-events/playings-captured.html","searchKeys":["playingsCaptured","open fun playingsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.playingsCaptured"]},{"name":"open fun playingsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playingsCapturedIf","location":"core/dev.fritz2.core/-with-events/playings-captured-if.html","searchKeys":["playingsCapturedIf","open fun playingsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.playingsCapturedIf"]},{"name":"open fun playingsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playingsIf","location":"core/dev.fritz2.core/-with-events/playings-if.html","searchKeys":["playingsIf","open fun playingsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.playingsIf"]},{"name":"open fun plays(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.plays","location":"core/dev.fritz2.core/-with-events/plays.html","searchKeys":["plays","open fun plays(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.plays"]},{"name":"open fun playsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playsCaptured","location":"core/dev.fritz2.core/-with-events/plays-captured.html","searchKeys":["playsCaptured","open fun playsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.playsCaptured"]},{"name":"open fun playsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playsCapturedIf","location":"core/dev.fritz2.core/-with-events/plays-captured-if.html","searchKeys":["playsCapturedIf","open fun playsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.playsCapturedIf"]},{"name":"open fun playsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playsIf","location":"core/dev.fritz2.core/-with-events/plays-if.html","searchKeys":["playsIf","open fun playsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.playsIf"]},{"name":"open fun popstates(init: PopStateEvent.() -> Unit): Listener<PopStateEvent, T>","description":"dev.fritz2.core.WithEvents.popstates","location":"core/dev.fritz2.core/-with-events/popstates.html","searchKeys":["popstates","open fun popstates(init: PopStateEvent.() -> Unit): Listener<PopStateEvent, T>","dev.fritz2.core.WithEvents.popstates"]},{"name":"open fun popstatesCaptured(init: PopStateEvent.() -> Unit): Listener<PopStateEvent, T>","description":"dev.fritz2.core.WithEvents.popstatesCaptured","location":"core/dev.fritz2.core/-with-events/popstates-captured.html","searchKeys":["popstatesCaptured","open fun popstatesCaptured(init: PopStateEvent.() -> Unit): Listener<PopStateEvent, T>","dev.fritz2.core.WithEvents.popstatesCaptured"]},{"name":"open fun popstatesCapturedIf(selector: PopStateEvent.() -> Boolean): Listener<PopStateEvent, T>","description":"dev.fritz2.core.WithEvents.popstatesCapturedIf","location":"core/dev.fritz2.core/-with-events/popstates-captured-if.html","searchKeys":["popstatesCapturedIf","open fun popstatesCapturedIf(selector: PopStateEvent.() -> Boolean): Listener<PopStateEvent, T>","dev.fritz2.core.WithEvents.popstatesCapturedIf"]},{"name":"open fun popstatesIf(selector: PopStateEvent.() -> Boolean): Listener<PopStateEvent, T>","description":"dev.fritz2.core.WithEvents.popstatesIf","location":"core/dev.fritz2.core/-with-events/popstates-if.html","searchKeys":["popstatesIf","open fun popstatesIf(selector: PopStateEvent.() -> Boolean): Listener<PopStateEvent, T>","dev.fritz2.core.WithEvents.popstatesIf"]},{"name":"open fun pre(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLPreElement>.() -> Unit): HtmlTag<HTMLPreElement>","description":"dev.fritz2.core.RenderContext.pre","location":"core/dev.fritz2.core/-render-context/pre.html","searchKeys":["pre","open fun pre(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLPreElement>.() -> Unit): HtmlTag<HTMLPreElement>","dev.fritz2.core.RenderContext.pre"]},{"name":"open fun progress(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLProgressElement>.() -> Unit): HtmlTag<HTMLProgressElement>","description":"dev.fritz2.core.RenderContext.progress","location":"core/dev.fritz2.core/-render-context/progress.html","searchKeys":["progress","open fun progress(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLProgressElement>.() -> Unit): HtmlTag<HTMLProgressElement>","dev.fritz2.core.RenderContext.progress"]},{"name":"open fun progresss(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.progresss","location":"core/dev.fritz2.core/-with-events/progresss.html","searchKeys":["progresss","open fun progresss(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.progresss"]},{"name":"open fun progresssCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.progresssCaptured","location":"core/dev.fritz2.core/-with-events/progresss-captured.html","searchKeys":["progresssCaptured","open fun progresssCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.progresssCaptured"]},{"name":"open fun progresssCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.progresssCapturedIf","location":"core/dev.fritz2.core/-with-events/progresss-captured-if.html","searchKeys":["progresssCapturedIf","open fun progresssCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.progresssCapturedIf"]},{"name":"open fun progresssIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.progresssIf","location":"core/dev.fritz2.core/-with-events/progresss-if.html","searchKeys":["progresssIf","open fun progresssIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.progresssIf"]},{"name":"open fun q(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLQuoteElement>.() -> Unit): HtmlTag<HTMLQuoteElement>","description":"dev.fritz2.core.RenderContext.q","location":"core/dev.fritz2.core/-render-context/q.html","searchKeys":["q","open fun q(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLQuoteElement>.() -> Unit): HtmlTag<HTMLQuoteElement>","dev.fritz2.core.RenderContext.q"]},{"name":"open fun quote(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLQuoteElement>.() -> Unit): HtmlTag<HTMLQuoteElement>","description":"dev.fritz2.core.RenderContext.quote","location":"core/dev.fritz2.core/-render-context/quote.html","searchKeys":["quote","open fun quote(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLQuoteElement>.() -> Unit): HtmlTag<HTMLQuoteElement>","dev.fritz2.core.RenderContext.quote"]},{"name":"open fun ratechanges(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.ratechanges","location":"core/dev.fritz2.core/-with-events/ratechanges.html","searchKeys":["ratechanges","open fun ratechanges(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.ratechanges"]},{"name":"open fun ratechangesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.ratechangesCaptured","location":"core/dev.fritz2.core/-with-events/ratechanges-captured.html","searchKeys":["ratechangesCaptured","open fun ratechangesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.ratechangesCaptured"]},{"name":"open fun ratechangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.ratechangesCapturedIf","location":"core/dev.fritz2.core/-with-events/ratechanges-captured-if.html","searchKeys":["ratechangesCapturedIf","open fun ratechangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.ratechangesCapturedIf"]},{"name":"open fun ratechangesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.ratechangesIf","location":"core/dev.fritz2.core/-with-events/ratechanges-if.html","searchKeys":["ratechangesIf","open fun ratechangesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.ratechangesIf"]},{"name":"open fun resets(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resets","location":"core/dev.fritz2.core/-with-events/resets.html","searchKeys":["resets","open fun resets(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.resets"]},{"name":"open fun resetsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resetsCaptured","location":"core/dev.fritz2.core/-with-events/resets-captured.html","searchKeys":["resetsCaptured","open fun resetsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.resetsCaptured"]},{"name":"open fun resetsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resetsCapturedIf","location":"core/dev.fritz2.core/-with-events/resets-captured-if.html","searchKeys":["resetsCapturedIf","open fun resetsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.resetsCapturedIf"]},{"name":"open fun resetsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resetsIf","location":"core/dev.fritz2.core/-with-events/resets-if.html","searchKeys":["resetsIf","open fun resetsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.resetsIf"]},{"name":"open fun resizes(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resizes","location":"core/dev.fritz2.core/-with-events/resizes.html","searchKeys":["resizes","open fun resizes(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.resizes"]},{"name":"open fun resizesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resizesCaptured","location":"core/dev.fritz2.core/-with-events/resizes-captured.html","searchKeys":["resizesCaptured","open fun resizesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.resizesCaptured"]},{"name":"open fun resizesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resizesCapturedIf","location":"core/dev.fritz2.core/-with-events/resizes-captured-if.html","searchKeys":["resizesCapturedIf","open fun resizesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.resizesCapturedIf"]},{"name":"open fun resizesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resizesIf","location":"core/dev.fritz2.core/-with-events/resizes-if.html","searchKeys":["resizesIf","open fun resizesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.resizesIf"]},{"name":"open fun rp(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.rp","location":"core/dev.fritz2.core/-render-context/rp.html","searchKeys":["rp","open fun rp(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.rp"]},{"name":"open fun rt(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.rt","location":"core/dev.fritz2.core/-render-context/rt.html","searchKeys":["rt","open fun rt(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.rt"]},{"name":"open fun ruby(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.ruby","location":"core/dev.fritz2.core/-render-context/ruby.html","searchKeys":["ruby","open fun ruby(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.ruby"]},{"name":"open fun s(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.s","location":"core/dev.fritz2.core/-render-context/s.html","searchKeys":["s","open fun s(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.s"]},{"name":"open fun samp(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.samp","location":"core/dev.fritz2.core/-render-context/samp.html","searchKeys":["samp","open fun samp(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.samp"]},{"name":"open fun script(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLScriptElement>.() -> Unit): HtmlTag<HTMLScriptElement>","description":"dev.fritz2.core.RenderContext.script","location":"core/dev.fritz2.core/-render-context/script.html","searchKeys":["script","open fun script(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLScriptElement>.() -> Unit): HtmlTag<HTMLScriptElement>","dev.fritz2.core.RenderContext.script"]},{"name":"open fun scrolls(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.scrolls","location":"core/dev.fritz2.core/-with-events/scrolls.html","searchKeys":["scrolls","open fun scrolls(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.scrolls"]},{"name":"open fun scrollsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.scrollsCaptured","location":"core/dev.fritz2.core/-with-events/scrolls-captured.html","searchKeys":["scrollsCaptured","open fun scrollsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.scrollsCaptured"]},{"name":"open fun scrollsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.scrollsCapturedIf","location":"core/dev.fritz2.core/-with-events/scrolls-captured-if.html","searchKeys":["scrollsCapturedIf","open fun scrollsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.scrollsCapturedIf"]},{"name":"open fun scrollsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.scrollsIf","location":"core/dev.fritz2.core/-with-events/scrolls-if.html","searchKeys":["scrollsIf","open fun scrollsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.scrollsIf"]},{"name":"open fun searchs(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.searchs","location":"core/dev.fritz2.core/-with-events/searchs.html","searchKeys":["searchs","open fun searchs(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.searchs"]},{"name":"open fun searchsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.searchsCaptured","location":"core/dev.fritz2.core/-with-events/searchs-captured.html","searchKeys":["searchsCaptured","open fun searchsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.searchsCaptured"]},{"name":"open fun searchsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.searchsCapturedIf","location":"core/dev.fritz2.core/-with-events/searchs-captured-if.html","searchKeys":["searchsCapturedIf","open fun searchsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.searchsCapturedIf"]},{"name":"open fun searchsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.searchsIf","location":"core/dev.fritz2.core/-with-events/searchs-if.html","searchKeys":["searchsIf","open fun searchsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.searchsIf"]},{"name":"open fun section(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.section","location":"core/dev.fritz2.core/-render-context/section.html","searchKeys":["section","open fun section(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.section"]},{"name":"open fun seekeds(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekeds","location":"core/dev.fritz2.core/-with-events/seekeds.html","searchKeys":["seekeds","open fun seekeds(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.seekeds"]},{"name":"open fun seekedsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekedsCaptured","location":"core/dev.fritz2.core/-with-events/seekeds-captured.html","searchKeys":["seekedsCaptured","open fun seekedsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.seekedsCaptured"]},{"name":"open fun seekedsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekedsCapturedIf","location":"core/dev.fritz2.core/-with-events/seekeds-captured-if.html","searchKeys":["seekedsCapturedIf","open fun seekedsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.seekedsCapturedIf"]},{"name":"open fun seekedsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekedsIf","location":"core/dev.fritz2.core/-with-events/seekeds-if.html","searchKeys":["seekedsIf","open fun seekedsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.seekedsIf"]},{"name":"open fun seekings(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekings","location":"core/dev.fritz2.core/-with-events/seekings.html","searchKeys":["seekings","open fun seekings(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.seekings"]},{"name":"open fun seekingsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekingsCaptured","location":"core/dev.fritz2.core/-with-events/seekings-captured.html","searchKeys":["seekingsCaptured","open fun seekingsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.seekingsCaptured"]},{"name":"open fun seekingsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekingsCapturedIf","location":"core/dev.fritz2.core/-with-events/seekings-captured-if.html","searchKeys":["seekingsCapturedIf","open fun seekingsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.seekingsCapturedIf"]},{"name":"open fun seekingsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekingsIf","location":"core/dev.fritz2.core/-with-events/seekings-if.html","searchKeys":["seekingsIf","open fun seekingsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.seekingsIf"]},{"name":"open fun select(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSelectElement>.() -> Unit): HtmlTag<HTMLSelectElement>","description":"dev.fritz2.core.RenderContext.select","location":"core/dev.fritz2.core/-render-context/select.html","searchKeys":["select","open fun select(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSelectElement>.() -> Unit): HtmlTag<HTMLSelectElement>","dev.fritz2.core.RenderContext.select"]},{"name":"open fun select(key: String): Flow<Pair<String?, Map<String, String>>>","description":"dev.fritz2.routing.MapRouter.select","location":"core/dev.fritz2.routing/-map-router/select.html","searchKeys":["select","open fun select(key: String): Flow<Pair<String?, Map<String, String>>>","dev.fritz2.routing.MapRouter.select"]},{"name":"open fun select(key: String, orElse: String): Flow<String>","description":"dev.fritz2.routing.MapRouter.select","location":"core/dev.fritz2.routing/-map-router/select.html","searchKeys":["select","open fun select(key: String, orElse: String): Flow<String>","dev.fritz2.routing.MapRouter.select"]},{"name":"open fun selects(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.selects","location":"core/dev.fritz2.core/-with-events/selects.html","searchKeys":["selects","open fun selects(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.selects"]},{"name":"open fun selectsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.selectsCaptured","location":"core/dev.fritz2.core/-with-events/selects-captured.html","searchKeys":["selectsCaptured","open fun selectsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.selectsCaptured"]},{"name":"open fun selectsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.selectsCapturedIf","location":"core/dev.fritz2.core/-with-events/selects-captured-if.html","searchKeys":["selectsCapturedIf","open fun selectsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.selectsCapturedIf"]},{"name":"open fun selectsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.selectsIf","location":"core/dev.fritz2.core/-with-events/selects-if.html","searchKeys":["selectsIf","open fun selectsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.selectsIf"]},{"name":"open fun shows(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.shows","location":"core/dev.fritz2.core/-with-events/shows.html","searchKeys":["shows","open fun shows(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.shows"]},{"name":"open fun showsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.showsCaptured","location":"core/dev.fritz2.core/-with-events/shows-captured.html","searchKeys":["showsCaptured","open fun showsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.showsCaptured"]},{"name":"open fun showsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.showsCapturedIf","location":"core/dev.fritz2.core/-with-events/shows-captured-if.html","searchKeys":["showsCapturedIf","open fun showsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.showsCapturedIf"]},{"name":"open fun showsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.showsIf","location":"core/dev.fritz2.core/-with-events/shows-if.html","searchKeys":["showsIf","open fun showsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.showsIf"]},{"name":"open fun span(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSpanElement>.() -> Unit): HtmlTag<HTMLSpanElement>","description":"dev.fritz2.core.RenderContext.span","location":"core/dev.fritz2.core/-render-context/span.html","searchKeys":["span","open fun span(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLSpanElement>.() -> Unit): HtmlTag<HTMLSpanElement>","dev.fritz2.core.RenderContext.span"]},{"name":"open fun stalleds(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.stalleds","location":"core/dev.fritz2.core/-with-events/stalleds.html","searchKeys":["stalleds","open fun stalleds(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.stalleds"]},{"name":"open fun stalledsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.stalledsCaptured","location":"core/dev.fritz2.core/-with-events/stalleds-captured.html","searchKeys":["stalledsCaptured","open fun stalledsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.stalledsCaptured"]},{"name":"open fun stalledsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.stalledsCapturedIf","location":"core/dev.fritz2.core/-with-events/stalleds-captured-if.html","searchKeys":["stalledsCapturedIf","open fun stalledsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.stalledsCapturedIf"]},{"name":"open fun stalledsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.stalledsIf","location":"core/dev.fritz2.core/-with-events/stalleds-if.html","searchKeys":["stalledsIf","open fun stalledsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.stalledsIf"]},{"name":"open fun storages(init: StorageEvent.() -> Unit): Listener<StorageEvent, T>","description":"dev.fritz2.core.WithEvents.storages","location":"core/dev.fritz2.core/-with-events/storages.html","searchKeys":["storages","open fun storages(init: StorageEvent.() -> Unit): Listener<StorageEvent, T>","dev.fritz2.core.WithEvents.storages"]},{"name":"open fun storagesCaptured(init: StorageEvent.() -> Unit): Listener<StorageEvent, T>","description":"dev.fritz2.core.WithEvents.storagesCaptured","location":"core/dev.fritz2.core/-with-events/storages-captured.html","searchKeys":["storagesCaptured","open fun storagesCaptured(init: StorageEvent.() -> Unit): Listener<StorageEvent, T>","dev.fritz2.core.WithEvents.storagesCaptured"]},{"name":"open fun storagesCapturedIf(selector: StorageEvent.() -> Boolean): Listener<StorageEvent, T>","description":"dev.fritz2.core.WithEvents.storagesCapturedIf","location":"core/dev.fritz2.core/-with-events/storages-captured-if.html","searchKeys":["storagesCapturedIf","open fun storagesCapturedIf(selector: StorageEvent.() -> Boolean): Listener<StorageEvent, T>","dev.fritz2.core.WithEvents.storagesCapturedIf"]},{"name":"open fun storagesIf(selector: StorageEvent.() -> Boolean): Listener<StorageEvent, T>","description":"dev.fritz2.core.WithEvents.storagesIf","location":"core/dev.fritz2.core/-with-events/storages-if.html","searchKeys":["storagesIf","open fun storagesIf(selector: StorageEvent.() -> Boolean): Listener<StorageEvent, T>","dev.fritz2.core.WithEvents.storagesIf"]},{"name":"open fun strong(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.strong","location":"core/dev.fritz2.core/-render-context/strong.html","searchKeys":["strong","open fun strong(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.strong"]},{"name":"open fun sub(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.sub","location":"core/dev.fritz2.core/-render-context/sub.html","searchKeys":["sub","open fun sub(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.sub"]},{"name":"open fun submits(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.submits","location":"core/dev.fritz2.core/-with-events/submits.html","searchKeys":["submits","open fun submits(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.submits"]},{"name":"open fun submitsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.submitsCaptured","location":"core/dev.fritz2.core/-with-events/submits-captured.html","searchKeys":["submitsCaptured","open fun submitsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.submitsCaptured"]},{"name":"open fun submitsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.submitsCapturedIf","location":"core/dev.fritz2.core/-with-events/submits-captured-if.html","searchKeys":["submitsCapturedIf","open fun submitsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.submitsCapturedIf"]},{"name":"open fun submitsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.submitsIf","location":"core/dev.fritz2.core/-with-events/submits-if.html","searchKeys":["submitsIf","open fun submitsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.submitsIf"]},{"name":"open fun summary(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.summary","location":"core/dev.fritz2.core/-render-context/summary.html","searchKeys":["summary","open fun summary(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.summary"]},{"name":"open fun sup(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.sup","location":"core/dev.fritz2.core/-render-context/sup.html","searchKeys":["sup","open fun sup(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.sup"]},{"name":"open fun suspends(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.suspends","location":"core/dev.fritz2.core/-with-events/suspends.html","searchKeys":["suspends","open fun suspends(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.suspends"]},{"name":"open fun suspendsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.suspendsCaptured","location":"core/dev.fritz2.core/-with-events/suspends-captured.html","searchKeys":["suspendsCaptured","open fun suspendsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.suspendsCaptured"]},{"name":"open fun suspendsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.suspendsCapturedIf","location":"core/dev.fritz2.core/-with-events/suspends-captured-if.html","searchKeys":["suspendsCapturedIf","open fun suspendsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.suspendsCapturedIf"]},{"name":"open fun suspendsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.suspendsIf","location":"core/dev.fritz2.core/-with-events/suspends-if.html","searchKeys":["suspendsIf","open fun suspendsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.suspendsIf"]},{"name":"open fun svg(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: SvgTag.() -> Unit): SvgTag","description":"dev.fritz2.core.RenderContext.svg","location":"core/dev.fritz2.core/-render-context/svg.html","searchKeys":["svg","open fun svg(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: SvgTag.() -> Unit): SvgTag","dev.fritz2.core.RenderContext.svg"]},{"name":"open fun table(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableElement>.() -> Unit): HtmlTag<HTMLTableElement>","description":"dev.fritz2.core.RenderContext.table","location":"core/dev.fritz2.core/-render-context/table.html","searchKeys":["table","open fun table(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableElement>.() -> Unit): HtmlTag<HTMLTableElement>","dev.fritz2.core.RenderContext.table"]},{"name":"open fun tbody(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableSectionElement>.() -> Unit): HtmlTag<HTMLTableSectionElement>","description":"dev.fritz2.core.RenderContext.tbody","location":"core/dev.fritz2.core/-render-context/tbody.html","searchKeys":["tbody","open fun tbody(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableSectionElement>.() -> Unit): HtmlTag<HTMLTableSectionElement>","dev.fritz2.core.RenderContext.tbody"]},{"name":"open fun td(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableCellElement>.() -> Unit): HtmlTag<HTMLTableCellElement>","description":"dev.fritz2.core.RenderContext.td","location":"core/dev.fritz2.core/-render-context/td.html","searchKeys":["td","open fun td(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableCellElement>.() -> Unit): HtmlTag<HTMLTableCellElement>","dev.fritz2.core.RenderContext.td"]},{"name":"open fun textarea(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTextAreaElement>.() -> Unit): HtmlTag<HTMLTextAreaElement>","description":"dev.fritz2.core.RenderContext.textarea","location":"core/dev.fritz2.core/-render-context/textarea.html","searchKeys":["textarea","open fun textarea(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTextAreaElement>.() -> Unit): HtmlTag<HTMLTextAreaElement>","dev.fritz2.core.RenderContext.textarea"]},{"name":"open fun tfoot(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableSectionElement>.() -> Unit): HtmlTag<HTMLTableSectionElement>","description":"dev.fritz2.core.RenderContext.tfoot","location":"core/dev.fritz2.core/-render-context/tfoot.html","searchKeys":["tfoot","open fun tfoot(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableSectionElement>.() -> Unit): HtmlTag<HTMLTableSectionElement>","dev.fritz2.core.RenderContext.tfoot"]},{"name":"open fun th(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableCellElement>.() -> Unit): HtmlTag<HTMLTableCellElement>","description":"dev.fritz2.core.RenderContext.th","location":"core/dev.fritz2.core/-render-context/th.html","searchKeys":["th","open fun th(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableCellElement>.() -> Unit): HtmlTag<HTMLTableCellElement>","dev.fritz2.core.RenderContext.th"]},{"name":"open fun thead(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableSectionElement>.() -> Unit): HtmlTag<HTMLTableSectionElement>","description":"dev.fritz2.core.RenderContext.thead","location":"core/dev.fritz2.core/-render-context/thead.html","searchKeys":["thead","open fun thead(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableSectionElement>.() -> Unit): HtmlTag<HTMLTableSectionElement>","dev.fritz2.core.RenderContext.thead"]},{"name":"open fun time(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTimeElement>.() -> Unit): HtmlTag<HTMLTimeElement>","description":"dev.fritz2.core.RenderContext.time","location":"core/dev.fritz2.core/-render-context/time.html","searchKeys":["time","open fun time(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTimeElement>.() -> Unit): HtmlTag<HTMLTimeElement>","dev.fritz2.core.RenderContext.time"]},{"name":"open fun timeupdates(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.timeupdates","location":"core/dev.fritz2.core/-with-events/timeupdates.html","searchKeys":["timeupdates","open fun timeupdates(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.timeupdates"]},{"name":"open fun timeupdatesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.timeupdatesCaptured","location":"core/dev.fritz2.core/-with-events/timeupdates-captured.html","searchKeys":["timeupdatesCaptured","open fun timeupdatesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.timeupdatesCaptured"]},{"name":"open fun timeupdatesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.timeupdatesCapturedIf","location":"core/dev.fritz2.core/-with-events/timeupdates-captured-if.html","searchKeys":["timeupdatesCapturedIf","open fun timeupdatesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.timeupdatesCapturedIf"]},{"name":"open fun timeupdatesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.timeupdatesIf","location":"core/dev.fritz2.core/-with-events/timeupdates-if.html","searchKeys":["timeupdatesIf","open fun timeupdatesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.timeupdatesIf"]},{"name":"open fun toggles(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.toggles","location":"core/dev.fritz2.core/-with-events/toggles.html","searchKeys":["toggles","open fun toggles(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.toggles"]},{"name":"open fun togglesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.togglesCaptured","location":"core/dev.fritz2.core/-with-events/toggles-captured.html","searchKeys":["togglesCaptured","open fun togglesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.togglesCaptured"]},{"name":"open fun togglesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.togglesCapturedIf","location":"core/dev.fritz2.core/-with-events/toggles-captured-if.html","searchKeys":["togglesCapturedIf","open fun togglesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.togglesCapturedIf"]},{"name":"open fun togglesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.togglesIf","location":"core/dev.fritz2.core/-with-events/toggles-if.html","searchKeys":["togglesIf","open fun togglesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.togglesIf"]},{"name":"open fun touchcancels(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchcancels","location":"core/dev.fritz2.core/-with-events/touchcancels.html","searchKeys":["touchcancels","open fun touchcancels(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchcancels"]},{"name":"open fun touchcancelsCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchcancelsCaptured","location":"core/dev.fritz2.core/-with-events/touchcancels-captured.html","searchKeys":["touchcancelsCaptured","open fun touchcancelsCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchcancelsCaptured"]},{"name":"open fun touchcancelsCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchcancelsCapturedIf","location":"core/dev.fritz2.core/-with-events/touchcancels-captured-if.html","searchKeys":["touchcancelsCapturedIf","open fun touchcancelsCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchcancelsCapturedIf"]},{"name":"open fun touchcancelsIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchcancelsIf","location":"core/dev.fritz2.core/-with-events/touchcancels-if.html","searchKeys":["touchcancelsIf","open fun touchcancelsIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchcancelsIf"]},{"name":"open fun touchends(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchends","location":"core/dev.fritz2.core/-with-events/touchends.html","searchKeys":["touchends","open fun touchends(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchends"]},{"name":"open fun touchendsCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchendsCaptured","location":"core/dev.fritz2.core/-with-events/touchends-captured.html","searchKeys":["touchendsCaptured","open fun touchendsCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchendsCaptured"]},{"name":"open fun touchendsCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchendsCapturedIf","location":"core/dev.fritz2.core/-with-events/touchends-captured-if.html","searchKeys":["touchendsCapturedIf","open fun touchendsCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchendsCapturedIf"]},{"name":"open fun touchendsIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchendsIf","location":"core/dev.fritz2.core/-with-events/touchends-if.html","searchKeys":["touchendsIf","open fun touchendsIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchendsIf"]},{"name":"open fun touchmoves(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchmoves","location":"core/dev.fritz2.core/-with-events/touchmoves.html","searchKeys":["touchmoves","open fun touchmoves(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchmoves"]},{"name":"open fun touchmovesCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchmovesCaptured","location":"core/dev.fritz2.core/-with-events/touchmoves-captured.html","searchKeys":["touchmovesCaptured","open fun touchmovesCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchmovesCaptured"]},{"name":"open fun touchmovesCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchmovesCapturedIf","location":"core/dev.fritz2.core/-with-events/touchmoves-captured-if.html","searchKeys":["touchmovesCapturedIf","open fun touchmovesCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchmovesCapturedIf"]},{"name":"open fun touchmovesIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchmovesIf","location":"core/dev.fritz2.core/-with-events/touchmoves-if.html","searchKeys":["touchmovesIf","open fun touchmovesIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchmovesIf"]},{"name":"open fun touchstarts(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchstarts","location":"core/dev.fritz2.core/-with-events/touchstarts.html","searchKeys":["touchstarts","open fun touchstarts(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchstarts"]},{"name":"open fun touchstartsCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchstartsCaptured","location":"core/dev.fritz2.core/-with-events/touchstarts-captured.html","searchKeys":["touchstartsCaptured","open fun touchstartsCaptured(init: TouchEvent.() -> Unit): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchstartsCaptured"]},{"name":"open fun touchstartsCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchstartsCapturedIf","location":"core/dev.fritz2.core/-with-events/touchstarts-captured-if.html","searchKeys":["touchstartsCapturedIf","open fun touchstartsCapturedIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchstartsCapturedIf"]},{"name":"open fun touchstartsIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchstartsIf","location":"core/dev.fritz2.core/-with-events/touchstarts-if.html","searchKeys":["touchstartsIf","open fun touchstartsIf(selector: TouchEvent.() -> Boolean): Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchstartsIf"]},{"name":"open fun tr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableRowElement>.() -> Unit): HtmlTag<HTMLTableRowElement>","description":"dev.fritz2.core.RenderContext.tr","location":"core/dev.fritz2.core/-render-context/tr.html","searchKeys":["tr","open fun tr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTableRowElement>.() -> Unit): HtmlTag<HTMLTableRowElement>","dev.fritz2.core.RenderContext.tr"]},{"name":"open fun track(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTrackElement>.() -> Unit): HtmlTag<HTMLTrackElement>","description":"dev.fritz2.core.RenderContext.track","location":"core/dev.fritz2.core/-render-context/track.html","searchKeys":["track","open fun track(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLTrackElement>.() -> Unit): HtmlTag<HTMLTrackElement>","dev.fritz2.core.RenderContext.track"]},{"name":"open fun transitionends(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.transitionends","location":"core/dev.fritz2.core/-with-events/transitionends.html","searchKeys":["transitionends","open fun transitionends(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.transitionends"]},{"name":"open fun transitionendsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.transitionendsCaptured","location":"core/dev.fritz2.core/-with-events/transitionends-captured.html","searchKeys":["transitionendsCaptured","open fun transitionendsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.transitionendsCaptured"]},{"name":"open fun transitionendsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.transitionendsCapturedIf","location":"core/dev.fritz2.core/-with-events/transitionends-captured-if.html","searchKeys":["transitionendsCapturedIf","open fun transitionendsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.transitionendsCapturedIf"]},{"name":"open fun transitionendsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.transitionendsIf","location":"core/dev.fritz2.core/-with-events/transitionends-if.html","searchKeys":["transitionendsIf","open fun transitionendsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.transitionendsIf"]},{"name":"open fun u(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.u","location":"core/dev.fritz2.core/-render-context/u.html","searchKeys":["u","open fun u(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.u"]},{"name":"open fun ul(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLUListElement>.() -> Unit): HtmlTag<HTMLUListElement>","description":"dev.fritz2.core.RenderContext.ul","location":"core/dev.fritz2.core/-render-context/ul.html","searchKeys":["ul","open fun ul(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLUListElement>.() -> Unit): HtmlTag<HTMLUListElement>","dev.fritz2.core.RenderContext.ul"]},{"name":"open fun unloads(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.unloads","location":"core/dev.fritz2.core/-with-events/unloads.html","searchKeys":["unloads","open fun unloads(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.unloads"]},{"name":"open fun unloadsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.unloadsCaptured","location":"core/dev.fritz2.core/-with-events/unloads-captured.html","searchKeys":["unloadsCaptured","open fun unloadsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.unloadsCaptured"]},{"name":"open fun unloadsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.unloadsCapturedIf","location":"core/dev.fritz2.core/-with-events/unloads-captured-if.html","searchKeys":["unloadsCapturedIf","open fun unloadsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.unloadsCapturedIf"]},{"name":"open fun unloadsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.unloadsIf","location":"core/dev.fritz2.core/-with-events/unloads-if.html","searchKeys":["unloadsIf","open fun unloadsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.unloadsIf"]},{"name":"open fun var(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.var","location":"core/dev.fritz2.core/-render-context/var.html","searchKeys":["var","open fun var(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.var"]},{"name":"open fun video(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLVideoElement>.() -> Unit): HtmlTag<HTMLVideoElement>","description":"dev.fritz2.core.RenderContext.video","location":"core/dev.fritz2.core/-render-context/video.html","searchKeys":["video","open fun video(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLVideoElement>.() -> Unit): HtmlTag<HTMLVideoElement>","dev.fritz2.core.RenderContext.video"]},{"name":"open fun volumechanges(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.volumechanges","location":"core/dev.fritz2.core/-with-events/volumechanges.html","searchKeys":["volumechanges","open fun volumechanges(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.volumechanges"]},{"name":"open fun volumechangesCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.volumechangesCaptured","location":"core/dev.fritz2.core/-with-events/volumechanges-captured.html","searchKeys":["volumechangesCaptured","open fun volumechangesCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.volumechangesCaptured"]},{"name":"open fun volumechangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.volumechangesCapturedIf","location":"core/dev.fritz2.core/-with-events/volumechanges-captured-if.html","searchKeys":["volumechangesCapturedIf","open fun volumechangesCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.volumechangesCapturedIf"]},{"name":"open fun volumechangesIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.volumechangesIf","location":"core/dev.fritz2.core/-with-events/volumechanges-if.html","searchKeys":["volumechangesIf","open fun volumechangesIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.volumechangesIf"]},{"name":"open fun waitings(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.waitings","location":"core/dev.fritz2.core/-with-events/waitings.html","searchKeys":["waitings","open fun waitings(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.waitings"]},{"name":"open fun waitingsCaptured(init: Event.() -> Unit): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.waitingsCaptured","location":"core/dev.fritz2.core/-with-events/waitings-captured.html","searchKeys":["waitingsCaptured","open fun waitingsCaptured(init: Event.() -> Unit): Listener<Event, T>","dev.fritz2.core.WithEvents.waitingsCaptured"]},{"name":"open fun waitingsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.waitingsCapturedIf","location":"core/dev.fritz2.core/-with-events/waitings-captured-if.html","searchKeys":["waitingsCapturedIf","open fun waitingsCapturedIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.waitingsCapturedIf"]},{"name":"open fun waitingsIf(selector: Event.() -> Boolean): Listener<Event, T>","description":"dev.fritz2.core.WithEvents.waitingsIf","location":"core/dev.fritz2.core/-with-events/waitings-if.html","searchKeys":["waitingsIf","open fun waitingsIf(selector: Event.() -> Boolean): Listener<Event, T>","dev.fritz2.core.WithEvents.waitingsIf"]},{"name":"open fun wbr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","description":"dev.fritz2.core.RenderContext.wbr","location":"core/dev.fritz2.core/-render-context/wbr.html","searchKeys":["wbr","open fun wbr(baseClass: String? = null, id: String? = null, scope: ScopeContext.() -> Unit = {}, content: HtmlTag<HTMLElement>.() -> Unit): HtmlTag<HTMLElement>","dev.fritz2.core.RenderContext.wbr"]},{"name":"open fun wheels(init: WheelEvent.() -> Unit): Listener<WheelEvent, T>","description":"dev.fritz2.core.WithEvents.wheels","location":"core/dev.fritz2.core/-with-events/wheels.html","searchKeys":["wheels","open fun wheels(init: WheelEvent.() -> Unit): Listener<WheelEvent, T>","dev.fritz2.core.WithEvents.wheels"]},{"name":"open fun wheelsCaptured(init: WheelEvent.() -> Unit): Listener<WheelEvent, T>","description":"dev.fritz2.core.WithEvents.wheelsCaptured","location":"core/dev.fritz2.core/-with-events/wheels-captured.html","searchKeys":["wheelsCaptured","open fun wheelsCaptured(init: WheelEvent.() -> Unit): Listener<WheelEvent, T>","dev.fritz2.core.WithEvents.wheelsCaptured"]},{"name":"open fun wheelsCapturedIf(selector: WheelEvent.() -> Boolean): Listener<WheelEvent, T>","description":"dev.fritz2.core.WithEvents.wheelsCapturedIf","location":"core/dev.fritz2.core/-with-events/wheels-captured-if.html","searchKeys":["wheelsCapturedIf","open fun wheelsCapturedIf(selector: WheelEvent.() -> Boolean): Listener<WheelEvent, T>","dev.fritz2.core.WithEvents.wheelsCapturedIf"]},{"name":"open fun wheelsIf(selector: WheelEvent.() -> Boolean): Listener<WheelEvent, T>","description":"dev.fritz2.core.WithEvents.wheelsIf","location":"core/dev.fritz2.core/-with-events/wheels-if.html","searchKeys":["wheelsIf","open fun wheelsIf(selector: WheelEvent.() -> Boolean): Listener<WheelEvent, T>","dev.fritz2.core.WithEvents.wheelsIf"]},{"name":"open fun withNullParent(): Lens<P?, T>","description":"dev.fritz2.core.Lens.withNullParent","location":"core/dev.fritz2.core/-lens/with-null-parent.html","searchKeys":["withNullParent","open fun withNullParent(): Lens<P?, T>","dev.fritz2.core.Lens.withNullParent"]},{"name":"open infix fun <A> Flow<A>.handledBy(execute: suspend (A) -> Unit): Job","description":"dev.fritz2.core.WithJob.handledBy","location":"core/dev.fritz2.core/-with-job/handled-by.html","searchKeys":["handledBy","open infix fun <A> Flow<A>.handledBy(execute: suspend (A) -> Unit): Job","dev.fritz2.core.WithJob.handledBy"]},{"name":"open infix fun <A> Flow<A>.handledBy(handler: Handler<A>)","description":"dev.fritz2.core.WithJob.handledBy","location":"core/dev.fritz2.core/-with-job/handled-by.html","searchKeys":["handledBy","open infix fun <A> Flow<A>.handledBy(handler: Handler<A>)","dev.fritz2.core.WithJob.handledBy"]},{"name":"open infix fun <E : Event> Flow<E>.handledBy(execute: suspend (E) -> Unit): Job","description":"dev.fritz2.core.WithJob.handledBy","location":"core/dev.fritz2.core/-with-job/handled-by.html","searchKeys":["handledBy","open infix fun <E : Event> Flow<E>.handledBy(execute: suspend (E) -> Unit): Job","dev.fritz2.core.WithJob.handledBy"]},{"name":"open infix fun <E : Event> Flow<E>.handledBy(handler: Handler<Unit>)","description":"dev.fritz2.core.WithJob.handledBy","location":"core/dev.fritz2.core/-with-job/handled-by.html","searchKeys":["handledBy","open infix fun <E : Event> Flow<E>.handledBy(handler: Handler<Unit>)","dev.fritz2.core.WithJob.handledBy"]},{"name":"open operator fun <X> plus(other: Lens<T, X>): Lens<P, X>","description":"dev.fritz2.core.Lens.plus","location":"core/dev.fritz2.core/-lens/plus.html","searchKeys":["plus","open operator fun <X> plus(other: Lens<T, X>): Lens<P, X>","dev.fritz2.core.Lens.plus"]},{"name":"open operator fun String.not(): Node","description":"dev.fritz2.core.Tag.not","location":"core/dev.fritz2.core/-tag/not.html","searchKeys":["not","open operator fun String.not(): Node","dev.fritz2.core.Tag.not"]},{"name":"open operator fun String.unaryPlus(): Node","description":"dev.fritz2.core.Tag.unaryPlus","location":"core/dev.fritz2.core/-tag/unary-plus.html","searchKeys":["unaryPlus","open operator fun String.unaryPlus(): Node","dev.fritz2.core.Tag.unaryPlus"]},{"name":"open operator fun invoke(data: A)","description":"dev.fritz2.core.Handler.invoke","location":"core/dev.fritz2.core/-handler/invoke.html","searchKeys":["invoke","open operator fun invoke(data: A)","dev.fritz2.core.Handler.invoke"]},{"name":"open operator fun plus(other: Shortcut): Shortcut","description":"dev.fritz2.core.ModifierShortcut.plus","location":"core/dev.fritz2.core/-modifier-shortcut/plus.html","searchKeys":["plus","open operator fun plus(other: Shortcut): Shortcut","dev.fritz2.core.ModifierShortcut.plus"]},{"name":"open operator fun plus(other: String): Shortcut","description":"dev.fritz2.core.ModifierShortcut.plus","location":"core/dev.fritz2.core/-modifier-shortcut/plus.html","searchKeys":["plus","open operator fun plus(other: String): Shortcut","dev.fritz2.core.ModifierShortcut.plus"]},{"name":"open operator override fun get(index: Int): Node","description":"dev.fritz2.core.DomNodeList.get","location":"core/dev.fritz2.core/-dom-node-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Node","dev.fritz2.core.DomNodeList.get"]},{"name":"open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","description":"dev.fritz2.core.Patch.Delete.map","location":"core/dev.fritz2.core/-patch/-delete/map.html","searchKeys":["map","open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","dev.fritz2.core.Patch.Delete.map"]},{"name":"open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","description":"dev.fritz2.core.Patch.Insert.map","location":"core/dev.fritz2.core/-patch/-insert/map.html","searchKeys":["map","open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","dev.fritz2.core.Patch.Insert.map"]},{"name":"open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","description":"dev.fritz2.core.Patch.InsertMany.map","location":"core/dev.fritz2.core/-patch/-insert-many/map.html","searchKeys":["map","open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","dev.fritz2.core.Patch.InsertMany.map"]},{"name":"open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","description":"dev.fritz2.core.Patch.Move.map","location":"core/dev.fritz2.core/-patch/-move/map.html","searchKeys":["map","open override fun <R> map(parentJob: Job, mapping: (T, Job) -> R): Patch<R>","dev.fritz2.core.Patch.Move.map"]},{"name":"open override fun <X : Event> subscribe(eventName: String, capture: Boolean, selector: X.() -> Boolean): Listener<X, E>","description":"dev.fritz2.core.Tag.subscribe","location":"core/dev.fritz2.core/-tag/subscribe.html","searchKeys":["subscribe","open override fun <X : Event> subscribe(eventName: String, capture: Boolean, selector: X.() -> Boolean): Listener<X, E>","dev.fritz2.core.Tag.subscribe"]},{"name":"open override fun <X : Event> subscribe(eventName: String, capture: Boolean, selector: X.() -> Boolean): Listener<X, Window>","description":"dev.fritz2.core.Window.subscribe","location":"core/dev.fritz2.core/-window/subscribe.html","searchKeys":["subscribe","open override fun <X : Event> subscribe(eventName: String, capture: Boolean, selector: X.() -> Boolean): Listener<X, Window>","dev.fritz2.core.Window.subscribe"]},{"name":"open override fun asShort(): Short","description":"dev.fritz2.remote.SessionState.Closed.asShort","location":"core/dev.fritz2.remote/-session-state/-closed/as-short.html","searchKeys":["asShort","open override fun asShort(): Short","dev.fritz2.remote.SessionState.Closed.asShort"]},{"name":"open override fun asShort(): Short","description":"dev.fritz2.remote.SessionState.Connecting.asShort","location":"core/dev.fritz2.remote/-session-state/-connecting/as-short.html","searchKeys":["asShort","open override fun asShort(): Short","dev.fritz2.remote.SessionState.Connecting.asShort"]},{"name":"open override fun asShort(): Short","description":"dev.fritz2.remote.SessionState.Open.asShort","location":"core/dev.fritz2.remote/-session-state/-open/as-short.html","searchKeys":["asShort","open override fun asShort(): Short","dev.fritz2.remote.SessionState.Open.asShort"]},{"name":"open override fun className(value: Flow<String>, initial: String)","description":"dev.fritz2.core.HtmlTag.className","location":"core/dev.fritz2.core/-html-tag/class-name.html","searchKeys":["className","open override fun className(value: Flow<String>, initial: String)","dev.fritz2.core.HtmlTag.className"]},{"name":"open override fun className(value: String)","description":"dev.fritz2.core.HtmlTag.className","location":"core/dev.fritz2.core/-html-tag/class-name.html","searchKeys":["className","open override fun className(value: String)","dev.fritz2.core.HtmlTag.className"]},{"name":"open override fun deserialize(hash: String): Map<String, String>","description":"dev.fritz2.routing.MapRoute.deserialize","location":"core/dev.fritz2.routing/-map-route/deserialize.html","searchKeys":["deserialize","open override fun deserialize(hash: String): Map<String, String>","dev.fritz2.routing.MapRoute.deserialize"]},{"name":"open override fun deserialize(hash: String): String","description":"dev.fritz2.routing.StringRoute.deserialize","location":"core/dev.fritz2.routing/-string-route/deserialize.html","searchKeys":["deserialize","open override fun deserialize(hash: String): String","dev.fritz2.routing.StringRoute.deserialize"]},{"name":"open override fun errorHandler(cause: Throwable)","description":"dev.fritz2.core.SubStore.errorHandler","location":"core/dev.fritz2.core/-sub-store/error-handler.html","searchKeys":["errorHandler","open override fun errorHandler(cause: Throwable)","dev.fritz2.core.SubStore.errorHandler"]},{"name":"open override fun serialize(route: Map<String, String>): String","description":"dev.fritz2.routing.MapRoute.serialize","location":"core/dev.fritz2.routing/-map-route/serialize.html","searchKeys":["serialize","open override fun serialize(route: Map<String, String>): String","dev.fritz2.routing.MapRoute.serialize"]},{"name":"open override fun serialize(route: String): String","description":"dev.fritz2.routing.StringRoute.serialize","location":"core/dev.fritz2.routing/-string-route/serialize.html","searchKeys":["serialize","open override fun serialize(route: String): String","dev.fritz2.routing.StringRoute.serialize"]},{"name":"open override fun toString(): String","description":"dev.fritz2.core.Scope.Key.toString","location":"core/dev.fritz2.core/-scope/-key/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.fritz2.core.Scope.Key.toString"]},{"name":"open override fun toString(): String","description":"dev.fritz2.core.Scope.toString","location":"core/dev.fritz2.core/-scope/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.fritz2.core.Scope.toString"]},{"name":"open override fun toString(): String","description":"dev.fritz2.remote.SessionState.Closed.toString","location":"core/dev.fritz2.remote/-session-state/-closed/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.fritz2.remote.SessionState.Closed.toString"]},{"name":"open override fun toString(): String","description":"dev.fritz2.remote.SessionState.Connecting.toString","location":"core/dev.fritz2.remote/-session-state/-connecting/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.fritz2.remote.SessionState.Connecting.toString"]},{"name":"open override fun toString(): String","description":"dev.fritz2.remote.SessionState.Open.toString","location":"core/dev.fritz2.remote/-session-state/-open/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.fritz2.remote.SessionState.Open.toString"]},{"name":"open override val aborts: Listener<Event, Window>","description":"dev.fritz2.core.Window.aborts","location":"core/dev.fritz2.core/-window/aborts.html","searchKeys":["aborts","open override val aborts: Listener<Event, Window>","dev.fritz2.core.Window.aborts"]},{"name":"open override val abortsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.abortsCaptured","location":"core/dev.fritz2.core/-window/aborts-captured.html","searchKeys":["abortsCaptured","open override val abortsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.abortsCaptured"]},{"name":"open override val afterprints: Listener<Event, Window>","description":"dev.fritz2.core.Window.afterprints","location":"core/dev.fritz2.core/-window/afterprints.html","searchKeys":["afterprints","open override val afterprints: Listener<Event, Window>","dev.fritz2.core.Window.afterprints"]},{"name":"open override val afterprintsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.afterprintsCaptured","location":"core/dev.fritz2.core/-window/afterprints-captured.html","searchKeys":["afterprintsCaptured","open override val afterprintsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.afterprintsCaptured"]},{"name":"open override val alt: Boolean = false","description":"dev.fritz2.core.Shortcut.alt","location":"core/dev.fritz2.core/-shortcut/alt.html","searchKeys":["alt","open override val alt: Boolean = false","dev.fritz2.core.Shortcut.alt"]},{"name":"open override val animationends: Listener<Event, Window>","description":"dev.fritz2.core.Window.animationends","location":"core/dev.fritz2.core/-window/animationends.html","searchKeys":["animationends","open override val animationends: Listener<Event, Window>","dev.fritz2.core.Window.animationends"]},{"name":"open override val animationendsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.animationendsCaptured","location":"core/dev.fritz2.core/-window/animationends-captured.html","searchKeys":["animationendsCaptured","open override val animationendsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.animationendsCaptured"]},{"name":"open override val animationiterations: Listener<Event, Window>","description":"dev.fritz2.core.Window.animationiterations","location":"core/dev.fritz2.core/-window/animationiterations.html","searchKeys":["animationiterations","open override val animationiterations: Listener<Event, Window>","dev.fritz2.core.Window.animationiterations"]},{"name":"open override val animationiterationsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.animationiterationsCaptured","location":"core/dev.fritz2.core/-window/animationiterations-captured.html","searchKeys":["animationiterationsCaptured","open override val animationiterationsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.animationiterationsCaptured"]},{"name":"open override val animationstarts: Listener<Event, Window>","description":"dev.fritz2.core.Window.animationstarts","location":"core/dev.fritz2.core/-window/animationstarts.html","searchKeys":["animationstarts","open override val animationstarts: Listener<Event, Window>","dev.fritz2.core.Window.animationstarts"]},{"name":"open override val animationstartsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.animationstartsCaptured","location":"core/dev.fritz2.core/-window/animationstarts-captured.html","searchKeys":["animationstartsCaptured","open override val animationstartsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.animationstartsCaptured"]},{"name":"open override val annex: RenderContext","description":"dev.fritz2.core.HtmlTag.annex","location":"core/dev.fritz2.core/-html-tag/annex.html","searchKeys":["annex","open override val annex: RenderContext","dev.fritz2.core.HtmlTag.annex"]},{"name":"open override val beforeprints: Listener<Event, Window>","description":"dev.fritz2.core.Window.beforeprints","location":"core/dev.fritz2.core/-window/beforeprints.html","searchKeys":["beforeprints","open override val beforeprints: Listener<Event, Window>","dev.fritz2.core.Window.beforeprints"]},{"name":"open override val beforeprintsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.beforeprintsCaptured","location":"core/dev.fritz2.core/-window/beforeprints-captured.html","searchKeys":["beforeprintsCaptured","open override val beforeprintsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.beforeprintsCaptured"]},{"name":"open override val beforeunloads: Listener<Event, Window>","description":"dev.fritz2.core.Window.beforeunloads","location":"core/dev.fritz2.core/-window/beforeunloads.html","searchKeys":["beforeunloads","open override val beforeunloads: Listener<Event, Window>","dev.fritz2.core.Window.beforeunloads"]},{"name":"open override val beforeunloadsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.beforeunloadsCaptured","location":"core/dev.fritz2.core/-window/beforeunloads-captured.html","searchKeys":["beforeunloadsCaptured","open override val beforeunloadsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.beforeunloadsCaptured"]},{"name":"open override val blurs: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.blurs","location":"core/dev.fritz2.core/-window/blurs.html","searchKeys":["blurs","open override val blurs: Listener<FocusEvent, Window>","dev.fritz2.core.Window.blurs"]},{"name":"open override val blursCaptured: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.blursCaptured","location":"core/dev.fritz2.core/-window/blurs-captured.html","searchKeys":["blursCaptured","open override val blursCaptured: Listener<FocusEvent, Window>","dev.fritz2.core.Window.blursCaptured"]},{"name":"open override val canplays: Listener<Event, Window>","description":"dev.fritz2.core.Window.canplays","location":"core/dev.fritz2.core/-window/canplays.html","searchKeys":["canplays","open override val canplays: Listener<Event, Window>","dev.fritz2.core.Window.canplays"]},{"name":"open override val canplaysCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.canplaysCaptured","location":"core/dev.fritz2.core/-window/canplays-captured.html","searchKeys":["canplaysCaptured","open override val canplaysCaptured: Listener<Event, Window>","dev.fritz2.core.Window.canplaysCaptured"]},{"name":"open override val canplaythroughs: Listener<Event, Window>","description":"dev.fritz2.core.Window.canplaythroughs","location":"core/dev.fritz2.core/-window/canplaythroughs.html","searchKeys":["canplaythroughs","open override val canplaythroughs: Listener<Event, Window>","dev.fritz2.core.Window.canplaythroughs"]},{"name":"open override val canplaythroughsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.canplaythroughsCaptured","location":"core/dev.fritz2.core/-window/canplaythroughs-captured.html","searchKeys":["canplaythroughsCaptured","open override val canplaythroughsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.canplaythroughsCaptured"]},{"name":"open override val changes: Listener<Event, Window>","description":"dev.fritz2.core.Window.changes","location":"core/dev.fritz2.core/-window/changes.html","searchKeys":["changes","open override val changes: Listener<Event, Window>","dev.fritz2.core.Window.changes"]},{"name":"open override val changesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.changesCaptured","location":"core/dev.fritz2.core/-window/changes-captured.html","searchKeys":["changesCaptured","open override val changesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.changesCaptured"]},{"name":"open override val clicks: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.clicks","location":"core/dev.fritz2.core/-window/clicks.html","searchKeys":["clicks","open override val clicks: Listener<MouseEvent, Window>","dev.fritz2.core.Window.clicks"]},{"name":"open override val clicksCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.clicksCaptured","location":"core/dev.fritz2.core/-window/clicks-captured.html","searchKeys":["clicksCaptured","open override val clicksCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.clicksCaptured"]},{"name":"open override val contextmenus: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.contextmenus","location":"core/dev.fritz2.core/-window/contextmenus.html","searchKeys":["contextmenus","open override val contextmenus: Listener<MouseEvent, Window>","dev.fritz2.core.Window.contextmenus"]},{"name":"open override val contextmenusCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.contextmenusCaptured","location":"core/dev.fritz2.core/-window/contextmenus-captured.html","searchKeys":["contextmenusCaptured","open override val contextmenusCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.contextmenusCaptured"]},{"name":"open override val copys: Listener<ClipboardEvent, Window>","description":"dev.fritz2.core.Window.copys","location":"core/dev.fritz2.core/-window/copys.html","searchKeys":["copys","open override val copys: Listener<ClipboardEvent, Window>","dev.fritz2.core.Window.copys"]},{"name":"open override val copysCaptured: Listener<ClipboardEvent, Window>","description":"dev.fritz2.core.Window.copysCaptured","location":"core/dev.fritz2.core/-window/copys-captured.html","searchKeys":["copysCaptured","open override val copysCaptured: Listener<ClipboardEvent, Window>","dev.fritz2.core.Window.copysCaptured"]},{"name":"open override val ctrl: Boolean = false","description":"dev.fritz2.core.Shortcut.ctrl","location":"core/dev.fritz2.core/-shortcut/ctrl.html","searchKeys":["ctrl","open override val ctrl: Boolean = false","dev.fritz2.core.Shortcut.ctrl"]},{"name":"open override val current: D","description":"dev.fritz2.core.RootStore.current","location":"core/dev.fritz2.core/-root-store/current.html","searchKeys":["current","open override val current: D","dev.fritz2.core.RootStore.current"]},{"name":"open override val current: D","description":"dev.fritz2.core.SubStore.current","location":"core/dev.fritz2.core/-sub-store/current.html","searchKeys":["current","open override val current: D","dev.fritz2.core.SubStore.current"]},{"name":"open override val current: T","description":"dev.fritz2.routing.Router.current","location":"core/dev.fritz2.routing/-router/current.html","searchKeys":["current","open override val current: T","dev.fritz2.routing.Router.current"]},{"name":"open override val cuts: Listener<ClipboardEvent, Window>","description":"dev.fritz2.core.Window.cuts","location":"core/dev.fritz2.core/-window/cuts.html","searchKeys":["cuts","open override val cuts: Listener<ClipboardEvent, Window>","dev.fritz2.core.Window.cuts"]},{"name":"open override val cutsCaptured: Listener<ClipboardEvent, Window>","description":"dev.fritz2.core.Window.cutsCaptured","location":"core/dev.fritz2.core/-window/cuts-captured.html","searchKeys":["cutsCaptured","open override val cutsCaptured: Listener<ClipboardEvent, Window>","dev.fritz2.core.Window.cutsCaptured"]},{"name":"open override val data: Flow<D>","description":"dev.fritz2.core.SubStore.data","location":"core/dev.fritz2.core/-sub-store/data.html","searchKeys":["data","open override val data: Flow<D>","dev.fritz2.core.SubStore.data"]},{"name":"open override val data: Flow<T>","description":"dev.fritz2.routing.Router.data","location":"core/dev.fritz2.routing/-router/data.html","searchKeys":["data","open override val data: Flow<T>","dev.fritz2.routing.Router.data"]},{"name":"open override val data: T","description":"dev.fritz2.core.RootInspector.data","location":"core/dev.fritz2.core/-root-inspector/data.html","searchKeys":["data","open override val data: T","dev.fritz2.core.RootInspector.data"]},{"name":"open override val data: T","description":"dev.fritz2.core.SubInspector.data","location":"core/dev.fritz2.core/-sub-inspector/data.html","searchKeys":["data","open override val data: T","dev.fritz2.core.SubInspector.data"]},{"name":"open override val dblclicks: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.dblclicks","location":"core/dev.fritz2.core/-window/dblclicks.html","searchKeys":["dblclicks","open override val dblclicks: Listener<MouseEvent, Window>","dev.fritz2.core.Window.dblclicks"]},{"name":"open override val dblclicksCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.dblclicksCaptured","location":"core/dev.fritz2.core/-window/dblclicks-captured.html","searchKeys":["dblclicksCaptured","open override val dblclicksCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.dblclicksCaptured"]},{"name":"open override val default: Map<String, String>","description":"dev.fritz2.routing.MapRoute.default","location":"core/dev.fritz2.routing/-map-route/default.html","searchKeys":["default","open override val default: Map<String, String>","dev.fritz2.routing.MapRoute.default"]},{"name":"open override val default: String","description":"dev.fritz2.routing.StringRoute.default","location":"core/dev.fritz2.routing/-string-route/default.html","searchKeys":["default","open override val default: String","dev.fritz2.routing.StringRoute.default"]},{"name":"open override val domNode: E","description":"dev.fritz2.core.HtmlTag.domNode","location":"core/dev.fritz2.core/-html-tag/dom-node.html","searchKeys":["domNode","open override val domNode: E","dev.fritz2.core.HtmlTag.domNode"]},{"name":"open override val domNode: SVGElement","description":"dev.fritz2.core.SvgTag.domNode","location":"core/dev.fritz2.core/-svg-tag/dom-node.html","searchKeys":["domNode","open override val domNode: SVGElement","dev.fritz2.core.SvgTag.domNode"]},{"name":"open override val dragends: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragends","location":"core/dev.fritz2.core/-window/dragends.html","searchKeys":["dragends","open override val dragends: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragends"]},{"name":"open override val dragendsCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragendsCaptured","location":"core/dev.fritz2.core/-window/dragends-captured.html","searchKeys":["dragendsCaptured","open override val dragendsCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragendsCaptured"]},{"name":"open override val dragenters: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragenters","location":"core/dev.fritz2.core/-window/dragenters.html","searchKeys":["dragenters","open override val dragenters: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragenters"]},{"name":"open override val dragentersCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragentersCaptured","location":"core/dev.fritz2.core/-window/dragenters-captured.html","searchKeys":["dragentersCaptured","open override val dragentersCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragentersCaptured"]},{"name":"open override val dragleaves: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragleaves","location":"core/dev.fritz2.core/-window/dragleaves.html","searchKeys":["dragleaves","open override val dragleaves: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragleaves"]},{"name":"open override val dragleavesCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragleavesCaptured","location":"core/dev.fritz2.core/-window/dragleaves-captured.html","searchKeys":["dragleavesCaptured","open override val dragleavesCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragleavesCaptured"]},{"name":"open override val dragovers: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragovers","location":"core/dev.fritz2.core/-window/dragovers.html","searchKeys":["dragovers","open override val dragovers: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragovers"]},{"name":"open override val dragoversCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragoversCaptured","location":"core/dev.fritz2.core/-window/dragovers-captured.html","searchKeys":["dragoversCaptured","open override val dragoversCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragoversCaptured"]},{"name":"open override val drags: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.drags","location":"core/dev.fritz2.core/-window/drags.html","searchKeys":["drags","open override val drags: Listener<DragEvent, Window>","dev.fritz2.core.Window.drags"]},{"name":"open override val dragsCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragsCaptured","location":"core/dev.fritz2.core/-window/drags-captured.html","searchKeys":["dragsCaptured","open override val dragsCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragsCaptured"]},{"name":"open override val dragstarts: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragstarts","location":"core/dev.fritz2.core/-window/dragstarts.html","searchKeys":["dragstarts","open override val dragstarts: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragstarts"]},{"name":"open override val dragstartsCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dragstartsCaptured","location":"core/dev.fritz2.core/-window/dragstarts-captured.html","searchKeys":["dragstartsCaptured","open override val dragstartsCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dragstartsCaptured"]},{"name":"open override val drops: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.drops","location":"core/dev.fritz2.core/-window/drops.html","searchKeys":["drops","open override val drops: Listener<DragEvent, Window>","dev.fritz2.core.Window.drops"]},{"name":"open override val dropsCaptured: Listener<DragEvent, Window>","description":"dev.fritz2.core.Window.dropsCaptured","location":"core/dev.fritz2.core/-window/drops-captured.html","searchKeys":["dropsCaptured","open override val dropsCaptured: Listener<DragEvent, Window>","dev.fritz2.core.Window.dropsCaptured"]},{"name":"open override val durationchanges: Listener<Event, Window>","description":"dev.fritz2.core.Window.durationchanges","location":"core/dev.fritz2.core/-window/durationchanges.html","searchKeys":["durationchanges","open override val durationchanges: Listener<Event, Window>","dev.fritz2.core.Window.durationchanges"]},{"name":"open override val durationchangesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.durationchangesCaptured","location":"core/dev.fritz2.core/-window/durationchanges-captured.html","searchKeys":["durationchangesCaptured","open override val durationchangesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.durationchangesCaptured"]},{"name":"open override val endeds: Listener<Event, Window>","description":"dev.fritz2.core.Window.endeds","location":"core/dev.fritz2.core/-window/endeds.html","searchKeys":["endeds","open override val endeds: Listener<Event, Window>","dev.fritz2.core.Window.endeds"]},{"name":"open override val endedsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.endedsCaptured","location":"core/dev.fritz2.core/-window/endeds-captured.html","searchKeys":["endedsCaptured","open override val endedsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.endedsCaptured"]},{"name":"open override val errors: Listener<Event, Window>","description":"dev.fritz2.core.Window.errors","location":"core/dev.fritz2.core/-window/errors.html","searchKeys":["errors","open override val errors: Listener<Event, Window>","dev.fritz2.core.Window.errors"]},{"name":"open override val errorsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.errorsCaptured","location":"core/dev.fritz2.core/-window/errors-captured.html","searchKeys":["errorsCaptured","open override val errorsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.errorsCaptured"]},{"name":"open override val focusins: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.focusins","location":"core/dev.fritz2.core/-window/focusins.html","searchKeys":["focusins","open override val focusins: Listener<FocusEvent, Window>","dev.fritz2.core.Window.focusins"]},{"name":"open override val focusinsCaptured: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.focusinsCaptured","location":"core/dev.fritz2.core/-window/focusins-captured.html","searchKeys":["focusinsCaptured","open override val focusinsCaptured: Listener<FocusEvent, Window>","dev.fritz2.core.Window.focusinsCaptured"]},{"name":"open override val focusouts: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.focusouts","location":"core/dev.fritz2.core/-window/focusouts.html","searchKeys":["focusouts","open override val focusouts: Listener<FocusEvent, Window>","dev.fritz2.core.Window.focusouts"]},{"name":"open override val focusoutsCaptured: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.focusoutsCaptured","location":"core/dev.fritz2.core/-window/focusouts-captured.html","searchKeys":["focusoutsCaptured","open override val focusoutsCaptured: Listener<FocusEvent, Window>","dev.fritz2.core.Window.focusoutsCaptured"]},{"name":"open override val focuss: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.focuss","location":"core/dev.fritz2.core/-window/focuss.html","searchKeys":["focuss","open override val focuss: Listener<FocusEvent, Window>","dev.fritz2.core.Window.focuss"]},{"name":"open override val focussCaptured: Listener<FocusEvent, Window>","description":"dev.fritz2.core.Window.focussCaptured","location":"core/dev.fritz2.core/-window/focuss-captured.html","searchKeys":["focussCaptured","open override val focussCaptured: Listener<FocusEvent, Window>","dev.fritz2.core.Window.focussCaptured"]},{"name":"open override val fullscreenchanges: Listener<Event, Window>","description":"dev.fritz2.core.Window.fullscreenchanges","location":"core/dev.fritz2.core/-window/fullscreenchanges.html","searchKeys":["fullscreenchanges","open override val fullscreenchanges: Listener<Event, Window>","dev.fritz2.core.Window.fullscreenchanges"]},{"name":"open override val fullscreenchangesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.fullscreenchangesCaptured","location":"core/dev.fritz2.core/-window/fullscreenchanges-captured.html","searchKeys":["fullscreenchangesCaptured","open override val fullscreenchangesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.fullscreenchangesCaptured"]},{"name":"open override val fullscreenerrors: Listener<Event, Window>","description":"dev.fritz2.core.Window.fullscreenerrors","location":"core/dev.fritz2.core/-window/fullscreenerrors.html","searchKeys":["fullscreenerrors","open override val fullscreenerrors: Listener<Event, Window>","dev.fritz2.core.Window.fullscreenerrors"]},{"name":"open override val fullscreenerrorsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.fullscreenerrorsCaptured","location":"core/dev.fritz2.core/-window/fullscreenerrors-captured.html","searchKeys":["fullscreenerrorsCaptured","open override val fullscreenerrorsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.fullscreenerrorsCaptured"]},{"name":"open override val hashchanges: Listener<HashChangeEvent, Window>","description":"dev.fritz2.core.Window.hashchanges","location":"core/dev.fritz2.core/-window/hashchanges.html","searchKeys":["hashchanges","open override val hashchanges: Listener<HashChangeEvent, Window>","dev.fritz2.core.Window.hashchanges"]},{"name":"open override val hashchangesCaptured: Listener<HashChangeEvent, Window>","description":"dev.fritz2.core.Window.hashchangesCaptured","location":"core/dev.fritz2.core/-window/hashchanges-captured.html","searchKeys":["hashchangesCaptured","open override val hashchangesCaptured: Listener<HashChangeEvent, Window>","dev.fritz2.core.Window.hashchangesCaptured"]},{"name":"open override val id: String","description":"dev.fritz2.core.RootStore.id","location":"core/dev.fritz2.core/-root-store/id.html","searchKeys":["id","open override val id: String","dev.fritz2.core.RootStore.id"]},{"name":"open override val id: String","description":"dev.fritz2.core.SubStore.id","location":"core/dev.fritz2.core/-sub-store/id.html","searchKeys":["id","open override val id: String","dev.fritz2.core.SubStore.id"]},{"name":"open override val id: String","description":"dev.fritz2.routing.Router.id","location":"core/dev.fritz2.routing/-router/id.html","searchKeys":["id","open override val id: String","dev.fritz2.routing.Router.id"]},{"name":"open override val id: String","description":"dev.fritz2.validation.ValidatingStore.id","location":"core/dev.fritz2.validation/-validating-store/id.html","searchKeys":["id","open override val id: String","dev.fritz2.validation.ValidatingStore.id"]},{"name":"open override val inputs: Listener<Event, Window>","description":"dev.fritz2.core.Window.inputs","location":"core/dev.fritz2.core/-window/inputs.html","searchKeys":["inputs","open override val inputs: Listener<Event, Window>","dev.fritz2.core.Window.inputs"]},{"name":"open override val inputsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.inputsCaptured","location":"core/dev.fritz2.core/-window/inputs-captured.html","searchKeys":["inputsCaptured","open override val inputsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.inputsCaptured"]},{"name":"open override val invalids: Listener<Event, Window>","description":"dev.fritz2.core.Window.invalids","location":"core/dev.fritz2.core/-window/invalids.html","searchKeys":["invalids","open override val invalids: Listener<Event, Window>","dev.fritz2.core.Window.invalids"]},{"name":"open override val invalidsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.invalidsCaptured","location":"core/dev.fritz2.core/-window/invalids-captured.html","searchKeys":["invalidsCaptured","open override val invalidsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.invalidsCaptured"]},{"name":"open override val job: Job","description":"dev.fritz2.core.HtmlTag.job","location":"core/dev.fritz2.core/-html-tag/job.html","searchKeys":["job","open override val job: Job","dev.fritz2.core.HtmlTag.job"]},{"name":"open override val job: Job","description":"dev.fritz2.core.SubStore.job","location":"core/dev.fritz2.core/-sub-store/job.html","searchKeys":["job","open override val job: Job","dev.fritz2.core.SubStore.job"]},{"name":"open override val job: Job","description":"dev.fritz2.history.History.job","location":"core/dev.fritz2.history/-history/job.html","searchKeys":["job","open override val job: Job","dev.fritz2.history.History.job"]},{"name":"open override val job: Job","description":"dev.fritz2.routing.Router.job","location":"core/dev.fritz2.routing/-router/job.html","searchKeys":["job","open override val job: Job","dev.fritz2.routing.Router.job"]},{"name":"open override val keydowns: Listener<KeyboardEvent, Window>","description":"dev.fritz2.core.Window.keydowns","location":"core/dev.fritz2.core/-window/keydowns.html","searchKeys":["keydowns","open override val keydowns: Listener<KeyboardEvent, Window>","dev.fritz2.core.Window.keydowns"]},{"name":"open override val keydownsCaptured: Listener<KeyboardEvent, Window>","description":"dev.fritz2.core.Window.keydownsCaptured","location":"core/dev.fritz2.core/-window/keydowns-captured.html","searchKeys":["keydownsCaptured","open override val keydownsCaptured: Listener<KeyboardEvent, Window>","dev.fritz2.core.Window.keydownsCaptured"]},{"name":"open override val keypresss: Listener<KeyboardEvent, Window>","description":"dev.fritz2.core.Window.keypresss","location":"core/dev.fritz2.core/-window/keypresss.html","searchKeys":["keypresss","open override val keypresss: Listener<KeyboardEvent, Window>","dev.fritz2.core.Window.keypresss"]},{"name":"open override val keypresssCaptured: Listener<KeyboardEvent, Window>","description":"dev.fritz2.core.Window.keypresssCaptured","location":"core/dev.fritz2.core/-window/keypresss-captured.html","searchKeys":["keypresssCaptured","open override val keypresssCaptured: Listener<KeyboardEvent, Window>","dev.fritz2.core.Window.keypresssCaptured"]},{"name":"open override val keyups: Listener<KeyboardEvent, Window>","description":"dev.fritz2.core.Window.keyups","location":"core/dev.fritz2.core/-window/keyups.html","searchKeys":["keyups","open override val keyups: Listener<KeyboardEvent, Window>","dev.fritz2.core.Window.keyups"]},{"name":"open override val keyupsCaptured: Listener<KeyboardEvent, Window>","description":"dev.fritz2.core.Window.keyupsCaptured","location":"core/dev.fritz2.core/-window/keyups-captured.html","searchKeys":["keyupsCaptured","open override val keyupsCaptured: Listener<KeyboardEvent, Window>","dev.fritz2.core.Window.keyupsCaptured"]},{"name":"open override val loadeddatas: Listener<Event, Window>","description":"dev.fritz2.core.Window.loadeddatas","location":"core/dev.fritz2.core/-window/loadeddatas.html","searchKeys":["loadeddatas","open override val loadeddatas: Listener<Event, Window>","dev.fritz2.core.Window.loadeddatas"]},{"name":"open override val loadeddatasCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.loadeddatasCaptured","location":"core/dev.fritz2.core/-window/loadeddatas-captured.html","searchKeys":["loadeddatasCaptured","open override val loadeddatasCaptured: Listener<Event, Window>","dev.fritz2.core.Window.loadeddatasCaptured"]},{"name":"open override val loadedmetadatas: Listener<Event, Window>","description":"dev.fritz2.core.Window.loadedmetadatas","location":"core/dev.fritz2.core/-window/loadedmetadatas.html","searchKeys":["loadedmetadatas","open override val loadedmetadatas: Listener<Event, Window>","dev.fritz2.core.Window.loadedmetadatas"]},{"name":"open override val loadedmetadatasCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.loadedmetadatasCaptured","location":"core/dev.fritz2.core/-window/loadedmetadatas-captured.html","searchKeys":["loadedmetadatasCaptured","open override val loadedmetadatasCaptured: Listener<Event, Window>","dev.fritz2.core.Window.loadedmetadatasCaptured"]},{"name":"open override val loads: Listener<Event, Window>","description":"dev.fritz2.core.Window.loads","location":"core/dev.fritz2.core/-window/loads.html","searchKeys":["loads","open override val loads: Listener<Event, Window>","dev.fritz2.core.Window.loads"]},{"name":"open override val loadsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.loadsCaptured","location":"core/dev.fritz2.core/-window/loads-captured.html","searchKeys":["loadsCaptured","open override val loadsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.loadsCaptured"]},{"name":"open override val loadstarts: Listener<ProgressEvent, Window>","description":"dev.fritz2.core.Window.loadstarts","location":"core/dev.fritz2.core/-window/loadstarts.html","searchKeys":["loadstarts","open override val loadstarts: Listener<ProgressEvent, Window>","dev.fritz2.core.Window.loadstarts"]},{"name":"open override val loadstartsCaptured: Listener<ProgressEvent, Window>","description":"dev.fritz2.core.Window.loadstartsCaptured","location":"core/dev.fritz2.core/-window/loadstarts-captured.html","searchKeys":["loadstartsCaptured","open override val loadstartsCaptured: Listener<ProgressEvent, Window>","dev.fritz2.core.Window.loadstartsCaptured"]},{"name":"open override val messages: Listener<Event, Window>","description":"dev.fritz2.core.Window.messages","location":"core/dev.fritz2.core/-window/messages.html","searchKeys":["messages","open override val messages: Listener<Event, Window>","dev.fritz2.core.Window.messages"]},{"name":"open override val messagesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.messagesCaptured","location":"core/dev.fritz2.core/-window/messages-captured.html","searchKeys":["messagesCaptured","open override val messagesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.messagesCaptured"]},{"name":"open override val meta: Boolean = false","description":"dev.fritz2.core.Shortcut.meta","location":"core/dev.fritz2.core/-shortcut/meta.html","searchKeys":["meta","open override val meta: Boolean = false","dev.fritz2.core.Shortcut.meta"]},{"name":"open override val mousedowns: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mousedowns","location":"core/dev.fritz2.core/-window/mousedowns.html","searchKeys":["mousedowns","open override val mousedowns: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mousedowns"]},{"name":"open override val mousedownsCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mousedownsCaptured","location":"core/dev.fritz2.core/-window/mousedowns-captured.html","searchKeys":["mousedownsCaptured","open override val mousedownsCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mousedownsCaptured"]},{"name":"open override val mouseenters: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseenters","location":"core/dev.fritz2.core/-window/mouseenters.html","searchKeys":["mouseenters","open override val mouseenters: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseenters"]},{"name":"open override val mouseentersCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseentersCaptured","location":"core/dev.fritz2.core/-window/mouseenters-captured.html","searchKeys":["mouseentersCaptured","open override val mouseentersCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseentersCaptured"]},{"name":"open override val mouseleaves: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseleaves","location":"core/dev.fritz2.core/-window/mouseleaves.html","searchKeys":["mouseleaves","open override val mouseleaves: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseleaves"]},{"name":"open override val mouseleavesCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseleavesCaptured","location":"core/dev.fritz2.core/-window/mouseleaves-captured.html","searchKeys":["mouseleavesCaptured","open override val mouseleavesCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseleavesCaptured"]},{"name":"open override val mousemoves: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mousemoves","location":"core/dev.fritz2.core/-window/mousemoves.html","searchKeys":["mousemoves","open override val mousemoves: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mousemoves"]},{"name":"open override val mousemovesCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mousemovesCaptured","location":"core/dev.fritz2.core/-window/mousemoves-captured.html","searchKeys":["mousemovesCaptured","open override val mousemovesCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mousemovesCaptured"]},{"name":"open override val mouseouts: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseouts","location":"core/dev.fritz2.core/-window/mouseouts.html","searchKeys":["mouseouts","open override val mouseouts: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseouts"]},{"name":"open override val mouseoutsCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseoutsCaptured","location":"core/dev.fritz2.core/-window/mouseouts-captured.html","searchKeys":["mouseoutsCaptured","open override val mouseoutsCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseoutsCaptured"]},{"name":"open override val mouseovers: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseovers","location":"core/dev.fritz2.core/-window/mouseovers.html","searchKeys":["mouseovers","open override val mouseovers: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseovers"]},{"name":"open override val mouseoversCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseoversCaptured","location":"core/dev.fritz2.core/-window/mouseovers-captured.html","searchKeys":["mouseoversCaptured","open override val mouseoversCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseoversCaptured"]},{"name":"open override val mouseups: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseups","location":"core/dev.fritz2.core/-window/mouseups.html","searchKeys":["mouseups","open override val mouseups: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseups"]},{"name":"open override val mouseupsCaptured: Listener<MouseEvent, Window>","description":"dev.fritz2.core.Window.mouseupsCaptured","location":"core/dev.fritz2.core/-window/mouseups-captured.html","searchKeys":["mouseupsCaptured","open override val mouseupsCaptured: Listener<MouseEvent, Window>","dev.fritz2.core.Window.mouseupsCaptured"]},{"name":"open override val offlines: Listener<Event, Window>","description":"dev.fritz2.core.Window.offlines","location":"core/dev.fritz2.core/-window/offlines.html","searchKeys":["offlines","open override val offlines: Listener<Event, Window>","dev.fritz2.core.Window.offlines"]},{"name":"open override val offlinesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.offlinesCaptured","location":"core/dev.fritz2.core/-window/offlines-captured.html","searchKeys":["offlinesCaptured","open override val offlinesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.offlinesCaptured"]},{"name":"open override val onlines: Listener<Event, Window>","description":"dev.fritz2.core.Window.onlines","location":"core/dev.fritz2.core/-window/onlines.html","searchKeys":["onlines","open override val onlines: Listener<Event, Window>","dev.fritz2.core.Window.onlines"]},{"name":"open override val onlinesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.onlinesCaptured","location":"core/dev.fritz2.core/-window/onlines-captured.html","searchKeys":["onlinesCaptured","open override val onlinesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.onlinesCaptured"]},{"name":"open override val opens: Listener<Event, Window>","description":"dev.fritz2.core.Window.opens","location":"core/dev.fritz2.core/-window/opens.html","searchKeys":["opens","open override val opens: Listener<Event, Window>","dev.fritz2.core.Window.opens"]},{"name":"open override val opensCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.opensCaptured","location":"core/dev.fritz2.core/-window/opens-captured.html","searchKeys":["opensCaptured","open override val opensCaptured: Listener<Event, Window>","dev.fritz2.core.Window.opensCaptured"]},{"name":"open override val pagehides: Listener<PageTransitionEvent, Window>","description":"dev.fritz2.core.Window.pagehides","location":"core/dev.fritz2.core/-window/pagehides.html","searchKeys":["pagehides","open override val pagehides: Listener<PageTransitionEvent, Window>","dev.fritz2.core.Window.pagehides"]},{"name":"open override val pagehidesCaptured: Listener<PageTransitionEvent, Window>","description":"dev.fritz2.core.Window.pagehidesCaptured","location":"core/dev.fritz2.core/-window/pagehides-captured.html","searchKeys":["pagehidesCaptured","open override val pagehidesCaptured: Listener<PageTransitionEvent, Window>","dev.fritz2.core.Window.pagehidesCaptured"]},{"name":"open override val pageshows: Listener<PageTransitionEvent, Window>","description":"dev.fritz2.core.Window.pageshows","location":"core/dev.fritz2.core/-window/pageshows.html","searchKeys":["pageshows","open override val pageshows: Listener<PageTransitionEvent, Window>","dev.fritz2.core.Window.pageshows"]},{"name":"open override val pageshowsCaptured: Listener<PageTransitionEvent, Window>","description":"dev.fritz2.core.Window.pageshowsCaptured","location":"core/dev.fritz2.core/-window/pageshows-captured.html","searchKeys":["pageshowsCaptured","open override val pageshowsCaptured: Listener<PageTransitionEvent, Window>","dev.fritz2.core.Window.pageshowsCaptured"]},{"name":"open override val pastes: Listener<ClipboardEvent, Window>","description":"dev.fritz2.core.Window.pastes","location":"core/dev.fritz2.core/-window/pastes.html","searchKeys":["pastes","open override val pastes: Listener<ClipboardEvent, Window>","dev.fritz2.core.Window.pastes"]},{"name":"open override val pastesCaptured: Listener<ClipboardEvent, Window>","description":"dev.fritz2.core.Window.pastesCaptured","location":"core/dev.fritz2.core/-window/pastes-captured.html","searchKeys":["pastesCaptured","open override val pastesCaptured: Listener<ClipboardEvent, Window>","dev.fritz2.core.Window.pastesCaptured"]},{"name":"open override val path: String","description":"dev.fritz2.core.RootInspector.path","location":"core/dev.fritz2.core/-root-inspector/path.html","searchKeys":["path","open override val path: String","dev.fritz2.core.RootInspector.path"]},{"name":"open override val path: String","description":"dev.fritz2.core.RootStore.path","location":"core/dev.fritz2.core/-root-store/path.html","searchKeys":["path","open override val path: String","dev.fritz2.core.RootStore.path"]},{"name":"open override val path: String","description":"dev.fritz2.core.SubInspector.path","location":"core/dev.fritz2.core/-sub-inspector/path.html","searchKeys":["path","open override val path: String","dev.fritz2.core.SubInspector.path"]},{"name":"open override val path: String","description":"dev.fritz2.core.SubStore.path","location":"core/dev.fritz2.core/-sub-store/path.html","searchKeys":["path","open override val path: String","dev.fritz2.core.SubStore.path"]},{"name":"open override val path: String","description":"dev.fritz2.routing.Router.path","location":"core/dev.fritz2.routing/-router/path.html","searchKeys":["path","open override val path: String","dev.fritz2.routing.Router.path"]},{"name":"open override val pauses: Listener<Event, Window>","description":"dev.fritz2.core.Window.pauses","location":"core/dev.fritz2.core/-window/pauses.html","searchKeys":["pauses","open override val pauses: Listener<Event, Window>","dev.fritz2.core.Window.pauses"]},{"name":"open override val pausesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.pausesCaptured","location":"core/dev.fritz2.core/-window/pauses-captured.html","searchKeys":["pausesCaptured","open override val pausesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.pausesCaptured"]},{"name":"open override val playings: Listener<Event, Window>","description":"dev.fritz2.core.Window.playings","location":"core/dev.fritz2.core/-window/playings.html","searchKeys":["playings","open override val playings: Listener<Event, Window>","dev.fritz2.core.Window.playings"]},{"name":"open override val playingsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.playingsCaptured","location":"core/dev.fritz2.core/-window/playings-captured.html","searchKeys":["playingsCaptured","open override val playingsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.playingsCaptured"]},{"name":"open override val plays: Listener<Event, Window>","description":"dev.fritz2.core.Window.plays","location":"core/dev.fritz2.core/-window/plays.html","searchKeys":["plays","open override val plays: Listener<Event, Window>","dev.fritz2.core.Window.plays"]},{"name":"open override val playsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.playsCaptured","location":"core/dev.fritz2.core/-window/plays-captured.html","searchKeys":["playsCaptured","open override val playsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.playsCaptured"]},{"name":"open override val popstates: Listener<PopStateEvent, Window>","description":"dev.fritz2.core.Window.popstates","location":"core/dev.fritz2.core/-window/popstates.html","searchKeys":["popstates","open override val popstates: Listener<PopStateEvent, Window>","dev.fritz2.core.Window.popstates"]},{"name":"open override val popstatesCaptured: Listener<PopStateEvent, Window>","description":"dev.fritz2.core.Window.popstatesCaptured","location":"core/dev.fritz2.core/-window/popstates-captured.html","searchKeys":["popstatesCaptured","open override val popstatesCaptured: Listener<PopStateEvent, Window>","dev.fritz2.core.Window.popstatesCaptured"]},{"name":"open override val process: (Flow<A>, Job) -> Unit","description":"dev.fritz2.core.EmittingHandler.process","location":"core/dev.fritz2.core/-emitting-handler/process.html","searchKeys":["process","open override val process: (Flow<A>, Job) -> Unit","dev.fritz2.core.EmittingHandler.process"]},{"name":"open override val process: (Flow<A>, Job) -> Unit","description":"dev.fritz2.core.SimpleHandler.process","location":"core/dev.fritz2.core/-simple-handler/process.html","searchKeys":["process","open override val process: (Flow<A>, Job) -> Unit","dev.fritz2.core.SimpleHandler.process"]},{"name":"open override val progresss: Listener<Event, Window>","description":"dev.fritz2.core.Window.progresss","location":"core/dev.fritz2.core/-window/progresss.html","searchKeys":["progresss","open override val progresss: Listener<Event, Window>","dev.fritz2.core.Window.progresss"]},{"name":"open override val progresssCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.progresssCaptured","location":"core/dev.fritz2.core/-window/progresss-captured.html","searchKeys":["progresssCaptured","open override val progresssCaptured: Listener<Event, Window>","dev.fritz2.core.Window.progresssCaptured"]},{"name":"open override val ratechanges: Listener<Event, Window>","description":"dev.fritz2.core.Window.ratechanges","location":"core/dev.fritz2.core/-window/ratechanges.html","searchKeys":["ratechanges","open override val ratechanges: Listener<Event, Window>","dev.fritz2.core.Window.ratechanges"]},{"name":"open override val ratechangesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.ratechangesCaptured","location":"core/dev.fritz2.core/-window/ratechanges-captured.html","searchKeys":["ratechangesCaptured","open override val ratechangesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.ratechangesCaptured"]},{"name":"open override val resets: Listener<Event, Window>","description":"dev.fritz2.core.Window.resets","location":"core/dev.fritz2.core/-window/resets.html","searchKeys":["resets","open override val resets: Listener<Event, Window>","dev.fritz2.core.Window.resets"]},{"name":"open override val resetsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.resetsCaptured","location":"core/dev.fritz2.core/-window/resets-captured.html","searchKeys":["resetsCaptured","open override val resetsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.resetsCaptured"]},{"name":"open override val resizes: Listener<Event, Window>","description":"dev.fritz2.core.Window.resizes","location":"core/dev.fritz2.core/-window/resizes.html","searchKeys":["resizes","open override val resizes: Listener<Event, Window>","dev.fritz2.core.Window.resizes"]},{"name":"open override val resizesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.resizesCaptured","location":"core/dev.fritz2.core/-window/resizes-captured.html","searchKeys":["resizesCaptured","open override val resizesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.resizesCaptured"]},{"name":"open override val scope: Scope","description":"dev.fritz2.core.HtmlTag.scope","location":"core/dev.fritz2.core/-html-tag/scope.html","searchKeys":["scope","open override val scope: Scope","dev.fritz2.core.HtmlTag.scope"]},{"name":"open override val scrolls: Listener<Event, Window>","description":"dev.fritz2.core.Window.scrolls","location":"core/dev.fritz2.core/-window/scrolls.html","searchKeys":["scrolls","open override val scrolls: Listener<Event, Window>","dev.fritz2.core.Window.scrolls"]},{"name":"open override val scrollsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.scrollsCaptured","location":"core/dev.fritz2.core/-window/scrolls-captured.html","searchKeys":["scrollsCaptured","open override val scrollsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.scrollsCaptured"]},{"name":"open override val searchs: Listener<Event, Window>","description":"dev.fritz2.core.Window.searchs","location":"core/dev.fritz2.core/-window/searchs.html","searchKeys":["searchs","open override val searchs: Listener<Event, Window>","dev.fritz2.core.Window.searchs"]},{"name":"open override val searchsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.searchsCaptured","location":"core/dev.fritz2.core/-window/searchs-captured.html","searchKeys":["searchsCaptured","open override val searchsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.searchsCaptured"]},{"name":"open override val seekeds: Listener<Event, Window>","description":"dev.fritz2.core.Window.seekeds","location":"core/dev.fritz2.core/-window/seekeds.html","searchKeys":["seekeds","open override val seekeds: Listener<Event, Window>","dev.fritz2.core.Window.seekeds"]},{"name":"open override val seekedsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.seekedsCaptured","location":"core/dev.fritz2.core/-window/seekeds-captured.html","searchKeys":["seekedsCaptured","open override val seekedsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.seekedsCaptured"]},{"name":"open override val seekings: Listener<Event, Window>","description":"dev.fritz2.core.Window.seekings","location":"core/dev.fritz2.core/-window/seekings.html","searchKeys":["seekings","open override val seekings: Listener<Event, Window>","dev.fritz2.core.Window.seekings"]},{"name":"open override val seekingsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.seekingsCaptured","location":"core/dev.fritz2.core/-window/seekings-captured.html","searchKeys":["seekingsCaptured","open override val seekingsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.seekingsCaptured"]},{"name":"open override val selects: Listener<Event, Window>","description":"dev.fritz2.core.Window.selects","location":"core/dev.fritz2.core/-window/selects.html","searchKeys":["selects","open override val selects: Listener<Event, Window>","dev.fritz2.core.Window.selects"]},{"name":"open override val selectsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.selectsCaptured","location":"core/dev.fritz2.core/-window/selects-captured.html","searchKeys":["selectsCaptured","open override val selectsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.selectsCaptured"]},{"name":"open override val shift: Boolean = false","description":"dev.fritz2.core.Shortcut.shift","location":"core/dev.fritz2.core/-shortcut/shift.html","searchKeys":["shift","open override val shift: Boolean = false","dev.fritz2.core.Shortcut.shift"]},{"name":"open override val shows: Listener<Event, Window>","description":"dev.fritz2.core.Window.shows","location":"core/dev.fritz2.core/-window/shows.html","searchKeys":["shows","open override val shows: Listener<Event, Window>","dev.fritz2.core.Window.shows"]},{"name":"open override val showsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.showsCaptured","location":"core/dev.fritz2.core/-window/shows-captured.html","searchKeys":["showsCaptured","open override val showsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.showsCaptured"]},{"name":"open override val size: Int","description":"dev.fritz2.core.DomNodeList.size","location":"core/dev.fritz2.core/-dom-node-list/size.html","searchKeys":["size","open override val size: Int","dev.fritz2.core.DomNodeList.size"]},{"name":"open override val stalleds: Listener<Event, Window>","description":"dev.fritz2.core.Window.stalleds","location":"core/dev.fritz2.core/-window/stalleds.html","searchKeys":["stalleds","open override val stalleds: Listener<Event, Window>","dev.fritz2.core.Window.stalleds"]},{"name":"open override val stalledsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.stalledsCaptured","location":"core/dev.fritz2.core/-window/stalleds-captured.html","searchKeys":["stalledsCaptured","open override val stalledsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.stalledsCaptured"]},{"name":"open override val storages: Listener<StorageEvent, Window>","description":"dev.fritz2.core.Window.storages","location":"core/dev.fritz2.core/-window/storages.html","searchKeys":["storages","open override val storages: Listener<StorageEvent, Window>","dev.fritz2.core.Window.storages"]},{"name":"open override val storagesCaptured: Listener<StorageEvent, Window>","description":"dev.fritz2.core.Window.storagesCaptured","location":"core/dev.fritz2.core/-window/storages-captured.html","searchKeys":["storagesCaptured","open override val storagesCaptured: Listener<StorageEvent, Window>","dev.fritz2.core.Window.storagesCaptured"]},{"name":"open override val submits: Listener<Event, Window>","description":"dev.fritz2.core.Window.submits","location":"core/dev.fritz2.core/-window/submits.html","searchKeys":["submits","open override val submits: Listener<Event, Window>","dev.fritz2.core.Window.submits"]},{"name":"open override val submitsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.submitsCaptured","location":"core/dev.fritz2.core/-window/submits-captured.html","searchKeys":["submitsCaptured","open override val submitsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.submitsCaptured"]},{"name":"open override val suspends: Listener<Event, Window>","description":"dev.fritz2.core.Window.suspends","location":"core/dev.fritz2.core/-window/suspends.html","searchKeys":["suspends","open override val suspends: Listener<Event, Window>","dev.fritz2.core.Window.suspends"]},{"name":"open override val suspendsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.suspendsCaptured","location":"core/dev.fritz2.core/-window/suspends-captured.html","searchKeys":["suspendsCaptured","open override val suspendsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.suspendsCaptured"]},{"name":"open override val timeupdates: Listener<Event, Window>","description":"dev.fritz2.core.Window.timeupdates","location":"core/dev.fritz2.core/-window/timeupdates.html","searchKeys":["timeupdates","open override val timeupdates: Listener<Event, Window>","dev.fritz2.core.Window.timeupdates"]},{"name":"open override val timeupdatesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.timeupdatesCaptured","location":"core/dev.fritz2.core/-window/timeupdates-captured.html","searchKeys":["timeupdatesCaptured","open override val timeupdatesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.timeupdatesCaptured"]},{"name":"open override val toggles: Listener<Event, Window>","description":"dev.fritz2.core.Window.toggles","location":"core/dev.fritz2.core/-window/toggles.html","searchKeys":["toggles","open override val toggles: Listener<Event, Window>","dev.fritz2.core.Window.toggles"]},{"name":"open override val togglesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.togglesCaptured","location":"core/dev.fritz2.core/-window/toggles-captured.html","searchKeys":["togglesCaptured","open override val togglesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.togglesCaptured"]},{"name":"open override val touchcancels: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchcancels","location":"core/dev.fritz2.core/-window/touchcancels.html","searchKeys":["touchcancels","open override val touchcancels: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchcancels"]},{"name":"open override val touchcancelsCaptured: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchcancelsCaptured","location":"core/dev.fritz2.core/-window/touchcancels-captured.html","searchKeys":["touchcancelsCaptured","open override val touchcancelsCaptured: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchcancelsCaptured"]},{"name":"open override val touchends: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchends","location":"core/dev.fritz2.core/-window/touchends.html","searchKeys":["touchends","open override val touchends: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchends"]},{"name":"open override val touchendsCaptured: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchendsCaptured","location":"core/dev.fritz2.core/-window/touchends-captured.html","searchKeys":["touchendsCaptured","open override val touchendsCaptured: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchendsCaptured"]},{"name":"open override val touchmoves: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchmoves","location":"core/dev.fritz2.core/-window/touchmoves.html","searchKeys":["touchmoves","open override val touchmoves: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchmoves"]},{"name":"open override val touchmovesCaptured: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchmovesCaptured","location":"core/dev.fritz2.core/-window/touchmoves-captured.html","searchKeys":["touchmovesCaptured","open override val touchmovesCaptured: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchmovesCaptured"]},{"name":"open override val touchstarts: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchstarts","location":"core/dev.fritz2.core/-window/touchstarts.html","searchKeys":["touchstarts","open override val touchstarts: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchstarts"]},{"name":"open override val touchstartsCaptured: Listener<TouchEvent, Window>","description":"dev.fritz2.core.Window.touchstartsCaptured","location":"core/dev.fritz2.core/-window/touchstarts-captured.html","searchKeys":["touchstartsCaptured","open override val touchstartsCaptured: Listener<TouchEvent, Window>","dev.fritz2.core.Window.touchstartsCaptured"]},{"name":"open override val transitionends: Listener<Event, Window>","description":"dev.fritz2.core.Window.transitionends","location":"core/dev.fritz2.core/-window/transitionends.html","searchKeys":["transitionends","open override val transitionends: Listener<Event, Window>","dev.fritz2.core.Window.transitionends"]},{"name":"open override val transitionendsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.transitionendsCaptured","location":"core/dev.fritz2.core/-window/transitionends-captured.html","searchKeys":["transitionendsCaptured","open override val transitionendsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.transitionendsCaptured"]},{"name":"open override val unloads: Listener<Event, Window>","description":"dev.fritz2.core.Window.unloads","location":"core/dev.fritz2.core/-window/unloads.html","searchKeys":["unloads","open override val unloads: Listener<Event, Window>","dev.fritz2.core.Window.unloads"]},{"name":"open override val unloadsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.unloadsCaptured","location":"core/dev.fritz2.core/-window/unloads-captured.html","searchKeys":["unloadsCaptured","open override val unloadsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.unloadsCaptured"]},{"name":"open override val update: SimpleHandler<D>","description":"dev.fritz2.core.RootStore.update","location":"core/dev.fritz2.core/-root-store/update.html","searchKeys":["update","open override val update: SimpleHandler<D>","dev.fritz2.core.RootStore.update"]},{"name":"open override val update: SimpleHandler<D>","description":"dev.fritz2.core.SubStore.update","location":"core/dev.fritz2.core/-sub-store/update.html","searchKeys":["update","open override val update: SimpleHandler<D>","dev.fritz2.core.SubStore.update"]},{"name":"open override val update: SimpleHandler<T>","description":"dev.fritz2.routing.Router.update","location":"core/dev.fritz2.routing/-router/update.html","searchKeys":["update","open override val update: SimpleHandler<T>","dev.fritz2.routing.Router.update"]},{"name":"open override val volumechanges: Listener<Event, Window>","description":"dev.fritz2.core.Window.volumechanges","location":"core/dev.fritz2.core/-window/volumechanges.html","searchKeys":["volumechanges","open override val volumechanges: Listener<Event, Window>","dev.fritz2.core.Window.volumechanges"]},{"name":"open override val volumechangesCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.volumechangesCaptured","location":"core/dev.fritz2.core/-window/volumechanges-captured.html","searchKeys":["volumechangesCaptured","open override val volumechangesCaptured: Listener<Event, Window>","dev.fritz2.core.Window.volumechangesCaptured"]},{"name":"open override val waitings: Listener<Event, Window>","description":"dev.fritz2.core.Window.waitings","location":"core/dev.fritz2.core/-window/waitings.html","searchKeys":["waitings","open override val waitings: Listener<Event, Window>","dev.fritz2.core.Window.waitings"]},{"name":"open override val waitingsCaptured: Listener<Event, Window>","description":"dev.fritz2.core.Window.waitingsCaptured","location":"core/dev.fritz2.core/-window/waitings-captured.html","searchKeys":["waitingsCaptured","open override val waitingsCaptured: Listener<Event, Window>","dev.fritz2.core.Window.waitingsCaptured"]},{"name":"open override val wheels: Listener<WheelEvent, Window>","description":"dev.fritz2.core.Window.wheels","location":"core/dev.fritz2.core/-window/wheels.html","searchKeys":["wheels","open override val wheels: Listener<WheelEvent, Window>","dev.fritz2.core.Window.wheels"]},{"name":"open override val wheelsCaptured: Listener<WheelEvent, Window>","description":"dev.fritz2.core.Window.wheelsCaptured","location":"core/dev.fritz2.core/-window/wheels-captured.html","searchKeys":["wheelsCaptured","open override val wheelsCaptured: Listener<WheelEvent, Window>","dev.fritz2.core.Window.wheelsCaptured"]},{"name":"open suspend fun apply(parent: P, mapper: suspend (T) -> T): P","description":"dev.fritz2.core.Lens.apply","location":"core/dev.fritz2.core/-lens/apply.html","searchKeys":["apply","open suspend fun apply(parent: P, mapper: suspend (T) -> T): P","dev.fritz2.core.Lens.apply"]},{"name":"open suspend fun delete(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.delete","location":"core/dev.fritz2.remote/-request/delete.html","searchKeys":["delete","open suspend fun delete(subUrl: String? = null): Response","dev.fritz2.remote.Request.delete"]},{"name":"open suspend override fun collect(collector: FlowCollector<T>)","description":"dev.fritz2.core.OnlyOnceFlow.collect","location":"core/dev.fritz2.core/-only-once-flow/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<T>)","dev.fritz2.core.OnlyOnceFlow.collect"]},{"name":"open suspend override fun enqueue(update: Update<D>)","description":"dev.fritz2.core.RootStore.enqueue","location":"core/dev.fritz2.core/-root-store/enqueue.html","searchKeys":["enqueue","open suspend override fun enqueue(update: Update<D>)","dev.fritz2.core.RootStore.enqueue"]},{"name":"open suspend override fun enqueue(update: Update<D>)","description":"dev.fritz2.core.SubStore.enqueue","location":"core/dev.fritz2.core/-sub-store/enqueue.html","searchKeys":["enqueue","open suspend override fun enqueue(update: Update<D>)","dev.fritz2.core.SubStore.enqueue"]},{"name":"open suspend override fun enqueue(update: Update<T>)","description":"dev.fritz2.routing.Router.enqueue","location":"core/dev.fritz2.routing/-router/enqueue.html","searchKeys":["enqueue","open suspend override fun enqueue(update: Update<T>)","dev.fritz2.routing.Router.enqueue"]},{"name":"open val aborts: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.aborts","location":"core/dev.fritz2.core/-with-events/aborts.html","searchKeys":["aborts","open val aborts: Listener<Event, T>","dev.fritz2.core.WithEvents.aborts"]},{"name":"open val abortsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.abortsCaptured","location":"core/dev.fritz2.core/-with-events/aborts-captured.html","searchKeys":["abortsCaptured","open val abortsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.abortsCaptured"]},{"name":"open val afterprints: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.afterprints","location":"core/dev.fritz2.core/-with-events/afterprints.html","searchKeys":["afterprints","open val afterprints: Listener<Event, T>","dev.fritz2.core.WithEvents.afterprints"]},{"name":"open val afterprintsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.afterprintsCaptured","location":"core/dev.fritz2.core/-with-events/afterprints-captured.html","searchKeys":["afterprintsCaptured","open val afterprintsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.afterprintsCaptured"]},{"name":"open val animationends: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationends","location":"core/dev.fritz2.core/-with-events/animationends.html","searchKeys":["animationends","open val animationends: Listener<Event, T>","dev.fritz2.core.WithEvents.animationends"]},{"name":"open val animationendsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationendsCaptured","location":"core/dev.fritz2.core/-with-events/animationends-captured.html","searchKeys":["animationendsCaptured","open val animationendsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.animationendsCaptured"]},{"name":"open val animationiterations: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationiterations","location":"core/dev.fritz2.core/-with-events/animationiterations.html","searchKeys":["animationiterations","open val animationiterations: Listener<Event, T>","dev.fritz2.core.WithEvents.animationiterations"]},{"name":"open val animationiterationsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationiterationsCaptured","location":"core/dev.fritz2.core/-with-events/animationiterations-captured.html","searchKeys":["animationiterationsCaptured","open val animationiterationsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.animationiterationsCaptured"]},{"name":"open val animationstarts: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationstarts","location":"core/dev.fritz2.core/-with-events/animationstarts.html","searchKeys":["animationstarts","open val animationstarts: Listener<Event, T>","dev.fritz2.core.WithEvents.animationstarts"]},{"name":"open val animationstartsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.animationstartsCaptured","location":"core/dev.fritz2.core/-with-events/animationstarts-captured.html","searchKeys":["animationstartsCaptured","open val animationstartsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.animationstartsCaptured"]},{"name":"open val beforeprints: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeprints","location":"core/dev.fritz2.core/-with-events/beforeprints.html","searchKeys":["beforeprints","open val beforeprints: Listener<Event, T>","dev.fritz2.core.WithEvents.beforeprints"]},{"name":"open val beforeprintsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeprintsCaptured","location":"core/dev.fritz2.core/-with-events/beforeprints-captured.html","searchKeys":["beforeprintsCaptured","open val beforeprintsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.beforeprintsCaptured"]},{"name":"open val beforeunloads: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeunloads","location":"core/dev.fritz2.core/-with-events/beforeunloads.html","searchKeys":["beforeunloads","open val beforeunloads: Listener<Event, T>","dev.fritz2.core.WithEvents.beforeunloads"]},{"name":"open val beforeunloadsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.beforeunloadsCaptured","location":"core/dev.fritz2.core/-with-events/beforeunloads-captured.html","searchKeys":["beforeunloadsCaptured","open val beforeunloadsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.beforeunloadsCaptured"]},{"name":"open val blurs: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.blurs","location":"core/dev.fritz2.core/-with-events/blurs.html","searchKeys":["blurs","open val blurs: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.blurs"]},{"name":"open val blursCaptured: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.blursCaptured","location":"core/dev.fritz2.core/-with-events/blurs-captured.html","searchKeys":["blursCaptured","open val blursCaptured: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.blursCaptured"]},{"name":"open val canplays: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplays","location":"core/dev.fritz2.core/-with-events/canplays.html","searchKeys":["canplays","open val canplays: Listener<Event, T>","dev.fritz2.core.WithEvents.canplays"]},{"name":"open val canplaysCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaysCaptured","location":"core/dev.fritz2.core/-with-events/canplays-captured.html","searchKeys":["canplaysCaptured","open val canplaysCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.canplaysCaptured"]},{"name":"open val canplaythroughs: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaythroughs","location":"core/dev.fritz2.core/-with-events/canplaythroughs.html","searchKeys":["canplaythroughs","open val canplaythroughs: Listener<Event, T>","dev.fritz2.core.WithEvents.canplaythroughs"]},{"name":"open val canplaythroughsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.canplaythroughsCaptured","location":"core/dev.fritz2.core/-with-events/canplaythroughs-captured.html","searchKeys":["canplaythroughsCaptured","open val canplaythroughsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.canplaythroughsCaptured"]},{"name":"open val changes: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.changes","location":"core/dev.fritz2.core/-with-events/changes.html","searchKeys":["changes","open val changes: Listener<Event, T>","dev.fritz2.core.WithEvents.changes"]},{"name":"open val changesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.changesCaptured","location":"core/dev.fritz2.core/-with-events/changes-captured.html","searchKeys":["changesCaptured","open val changesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.changesCaptured"]},{"name":"open val clicks: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.clicks","location":"core/dev.fritz2.core/-with-events/clicks.html","searchKeys":["clicks","open val clicks: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.clicks"]},{"name":"open val clicksCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.clicksCaptured","location":"core/dev.fritz2.core/-with-events/clicks-captured.html","searchKeys":["clicksCaptured","open val clicksCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.clicksCaptured"]},{"name":"open val contextmenus: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.contextmenus","location":"core/dev.fritz2.core/-with-events/contextmenus.html","searchKeys":["contextmenus","open val contextmenus: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.contextmenus"]},{"name":"open val contextmenusCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.contextmenusCaptured","location":"core/dev.fritz2.core/-with-events/contextmenus-captured.html","searchKeys":["contextmenusCaptured","open val contextmenusCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.contextmenusCaptured"]},{"name":"open val copys: Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.copys","location":"core/dev.fritz2.core/-with-events/copys.html","searchKeys":["copys","open val copys: Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.copys"]},{"name":"open val copysCaptured: Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.copysCaptured","location":"core/dev.fritz2.core/-with-events/copys-captured.html","searchKeys":["copysCaptured","open val copysCaptured: Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.copysCaptured"]},{"name":"open val cuts: Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.cuts","location":"core/dev.fritz2.core/-with-events/cuts.html","searchKeys":["cuts","open val cuts: Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.cuts"]},{"name":"open val cutsCaptured: Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.cutsCaptured","location":"core/dev.fritz2.core/-with-events/cuts-captured.html","searchKeys":["cutsCaptured","open val cutsCaptured: Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.cutsCaptured"]},{"name":"open val dblclicks: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.dblclicks","location":"core/dev.fritz2.core/-with-events/dblclicks.html","searchKeys":["dblclicks","open val dblclicks: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.dblclicks"]},{"name":"open val dblclicksCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.dblclicksCaptured","location":"core/dev.fritz2.core/-with-events/dblclicks-captured.html","searchKeys":["dblclicksCaptured","open val dblclicksCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.dblclicksCaptured"]},{"name":"open val dragends: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragends","location":"core/dev.fritz2.core/-with-events/dragends.html","searchKeys":["dragends","open val dragends: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragends"]},{"name":"open val dragendsCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragendsCaptured","location":"core/dev.fritz2.core/-with-events/dragends-captured.html","searchKeys":["dragendsCaptured","open val dragendsCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragendsCaptured"]},{"name":"open val dragenters: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragenters","location":"core/dev.fritz2.core/-with-events/dragenters.html","searchKeys":["dragenters","open val dragenters: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragenters"]},{"name":"open val dragentersCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragentersCaptured","location":"core/dev.fritz2.core/-with-events/dragenters-captured.html","searchKeys":["dragentersCaptured","open val dragentersCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragentersCaptured"]},{"name":"open val dragleaves: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragleaves","location":"core/dev.fritz2.core/-with-events/dragleaves.html","searchKeys":["dragleaves","open val dragleaves: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragleaves"]},{"name":"open val dragleavesCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragleavesCaptured","location":"core/dev.fritz2.core/-with-events/dragleaves-captured.html","searchKeys":["dragleavesCaptured","open val dragleavesCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragleavesCaptured"]},{"name":"open val dragovers: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragovers","location":"core/dev.fritz2.core/-with-events/dragovers.html","searchKeys":["dragovers","open val dragovers: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragovers"]},{"name":"open val dragoversCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragoversCaptured","location":"core/dev.fritz2.core/-with-events/dragovers-captured.html","searchKeys":["dragoversCaptured","open val dragoversCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragoversCaptured"]},{"name":"open val drags: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.drags","location":"core/dev.fritz2.core/-with-events/drags.html","searchKeys":["drags","open val drags: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.drags"]},{"name":"open val dragsCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragsCaptured","location":"core/dev.fritz2.core/-with-events/drags-captured.html","searchKeys":["dragsCaptured","open val dragsCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragsCaptured"]},{"name":"open val dragstarts: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragstarts","location":"core/dev.fritz2.core/-with-events/dragstarts.html","searchKeys":["dragstarts","open val dragstarts: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragstarts"]},{"name":"open val dragstartsCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dragstartsCaptured","location":"core/dev.fritz2.core/-with-events/dragstarts-captured.html","searchKeys":["dragstartsCaptured","open val dragstartsCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dragstartsCaptured"]},{"name":"open val drops: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.drops","location":"core/dev.fritz2.core/-with-events/drops.html","searchKeys":["drops","open val drops: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.drops"]},{"name":"open val dropsCaptured: Listener<DragEvent, T>","description":"dev.fritz2.core.WithEvents.dropsCaptured","location":"core/dev.fritz2.core/-with-events/drops-captured.html","searchKeys":["dropsCaptured","open val dropsCaptured: Listener<DragEvent, T>","dev.fritz2.core.WithEvents.dropsCaptured"]},{"name":"open val durationchanges: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.durationchanges","location":"core/dev.fritz2.core/-with-events/durationchanges.html","searchKeys":["durationchanges","open val durationchanges: Listener<Event, T>","dev.fritz2.core.WithEvents.durationchanges"]},{"name":"open val durationchangesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.durationchangesCaptured","location":"core/dev.fritz2.core/-with-events/durationchanges-captured.html","searchKeys":["durationchangesCaptured","open val durationchangesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.durationchangesCaptured"]},{"name":"open val endeds: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.endeds","location":"core/dev.fritz2.core/-with-events/endeds.html","searchKeys":["endeds","open val endeds: Listener<Event, T>","dev.fritz2.core.WithEvents.endeds"]},{"name":"open val endedsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.endedsCaptured","location":"core/dev.fritz2.core/-with-events/endeds-captured.html","searchKeys":["endedsCaptured","open val endedsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.endedsCaptured"]},{"name":"open val errors: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.errors","location":"core/dev.fritz2.core/-with-events/errors.html","searchKeys":["errors","open val errors: Listener<Event, T>","dev.fritz2.core.WithEvents.errors"]},{"name":"open val errorsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.errorsCaptured","location":"core/dev.fritz2.core/-with-events/errors-captured.html","searchKeys":["errorsCaptured","open val errorsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.errorsCaptured"]},{"name":"open val focusins: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusins","location":"core/dev.fritz2.core/-with-events/focusins.html","searchKeys":["focusins","open val focusins: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusins"]},{"name":"open val focusinsCaptured: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusinsCaptured","location":"core/dev.fritz2.core/-with-events/focusins-captured.html","searchKeys":["focusinsCaptured","open val focusinsCaptured: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusinsCaptured"]},{"name":"open val focusouts: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusouts","location":"core/dev.fritz2.core/-with-events/focusouts.html","searchKeys":["focusouts","open val focusouts: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusouts"]},{"name":"open val focusoutsCaptured: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focusoutsCaptured","location":"core/dev.fritz2.core/-with-events/focusouts-captured.html","searchKeys":["focusoutsCaptured","open val focusoutsCaptured: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focusoutsCaptured"]},{"name":"open val focuss: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focuss","location":"core/dev.fritz2.core/-with-events/focuss.html","searchKeys":["focuss","open val focuss: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focuss"]},{"name":"open val focussCaptured: Listener<FocusEvent, T>","description":"dev.fritz2.core.WithEvents.focussCaptured","location":"core/dev.fritz2.core/-with-events/focuss-captured.html","searchKeys":["focussCaptured","open val focussCaptured: Listener<FocusEvent, T>","dev.fritz2.core.WithEvents.focussCaptured"]},{"name":"open val fullscreenchanges: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenchanges","location":"core/dev.fritz2.core/-with-events/fullscreenchanges.html","searchKeys":["fullscreenchanges","open val fullscreenchanges: Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenchanges"]},{"name":"open val fullscreenchangesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenchangesCaptured","location":"core/dev.fritz2.core/-with-events/fullscreenchanges-captured.html","searchKeys":["fullscreenchangesCaptured","open val fullscreenchangesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenchangesCaptured"]},{"name":"open val fullscreenerrors: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenerrors","location":"core/dev.fritz2.core/-with-events/fullscreenerrors.html","searchKeys":["fullscreenerrors","open val fullscreenerrors: Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenerrors"]},{"name":"open val fullscreenerrorsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.fullscreenerrorsCaptured","location":"core/dev.fritz2.core/-with-events/fullscreenerrors-captured.html","searchKeys":["fullscreenerrorsCaptured","open val fullscreenerrorsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.fullscreenerrorsCaptured"]},{"name":"open val hashchanges: Listener<HashChangeEvent, T>","description":"dev.fritz2.core.WithEvents.hashchanges","location":"core/dev.fritz2.core/-with-events/hashchanges.html","searchKeys":["hashchanges","open val hashchanges: Listener<HashChangeEvent, T>","dev.fritz2.core.WithEvents.hashchanges"]},{"name":"open val hashchangesCaptured: Listener<HashChangeEvent, T>","description":"dev.fritz2.core.WithEvents.hashchangesCaptured","location":"core/dev.fritz2.core/-with-events/hashchanges-captured.html","searchKeys":["hashchangesCaptured","open val hashchangesCaptured: Listener<HashChangeEvent, T>","dev.fritz2.core.WithEvents.hashchangesCaptured"]},{"name":"open val inputs: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.inputs","location":"core/dev.fritz2.core/-with-events/inputs.html","searchKeys":["inputs","open val inputs: Listener<Event, T>","dev.fritz2.core.WithEvents.inputs"]},{"name":"open val inputsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.inputsCaptured","location":"core/dev.fritz2.core/-with-events/inputs-captured.html","searchKeys":["inputsCaptured","open val inputsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.inputsCaptured"]},{"name":"open val invalids: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.invalids","location":"core/dev.fritz2.core/-with-events/invalids.html","searchKeys":["invalids","open val invalids: Listener<Event, T>","dev.fritz2.core.WithEvents.invalids"]},{"name":"open val invalidsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.invalidsCaptured","location":"core/dev.fritz2.core/-with-events/invalids-captured.html","searchKeys":["invalidsCaptured","open val invalidsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.invalidsCaptured"]},{"name":"open val keydowns: Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keydowns","location":"core/dev.fritz2.core/-with-events/keydowns.html","searchKeys":["keydowns","open val keydowns: Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keydowns"]},{"name":"open val keydownsCaptured: Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keydownsCaptured","location":"core/dev.fritz2.core/-with-events/keydowns-captured.html","searchKeys":["keydownsCaptured","open val keydownsCaptured: Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keydownsCaptured"]},{"name":"open val keypresss: Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keypresss","location":"core/dev.fritz2.core/-with-events/keypresss.html","searchKeys":["keypresss","open val keypresss: Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keypresss"]},{"name":"open val keypresssCaptured: Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keypresssCaptured","location":"core/dev.fritz2.core/-with-events/keypresss-captured.html","searchKeys":["keypresssCaptured","open val keypresssCaptured: Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keypresssCaptured"]},{"name":"open val keyups: Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keyups","location":"core/dev.fritz2.core/-with-events/keyups.html","searchKeys":["keyups","open val keyups: Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keyups"]},{"name":"open val keyupsCaptured: Listener<KeyboardEvent, T>","description":"dev.fritz2.core.WithEvents.keyupsCaptured","location":"core/dev.fritz2.core/-with-events/keyups-captured.html","searchKeys":["keyupsCaptured","open val keyupsCaptured: Listener<KeyboardEvent, T>","dev.fritz2.core.WithEvents.keyupsCaptured"]},{"name":"open val loadeddatas: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadeddatas","location":"core/dev.fritz2.core/-with-events/loadeddatas.html","searchKeys":["loadeddatas","open val loadeddatas: Listener<Event, T>","dev.fritz2.core.WithEvents.loadeddatas"]},{"name":"open val loadeddatasCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadeddatasCaptured","location":"core/dev.fritz2.core/-with-events/loadeddatas-captured.html","searchKeys":["loadeddatasCaptured","open val loadeddatasCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.loadeddatasCaptured"]},{"name":"open val loadedmetadatas: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadedmetadatas","location":"core/dev.fritz2.core/-with-events/loadedmetadatas.html","searchKeys":["loadedmetadatas","open val loadedmetadatas: Listener<Event, T>","dev.fritz2.core.WithEvents.loadedmetadatas"]},{"name":"open val loadedmetadatasCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadedmetadatasCaptured","location":"core/dev.fritz2.core/-with-events/loadedmetadatas-captured.html","searchKeys":["loadedmetadatasCaptured","open val loadedmetadatasCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.loadedmetadatasCaptured"]},{"name":"open val loads: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loads","location":"core/dev.fritz2.core/-with-events/loads.html","searchKeys":["loads","open val loads: Listener<Event, T>","dev.fritz2.core.WithEvents.loads"]},{"name":"open val loadsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.loadsCaptured","location":"core/dev.fritz2.core/-with-events/loads-captured.html","searchKeys":["loadsCaptured","open val loadsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.loadsCaptured"]},{"name":"open val loadstarts: Listener<ProgressEvent, T>","description":"dev.fritz2.core.WithEvents.loadstarts","location":"core/dev.fritz2.core/-with-events/loadstarts.html","searchKeys":["loadstarts","open val loadstarts: Listener<ProgressEvent, T>","dev.fritz2.core.WithEvents.loadstarts"]},{"name":"open val loadstartsCaptured: Listener<ProgressEvent, T>","description":"dev.fritz2.core.WithEvents.loadstartsCaptured","location":"core/dev.fritz2.core/-with-events/loadstarts-captured.html","searchKeys":["loadstartsCaptured","open val loadstartsCaptured: Listener<ProgressEvent, T>","dev.fritz2.core.WithEvents.loadstartsCaptured"]},{"name":"open val messages: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.messages","location":"core/dev.fritz2.core/-with-events/messages.html","searchKeys":["messages","open val messages: Listener<Event, T>","dev.fritz2.core.WithEvents.messages"]},{"name":"open val messagesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.messagesCaptured","location":"core/dev.fritz2.core/-with-events/messages-captured.html","searchKeys":["messagesCaptured","open val messagesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.messagesCaptured"]},{"name":"open val mousedowns: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousedowns","location":"core/dev.fritz2.core/-with-events/mousedowns.html","searchKeys":["mousedowns","open val mousedowns: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousedowns"]},{"name":"open val mousedownsCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousedownsCaptured","location":"core/dev.fritz2.core/-with-events/mousedowns-captured.html","searchKeys":["mousedownsCaptured","open val mousedownsCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousedownsCaptured"]},{"name":"open val mouseenters: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseenters","location":"core/dev.fritz2.core/-with-events/mouseenters.html","searchKeys":["mouseenters","open val mouseenters: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseenters"]},{"name":"open val mouseentersCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseentersCaptured","location":"core/dev.fritz2.core/-with-events/mouseenters-captured.html","searchKeys":["mouseentersCaptured","open val mouseentersCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseentersCaptured"]},{"name":"open val mouseleaves: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseleaves","location":"core/dev.fritz2.core/-with-events/mouseleaves.html","searchKeys":["mouseleaves","open val mouseleaves: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseleaves"]},{"name":"open val mouseleavesCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseleavesCaptured","location":"core/dev.fritz2.core/-with-events/mouseleaves-captured.html","searchKeys":["mouseleavesCaptured","open val mouseleavesCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseleavesCaptured"]},{"name":"open val mousemoves: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousemoves","location":"core/dev.fritz2.core/-with-events/mousemoves.html","searchKeys":["mousemoves","open val mousemoves: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousemoves"]},{"name":"open val mousemovesCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mousemovesCaptured","location":"core/dev.fritz2.core/-with-events/mousemoves-captured.html","searchKeys":["mousemovesCaptured","open val mousemovesCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mousemovesCaptured"]},{"name":"open val mouseouts: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseouts","location":"core/dev.fritz2.core/-with-events/mouseouts.html","searchKeys":["mouseouts","open val mouseouts: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseouts"]},{"name":"open val mouseoutsCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoutsCaptured","location":"core/dev.fritz2.core/-with-events/mouseouts-captured.html","searchKeys":["mouseoutsCaptured","open val mouseoutsCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoutsCaptured"]},{"name":"open val mouseovers: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseovers","location":"core/dev.fritz2.core/-with-events/mouseovers.html","searchKeys":["mouseovers","open val mouseovers: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseovers"]},{"name":"open val mouseoversCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseoversCaptured","location":"core/dev.fritz2.core/-with-events/mouseovers-captured.html","searchKeys":["mouseoversCaptured","open val mouseoversCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseoversCaptured"]},{"name":"open val mouseups: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseups","location":"core/dev.fritz2.core/-with-events/mouseups.html","searchKeys":["mouseups","open val mouseups: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseups"]},{"name":"open val mouseupsCaptured: Listener<MouseEvent, T>","description":"dev.fritz2.core.WithEvents.mouseupsCaptured","location":"core/dev.fritz2.core/-with-events/mouseups-captured.html","searchKeys":["mouseupsCaptured","open val mouseupsCaptured: Listener<MouseEvent, T>","dev.fritz2.core.WithEvents.mouseupsCaptured"]},{"name":"open val navTo: SimpleHandler<T>","description":"dev.fritz2.routing.Router.navTo","location":"core/dev.fritz2.routing/-router/nav-to.html","searchKeys":["navTo","open val navTo: SimpleHandler<T>","dev.fritz2.routing.Router.navTo"]},{"name":"open val offlines: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.offlines","location":"core/dev.fritz2.core/-with-events/offlines.html","searchKeys":["offlines","open val offlines: Listener<Event, T>","dev.fritz2.core.WithEvents.offlines"]},{"name":"open val offlinesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.offlinesCaptured","location":"core/dev.fritz2.core/-with-events/offlines-captured.html","searchKeys":["offlinesCaptured","open val offlinesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.offlinesCaptured"]},{"name":"open val onlines: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.onlines","location":"core/dev.fritz2.core/-with-events/onlines.html","searchKeys":["onlines","open val onlines: Listener<Event, T>","dev.fritz2.core.WithEvents.onlines"]},{"name":"open val onlinesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.onlinesCaptured","location":"core/dev.fritz2.core/-with-events/onlines-captured.html","searchKeys":["onlinesCaptured","open val onlinesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.onlinesCaptured"]},{"name":"open val opens: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.opens","location":"core/dev.fritz2.core/-with-events/opens.html","searchKeys":["opens","open val opens: Listener<Event, T>","dev.fritz2.core.WithEvents.opens"]},{"name":"open val opensCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.opensCaptured","location":"core/dev.fritz2.core/-with-events/opens-captured.html","searchKeys":["opensCaptured","open val opensCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.opensCaptured"]},{"name":"open val pagehides: Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pagehides","location":"core/dev.fritz2.core/-with-events/pagehides.html","searchKeys":["pagehides","open val pagehides: Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pagehides"]},{"name":"open val pagehidesCaptured: Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pagehidesCaptured","location":"core/dev.fritz2.core/-with-events/pagehides-captured.html","searchKeys":["pagehidesCaptured","open val pagehidesCaptured: Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pagehidesCaptured"]},{"name":"open val pageshows: Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pageshows","location":"core/dev.fritz2.core/-with-events/pageshows.html","searchKeys":["pageshows","open val pageshows: Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pageshows"]},{"name":"open val pageshowsCaptured: Listener<PageTransitionEvent, T>","description":"dev.fritz2.core.WithEvents.pageshowsCaptured","location":"core/dev.fritz2.core/-with-events/pageshows-captured.html","searchKeys":["pageshowsCaptured","open val pageshowsCaptured: Listener<PageTransitionEvent, T>","dev.fritz2.core.WithEvents.pageshowsCaptured"]},{"name":"open val pastes: Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.pastes","location":"core/dev.fritz2.core/-with-events/pastes.html","searchKeys":["pastes","open val pastes: Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.pastes"]},{"name":"open val pastesCaptured: Listener<ClipboardEvent, T>","description":"dev.fritz2.core.WithEvents.pastesCaptured","location":"core/dev.fritz2.core/-with-events/pastes-captured.html","searchKeys":["pastesCaptured","open val pastesCaptured: Listener<ClipboardEvent, T>","dev.fritz2.core.WithEvents.pastesCaptured"]},{"name":"open val pauses: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.pauses","location":"core/dev.fritz2.core/-with-events/pauses.html","searchKeys":["pauses","open val pauses: Listener<Event, T>","dev.fritz2.core.WithEvents.pauses"]},{"name":"open val pausesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.pausesCaptured","location":"core/dev.fritz2.core/-with-events/pauses-captured.html","searchKeys":["pausesCaptured","open val pausesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.pausesCaptured"]},{"name":"open val playings: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playings","location":"core/dev.fritz2.core/-with-events/playings.html","searchKeys":["playings","open val playings: Listener<Event, T>","dev.fritz2.core.WithEvents.playings"]},{"name":"open val playingsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playingsCaptured","location":"core/dev.fritz2.core/-with-events/playings-captured.html","searchKeys":["playingsCaptured","open val playingsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.playingsCaptured"]},{"name":"open val plays: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.plays","location":"core/dev.fritz2.core/-with-events/plays.html","searchKeys":["plays","open val plays: Listener<Event, T>","dev.fritz2.core.WithEvents.plays"]},{"name":"open val playsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.playsCaptured","location":"core/dev.fritz2.core/-with-events/plays-captured.html","searchKeys":["playsCaptured","open val playsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.playsCaptured"]},{"name":"open val popstates: Listener<PopStateEvent, T>","description":"dev.fritz2.core.WithEvents.popstates","location":"core/dev.fritz2.core/-with-events/popstates.html","searchKeys":["popstates","open val popstates: Listener<PopStateEvent, T>","dev.fritz2.core.WithEvents.popstates"]},{"name":"open val popstatesCaptured: Listener<PopStateEvent, T>","description":"dev.fritz2.core.WithEvents.popstatesCaptured","location":"core/dev.fritz2.core/-with-events/popstates-captured.html","searchKeys":["popstatesCaptured","open val popstatesCaptured: Listener<PopStateEvent, T>","dev.fritz2.core.WithEvents.popstatesCaptured"]},{"name":"open val progresss: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.progresss","location":"core/dev.fritz2.core/-with-events/progresss.html","searchKeys":["progresss","open val progresss: Listener<Event, T>","dev.fritz2.core.WithEvents.progresss"]},{"name":"open val progresssCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.progresssCaptured","location":"core/dev.fritz2.core/-with-events/progresss-captured.html","searchKeys":["progresssCaptured","open val progresssCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.progresssCaptured"]},{"name":"open val ratechanges: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.ratechanges","location":"core/dev.fritz2.core/-with-events/ratechanges.html","searchKeys":["ratechanges","open val ratechanges: Listener<Event, T>","dev.fritz2.core.WithEvents.ratechanges"]},{"name":"open val ratechangesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.ratechangesCaptured","location":"core/dev.fritz2.core/-with-events/ratechanges-captured.html","searchKeys":["ratechangesCaptured","open val ratechangesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.ratechangesCaptured"]},{"name":"open val resets: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resets","location":"core/dev.fritz2.core/-with-events/resets.html","searchKeys":["resets","open val resets: Listener<Event, T>","dev.fritz2.core.WithEvents.resets"]},{"name":"open val resetsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resetsCaptured","location":"core/dev.fritz2.core/-with-events/resets-captured.html","searchKeys":["resetsCaptured","open val resetsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.resetsCaptured"]},{"name":"open val resizes: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resizes","location":"core/dev.fritz2.core/-with-events/resizes.html","searchKeys":["resizes","open val resizes: Listener<Event, T>","dev.fritz2.core.WithEvents.resizes"]},{"name":"open val resizesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.resizesCaptured","location":"core/dev.fritz2.core/-with-events/resizes-captured.html","searchKeys":["resizesCaptured","open val resizesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.resizesCaptured"]},{"name":"open val scrolls: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.scrolls","location":"core/dev.fritz2.core/-with-events/scrolls.html","searchKeys":["scrolls","open val scrolls: Listener<Event, T>","dev.fritz2.core.WithEvents.scrolls"]},{"name":"open val scrollsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.scrollsCaptured","location":"core/dev.fritz2.core/-with-events/scrolls-captured.html","searchKeys":["scrollsCaptured","open val scrollsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.scrollsCaptured"]},{"name":"open val searchs: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.searchs","location":"core/dev.fritz2.core/-with-events/searchs.html","searchKeys":["searchs","open val searchs: Listener<Event, T>","dev.fritz2.core.WithEvents.searchs"]},{"name":"open val searchsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.searchsCaptured","location":"core/dev.fritz2.core/-with-events/searchs-captured.html","searchKeys":["searchsCaptured","open val searchsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.searchsCaptured"]},{"name":"open val seekeds: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekeds","location":"core/dev.fritz2.core/-with-events/seekeds.html","searchKeys":["seekeds","open val seekeds: Listener<Event, T>","dev.fritz2.core.WithEvents.seekeds"]},{"name":"open val seekedsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekedsCaptured","location":"core/dev.fritz2.core/-with-events/seekeds-captured.html","searchKeys":["seekedsCaptured","open val seekedsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.seekedsCaptured"]},{"name":"open val seekings: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekings","location":"core/dev.fritz2.core/-with-events/seekings.html","searchKeys":["seekings","open val seekings: Listener<Event, T>","dev.fritz2.core.WithEvents.seekings"]},{"name":"open val seekingsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.seekingsCaptured","location":"core/dev.fritz2.core/-with-events/seekings-captured.html","searchKeys":["seekingsCaptured","open val seekingsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.seekingsCaptured"]},{"name":"open val selects: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.selects","location":"core/dev.fritz2.core/-with-events/selects.html","searchKeys":["selects","open val selects: Listener<Event, T>","dev.fritz2.core.WithEvents.selects"]},{"name":"open val selectsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.selectsCaptured","location":"core/dev.fritz2.core/-with-events/selects-captured.html","searchKeys":["selectsCaptured","open val selectsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.selectsCaptured"]},{"name":"open val shows: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.shows","location":"core/dev.fritz2.core/-with-events/shows.html","searchKeys":["shows","open val shows: Listener<Event, T>","dev.fritz2.core.WithEvents.shows"]},{"name":"open val showsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.showsCaptured","location":"core/dev.fritz2.core/-with-events/shows-captured.html","searchKeys":["showsCaptured","open val showsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.showsCaptured"]},{"name":"open val stalleds: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.stalleds","location":"core/dev.fritz2.core/-with-events/stalleds.html","searchKeys":["stalleds","open val stalleds: Listener<Event, T>","dev.fritz2.core.WithEvents.stalleds"]},{"name":"open val stalledsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.stalledsCaptured","location":"core/dev.fritz2.core/-with-events/stalleds-captured.html","searchKeys":["stalledsCaptured","open val stalledsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.stalledsCaptured"]},{"name":"open val statusCodesEnforcingAuthentication: Set<Int>","description":"dev.fritz2.remote.Authentication.statusCodesEnforcingAuthentication","location":"core/dev.fritz2.remote/-authentication/status-codes-enforcing-authentication.html","searchKeys":["statusCodesEnforcingAuthentication","open val statusCodesEnforcingAuthentication: Set<Int>","dev.fritz2.remote.Authentication.statusCodesEnforcingAuthentication"]},{"name":"open val storages: Listener<StorageEvent, T>","description":"dev.fritz2.core.WithEvents.storages","location":"core/dev.fritz2.core/-with-events/storages.html","searchKeys":["storages","open val storages: Listener<StorageEvent, T>","dev.fritz2.core.WithEvents.storages"]},{"name":"open val storagesCaptured: Listener<StorageEvent, T>","description":"dev.fritz2.core.WithEvents.storagesCaptured","location":"core/dev.fritz2.core/-with-events/storages-captured.html","searchKeys":["storagesCaptured","open val storagesCaptured: Listener<StorageEvent, T>","dev.fritz2.core.WithEvents.storagesCaptured"]},{"name":"open val submits: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.submits","location":"core/dev.fritz2.core/-with-events/submits.html","searchKeys":["submits","open val submits: Listener<Event, T>","dev.fritz2.core.WithEvents.submits"]},{"name":"open val submitsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.submitsCaptured","location":"core/dev.fritz2.core/-with-events/submits-captured.html","searchKeys":["submitsCaptured","open val submitsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.submitsCaptured"]},{"name":"open val suspends: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.suspends","location":"core/dev.fritz2.core/-with-events/suspends.html","searchKeys":["suspends","open val suspends: Listener<Event, T>","dev.fritz2.core.WithEvents.suspends"]},{"name":"open val suspendsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.suspendsCaptured","location":"core/dev.fritz2.core/-with-events/suspends-captured.html","searchKeys":["suspendsCaptured","open val suspendsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.suspendsCaptured"]},{"name":"open val timeupdates: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.timeupdates","location":"core/dev.fritz2.core/-with-events/timeupdates.html","searchKeys":["timeupdates","open val timeupdates: Listener<Event, T>","dev.fritz2.core.WithEvents.timeupdates"]},{"name":"open val timeupdatesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.timeupdatesCaptured","location":"core/dev.fritz2.core/-with-events/timeupdates-captured.html","searchKeys":["timeupdatesCaptured","open val timeupdatesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.timeupdatesCaptured"]},{"name":"open val toggles: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.toggles","location":"core/dev.fritz2.core/-with-events/toggles.html","searchKeys":["toggles","open val toggles: Listener<Event, T>","dev.fritz2.core.WithEvents.toggles"]},{"name":"open val togglesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.togglesCaptured","location":"core/dev.fritz2.core/-with-events/toggles-captured.html","searchKeys":["togglesCaptured","open val togglesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.togglesCaptured"]},{"name":"open val touchcancels: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchcancels","location":"core/dev.fritz2.core/-with-events/touchcancels.html","searchKeys":["touchcancels","open val touchcancels: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchcancels"]},{"name":"open val touchcancelsCaptured: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchcancelsCaptured","location":"core/dev.fritz2.core/-with-events/touchcancels-captured.html","searchKeys":["touchcancelsCaptured","open val touchcancelsCaptured: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchcancelsCaptured"]},{"name":"open val touchends: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchends","location":"core/dev.fritz2.core/-with-events/touchends.html","searchKeys":["touchends","open val touchends: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchends"]},{"name":"open val touchendsCaptured: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchendsCaptured","location":"core/dev.fritz2.core/-with-events/touchends-captured.html","searchKeys":["touchendsCaptured","open val touchendsCaptured: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchendsCaptured"]},{"name":"open val touchmoves: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchmoves","location":"core/dev.fritz2.core/-with-events/touchmoves.html","searchKeys":["touchmoves","open val touchmoves: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchmoves"]},{"name":"open val touchmovesCaptured: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchmovesCaptured","location":"core/dev.fritz2.core/-with-events/touchmoves-captured.html","searchKeys":["touchmovesCaptured","open val touchmovesCaptured: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchmovesCaptured"]},{"name":"open val touchstarts: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchstarts","location":"core/dev.fritz2.core/-with-events/touchstarts.html","searchKeys":["touchstarts","open val touchstarts: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchstarts"]},{"name":"open val touchstartsCaptured: Listener<TouchEvent, T>","description":"dev.fritz2.core.WithEvents.touchstartsCaptured","location":"core/dev.fritz2.core/-with-events/touchstarts-captured.html","searchKeys":["touchstartsCaptured","open val touchstartsCaptured: Listener<TouchEvent, T>","dev.fritz2.core.WithEvents.touchstartsCaptured"]},{"name":"open val transitionends: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.transitionends","location":"core/dev.fritz2.core/-with-events/transitionends.html","searchKeys":["transitionends","open val transitionends: Listener<Event, T>","dev.fritz2.core.WithEvents.transitionends"]},{"name":"open val transitionendsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.transitionendsCaptured","location":"core/dev.fritz2.core/-with-events/transitionends-captured.html","searchKeys":["transitionendsCaptured","open val transitionendsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.transitionendsCaptured"]},{"name":"open val unloads: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.unloads","location":"core/dev.fritz2.core/-with-events/unloads.html","searchKeys":["unloads","open val unloads: Listener<Event, T>","dev.fritz2.core.WithEvents.unloads"]},{"name":"open val unloadsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.unloadsCaptured","location":"core/dev.fritz2.core/-with-events/unloads-captured.html","searchKeys":["unloadsCaptured","open val unloadsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.unloadsCaptured"]},{"name":"open val volumechanges: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.volumechanges","location":"core/dev.fritz2.core/-with-events/volumechanges.html","searchKeys":["volumechanges","open val volumechanges: Listener<Event, T>","dev.fritz2.core.WithEvents.volumechanges"]},{"name":"open val volumechangesCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.volumechangesCaptured","location":"core/dev.fritz2.core/-with-events/volumechanges-captured.html","searchKeys":["volumechangesCaptured","open val volumechangesCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.volumechangesCaptured"]},{"name":"open val waitings: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.waitings","location":"core/dev.fritz2.core/-with-events/waitings.html","searchKeys":["waitings","open val waitings: Listener<Event, T>","dev.fritz2.core.WithEvents.waitings"]},{"name":"open val waitingsCaptured: Listener<Event, T>","description":"dev.fritz2.core.WithEvents.waitingsCaptured","location":"core/dev.fritz2.core/-with-events/waitings-captured.html","searchKeys":["waitingsCaptured","open val waitingsCaptured: Listener<Event, T>","dev.fritz2.core.WithEvents.waitingsCaptured"]},{"name":"open val wheels: Listener<WheelEvent, T>","description":"dev.fritz2.core.WithEvents.wheels","location":"core/dev.fritz2.core/-with-events/wheels.html","searchKeys":["wheels","open val wheels: Listener<WheelEvent, T>","dev.fritz2.core.WithEvents.wheels"]},{"name":"open val wheelsCaptured: Listener<WheelEvent, T>","description":"dev.fritz2.core.WithEvents.wheelsCaptured","location":"core/dev.fritz2.core/-with-events/wheels-captured.html","searchKeys":["wheelsCaptured","open val wheelsCaptured: Listener<WheelEvent, T>","dev.fritz2.core.WithEvents.wheelsCaptured"]},{"name":"operator fun <D, M> Validation<D, Unit, M>.invoke(data: D): List<M>","description":"dev.fritz2.validation.invoke","location":"core/dev.fritz2.validation/invoke.html","searchKeys":["invoke","operator fun <D, M> Validation<D, Unit, M>.invoke(data: D): List<M>","dev.fritz2.validation.invoke"]},{"name":"operator fun <D, M> Validation<D, Unit, M>.invoke(inspector: Inspector<D>): List<M>","description":"dev.fritz2.validation.invoke","location":"core/dev.fritz2.validation/invoke.html","searchKeys":["invoke","operator fun <D, M> Validation<D, Unit, M>.invoke(inspector: Inspector<D>): List<M>","dev.fritz2.validation.invoke"]},{"name":"operator fun <T : Any> get(key: Scope.Key<T>): T?","description":"dev.fritz2.core.Scope.get","location":"core/dev.fritz2.core/-scope/get.html","searchKeys":["get","operator fun <T : Any> get(key: Scope.Key<T>): T?","dev.fritz2.core.Scope.get"]},{"name":"operator fun Handler<Unit>.invoke()","description":"dev.fritz2.core.invoke","location":"core/dev.fritz2.core/invoke.html","searchKeys":["invoke","operator fun Handler<Unit>.invoke()","dev.fritz2.core.invoke"]},{"name":"operator fun ModifierShortcut.plus(other: ModifierShortcut): ModifierShortcut","description":"dev.fritz2.core.plus","location":"core/dev.fritz2.core/plus.html","searchKeys":["plus","operator fun ModifierShortcut.plus(other: ModifierShortcut): ModifierShortcut","dev.fritz2.core.plus"]},{"name":"operator fun Scope.plus(scope: ScopeContext.() -> Unit): ScopeContext.() -> Unit","description":"dev.fritz2.core.plus","location":"core/dev.fritz2.core/plus.html","searchKeys":["plus","operator fun Scope.plus(scope: ScopeContext.() -> Unit): ScopeContext.() -> Unit","dev.fritz2.core.plus"]},{"name":"operator fun ScopeContext.() -> Unit.plus(plus: ScopeContext.() -> Unit): ScopeContext.() -> Unit","description":"dev.fritz2.core.plus","location":"core/dev.fritz2.core/plus.html","searchKeys":["plus","operator fun ScopeContext.() -> Unit.plus(plus: ScopeContext.() -> Unit): ScopeContext.() -> Unit","dev.fritz2.core.plus"]},{"name":"operator fun ScopeContext.() -> Unit.plus(scope: Scope): ScopeContext.() -> Unit","description":"dev.fritz2.core.plus","location":"core/dev.fritz2.core/plus.html","searchKeys":["plus","operator fun ScopeContext.() -> Unit.plus(scope: Scope): ScopeContext.() -> Unit","dev.fritz2.core.plus"]},{"name":"operator fun invoke(data: D, metadata: T): List<M>","description":"dev.fritz2.validation.Validation.invoke","location":"core/dev.fritz2.validation/-validation/invoke.html","searchKeys":["invoke","operator fun invoke(data: D, metadata: T): List<M>","dev.fritz2.validation.Validation.invoke"]},{"name":"operator fun invoke(inspector: Inspector<D>, metadata: T): List<M>","description":"dev.fritz2.validation.Validation.invoke","location":"core/dev.fritz2.validation/-validation/invoke.html","searchKeys":["invoke","operator fun invoke(inspector: Inspector<D>, metadata: T): List<M>","dev.fritz2.validation.Validation.invoke"]},{"name":"operator fun iterator(): Iterator<Map.Entry<Scope.Key<*>, Any>>","description":"dev.fritz2.core.Scope.iterator","location":"core/dev.fritz2.core/-scope/iterator.html","searchKeys":["iterator","operator fun iterator(): Iterator<Map.Entry<Scope.Key<*>, Any>>","dev.fritz2.core.Scope.iterator"]},{"name":"operator fun plus(other: ModifierShortcut): Shortcut","description":"dev.fritz2.core.Shortcut.plus","location":"core/dev.fritz2.core/-shortcut/plus.html","searchKeys":["plus","operator fun plus(other: ModifierShortcut): Shortcut","dev.fritz2.core.Shortcut.plus"]},{"name":"override val baseClass: String? = null","description":"dev.fritz2.core.HtmlTag.baseClass","location":"core/dev.fritz2.core/-html-tag/base-class.html","searchKeys":["baseClass","override val baseClass: String? = null","dev.fritz2.core.HtmlTag.baseClass"]},{"name":"override val data: Flow<D>","description":"dev.fritz2.core.RootStore.data","location":"core/dev.fritz2.core/-root-store/data.html","searchKeys":["data","override val data: Flow<D>","dev.fritz2.core.RootStore.data"]},{"name":"override val id: String? = null","description":"dev.fritz2.core.HtmlTag.id","location":"core/dev.fritz2.core/-html-tag/id.html","searchKeys":["id","override val id: String? = null","dev.fritz2.core.HtmlTag.id"]},{"name":"override val job: Job","description":"dev.fritz2.core.RootStore.job","location":"core/dev.fritz2.core/-root-store/job.html","searchKeys":["job","override val job: Job","dev.fritz2.core.RootStore.job"]},{"name":"sealed class Patch<out T>","description":"dev.fritz2.core.Patch","location":"core/dev.fritz2.core/-patch/index.html","searchKeys":["Patch","sealed class Patch<out T>","dev.fritz2.core.Patch"]},{"name":"sealed class SessionState","description":"dev.fritz2.remote.SessionState","location":"core/dev.fritz2.remote/-session-state/index.html","searchKeys":["SessionState","sealed class SessionState","dev.fritz2.remote.SessionState"]},{"name":"suspend fun <T> track(operation: suspend () -> T): T","description":"dev.fritz2.tracking.Tracker.track","location":"core/dev.fritz2.tracking/-tracker/track.html","searchKeys":["track","suspend fun <T> track(operation: suspend () -> T): T","dev.fritz2.tracking.Tracker.track"]},{"name":"suspend fun WithDomNode<*>.waitForAnimation()","description":"dev.fritz2.core.waitForAnimation","location":"core/dev.fritz2.core/wait-for-animation.html","searchKeys":["waitForAnimation","suspend fun WithDomNode<*>.waitForAnimation()","dev.fritz2.core.waitForAnimation"]},{"name":"suspend fun arrayBuffer(): ArrayBuffer","description":"dev.fritz2.remote.Response.arrayBuffer","location":"core/dev.fritz2.remote/-response/array-buffer.html","searchKeys":["arrayBuffer","suspend fun arrayBuffer(): ArrayBuffer","dev.fritz2.remote.Response.arrayBuffer"]},{"name":"suspend fun blob(): Blob","description":"dev.fritz2.remote.Response.blob","location":"core/dev.fritz2.remote/-response/blob.html","searchKeys":["blob","suspend fun blob(): Blob","dev.fritz2.remote.Response.blob"]},{"name":"suspend fun body(): String","description":"dev.fritz2.remote.Response.body","location":"core/dev.fritz2.remote/-response/body.html","searchKeys":["body","suspend fun body(): String","dev.fritz2.remote.Response.body"]},{"name":"suspend fun close(code: Short = 1000, reason: String = \"\")","description":"dev.fritz2.remote.Session.close","location":"core/dev.fritz2.remote/-session/close.html","searchKeys":["close","suspend fun close(code: Short = 1000, reason: String = \"\")","dev.fritz2.remote.Session.close"]},{"name":"suspend fun connect(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.connect","location":"core/dev.fritz2.remote/-request/connect.html","searchKeys":["connect","suspend fun connect(subUrl: String? = null): Response","dev.fritz2.remote.Request.connect"]},{"name":"suspend fun execute(): Response","description":"dev.fritz2.remote.Request.execute","location":"core/dev.fritz2.remote/-request/execute.html","searchKeys":["execute","suspend fun execute(): Response","dev.fritz2.remote.Request.execute"]},{"name":"suspend fun formData(): FormData","description":"dev.fritz2.remote.Response.formData","location":"core/dev.fritz2.remote/-response/form-data.html","searchKeys":["formData","suspend fun formData(): FormData","dev.fritz2.remote.Response.formData"]},{"name":"suspend fun get(subUrl: String? = null, parameters: Map<String, String>? = null): Response","description":"dev.fritz2.remote.Request.get","location":"core/dev.fritz2.remote/-request/get.html","searchKeys":["get","suspend fun get(subUrl: String? = null, parameters: Map<String, String>? = null): Response","dev.fritz2.remote.Request.get"]},{"name":"suspend fun head(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.head","location":"core/dev.fritz2.remote/-request/head.html","searchKeys":["head","suspend fun head(subUrl: String? = null): Response","dev.fritz2.remote.Request.head"]},{"name":"suspend fun json(): Any?","description":"dev.fritz2.remote.Response.json","location":"core/dev.fritz2.remote/-response/json.html","searchKeys":["json","suspend fun json(): Any?","dev.fritz2.remote.Response.json"]},{"name":"suspend fun options(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.options","location":"core/dev.fritz2.remote/-request/options.html","searchKeys":["options","suspend fun options(subUrl: String? = null): Response","dev.fritz2.remote.Request.options"]},{"name":"suspend fun patch(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.patch","location":"core/dev.fritz2.remote/-request/patch.html","searchKeys":["patch","suspend fun patch(subUrl: String? = null): Response","dev.fritz2.remote.Request.patch"]},{"name":"suspend fun post(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.post","location":"core/dev.fritz2.remote/-request/post.html","searchKeys":["post","suspend fun post(subUrl: String? = null): Response","dev.fritz2.remote.Request.post"]},{"name":"suspend fun put(subUrl: String? = null): Response","description":"dev.fritz2.remote.Request.put","location":"core/dev.fritz2.remote/-request/put.html","searchKeys":["put","suspend fun put(subUrl: String? = null): Response","dev.fritz2.remote.Request.put"]},{"name":"suspend fun send(message: ArrayBuffer)","description":"dev.fritz2.remote.Session.send","location":"core/dev.fritz2.remote/-session/send.html","searchKeys":["send","suspend fun send(message: ArrayBuffer)","dev.fritz2.remote.Session.send"]},{"name":"suspend fun send(message: ArrayBufferView)","description":"dev.fritz2.remote.Session.send","location":"core/dev.fritz2.remote/-session/send.html","searchKeys":["send","suspend fun send(message: ArrayBufferView)","dev.fritz2.remote.Session.send"]},{"name":"suspend fun send(message: Blob)","description":"dev.fritz2.remote.Session.send","location":"core/dev.fritz2.remote/-session/send.html","searchKeys":["send","suspend fun send(message: Blob)","dev.fritz2.remote.Session.send"]},{"name":"suspend fun send(message: String)","description":"dev.fritz2.remote.Session.send","location":"core/dev.fritz2.remote/-session/send.html","searchKeys":["send","suspend fun send(message: String)","dev.fritz2.remote.Session.send"]},{"name":"suspend override fun enrichRequest(request: Request): Request","description":"dev.fritz2.remote.Authentication.enrichRequest","location":"core/dev.fritz2.remote/-authentication/enrich-request.html","searchKeys":["enrichRequest","suspend override fun enrichRequest(request: Request): Request","dev.fritz2.remote.Authentication.enrichRequest"]},{"name":"suspend override fun handleResponse(response: Response): Response","description":"dev.fritz2.remote.Authentication.handleResponse","location":"core/dev.fritz2.remote/-authentication/handle-response.html","searchKeys":["handleResponse","suspend override fun handleResponse(response: Response): Response","dev.fritz2.remote.Authentication.handleResponse"]},{"name":"typealias DomLifecycleHandler = suspend (WithDomNode<Element>, Any?) -> Unit","description":"dev.fritz2.core.DomLifecycleHandler","location":"core/dev.fritz2.core/-dom-lifecycle-handler/index.html","searchKeys":["DomLifecycleHandler","typealias DomLifecycleHandler = suspend (WithDomNode<Element>, Any?) -> Unit","dev.fritz2.core.DomLifecycleHandler"]},{"name":"typealias IdProvider<T, I> = (T) -> I","description":"dev.fritz2.core.IdProvider","location":"core/dev.fritz2.core/-id-provider/index.html","searchKeys":["IdProvider","typealias IdProvider<T, I> = (T) -> I","dev.fritz2.core.IdProvider"]},{"name":"typealias Update<D> = suspend (D) -> D","description":"dev.fritz2.core.Update","location":"core/dev.fritz2.core/-update/index.html","searchKeys":["Update","typealias Update<D> = suspend (D) -> D","dev.fritz2.core.Update"]},{"name":"val <M : ValidationMessage> Flow<List<M>>.valid: Flow<Boolean>","description":"dev.fritz2.validation.valid","location":"core/dev.fritz2.validation/valid.html","searchKeys":["valid","val <M : ValidationMessage> Flow<List<M>>.valid: Flow<Boolean>","dev.fritz2.validation.valid"]},{"name":"val <M : ValidationMessage> List<M>.valid: Boolean","description":"dev.fritz2.validation.valid","location":"core/dev.fritz2.validation/valid.html","searchKeys":["valid","val <M : ValidationMessage> List<M>.valid: Boolean","dev.fritz2.validation.valid"]},{"name":"val ACTIVE_FLOWS: Int","description":"dev.fritz2.core.RootStore.Companion.ACTIVE_FLOWS","location":"core/dev.fritz2.core/-root-store/-companion/-a-c-t-i-v-e_-f-l-o-w-s.html","searchKeys":["ACTIVE_FLOWS","val ACTIVE_FLOWS: Int","dev.fritz2.core.RootStore.Companion.ACTIVE_FLOWS"]},{"name":"val ACTIVE_JOBS: Int","description":"dev.fritz2.core.RootStore.Companion.ACTIVE_JOBS","location":"core/dev.fritz2.core/-root-store/-companion/-a-c-t-i-v-e_-j-o-b-s.html","searchKeys":["ACTIVE_JOBS","val ACTIVE_JOBS: Int","dev.fritz2.core.RootStore.Companion.ACTIVE_JOBS"]},{"name":"val AVRInput: Shortcut","description":"dev.fritz2.core.Keys.AVRInput","location":"core/dev.fritz2.core/-keys/-a-v-r-input.html","searchKeys":["AVRInput","val AVRInput: Shortcut","dev.fritz2.core.Keys.AVRInput"]},{"name":"val AVRPower: Shortcut","description":"dev.fritz2.core.Keys.AVRPower","location":"core/dev.fritz2.core/-keys/-a-v-r-power.html","searchKeys":["AVRPower","val AVRPower: Shortcut","dev.fritz2.core.Keys.AVRPower"]},{"name":"val Accept: Shortcut","description":"dev.fritz2.core.Keys.Accept","location":"core/dev.fritz2.core/-keys/-accept.html","searchKeys":["Accept","val Accept: Shortcut","dev.fritz2.core.Keys.Accept"]},{"name":"val Again: Shortcut","description":"dev.fritz2.core.Keys.Again","location":"core/dev.fritz2.core/-keys/-again.html","searchKeys":["Again","val Again: Shortcut","dev.fritz2.core.Keys.Again"]},{"name":"val AllCandidates: Shortcut","description":"dev.fritz2.core.Keys.AllCandidates","location":"core/dev.fritz2.core/-keys/-all-candidates.html","searchKeys":["AllCandidates","val AllCandidates: Shortcut","dev.fritz2.core.Keys.AllCandidates"]},{"name":"val Alphanumeric: Shortcut","description":"dev.fritz2.core.Keys.Alphanumeric","location":"core/dev.fritz2.core/-keys/-alphanumeric.html","searchKeys":["Alphanumeric","val Alphanumeric: Shortcut","dev.fritz2.core.Keys.Alphanumeric"]},{"name":"val Alt: ModifierShortcut","description":"dev.fritz2.core.Keys.Alt","location":"core/dev.fritz2.core/-keys/-alt.html","searchKeys":["Alt","val Alt: ModifierShortcut","dev.fritz2.core.Keys.Alt"]},{"name":"val AltGraph: Shortcut","description":"dev.fritz2.core.Keys.AltGraph","location":"core/dev.fritz2.core/-keys/-alt-graph.html","searchKeys":["AltGraph","val AltGraph: Shortcut","dev.fritz2.core.Keys.AltGraph"]},{"name":"val AppSwitch: Shortcut","description":"dev.fritz2.core.Keys.AppSwitch","location":"core/dev.fritz2.core/-keys/-app-switch.html","searchKeys":["AppSwitch","val AppSwitch: Shortcut","dev.fritz2.core.Keys.AppSwitch"]},{"name":"val ArrowDown: Shortcut","description":"dev.fritz2.core.Keys.ArrowDown","location":"core/dev.fritz2.core/-keys/-arrow-down.html","searchKeys":["ArrowDown","val ArrowDown: Shortcut","dev.fritz2.core.Keys.ArrowDown"]},{"name":"val ArrowLeft: Shortcut","description":"dev.fritz2.core.Keys.ArrowLeft","location":"core/dev.fritz2.core/-keys/-arrow-left.html","searchKeys":["ArrowLeft","val ArrowLeft: Shortcut","dev.fritz2.core.Keys.ArrowLeft"]},{"name":"val ArrowRight: Shortcut","description":"dev.fritz2.core.Keys.ArrowRight","location":"core/dev.fritz2.core/-keys/-arrow-right.html","searchKeys":["ArrowRight","val ArrowRight: Shortcut","dev.fritz2.core.Keys.ArrowRight"]},{"name":"val ArrowUp: Shortcut","description":"dev.fritz2.core.Keys.ArrowUp","location":"core/dev.fritz2.core/-keys/-arrow-up.html","searchKeys":["ArrowUp","val ArrowUp: Shortcut","dev.fritz2.core.Keys.ArrowUp"]},{"name":"val Attn: Shortcut","description":"dev.fritz2.core.Keys.Attn","location":"core/dev.fritz2.core/-keys/-attn.html","searchKeys":["Attn","val Attn: Shortcut","dev.fritz2.core.Keys.Attn"]},{"name":"val AudioBalanceLeft: Shortcut","description":"dev.fritz2.core.Keys.AudioBalanceLeft","location":"core/dev.fritz2.core/-keys/-audio-balance-left.html","searchKeys":["AudioBalanceLeft","val AudioBalanceLeft: Shortcut","dev.fritz2.core.Keys.AudioBalanceLeft"]},{"name":"val AudioBalanceRight: Shortcut","description":"dev.fritz2.core.Keys.AudioBalanceRight","location":"core/dev.fritz2.core/-keys/-audio-balance-right.html","searchKeys":["AudioBalanceRight","val AudioBalanceRight: Shortcut","dev.fritz2.core.Keys.AudioBalanceRight"]},{"name":"val AudioBassBoostDown: Shortcut","description":"dev.fritz2.core.Keys.AudioBassBoostDown","location":"core/dev.fritz2.core/-keys/-audio-bass-boost-down.html","searchKeys":["AudioBassBoostDown","val AudioBassBoostDown: Shortcut","dev.fritz2.core.Keys.AudioBassBoostDown"]},{"name":"val AudioBassBoostToggle: Shortcut","description":"dev.fritz2.core.Keys.AudioBassBoostToggle","location":"core/dev.fritz2.core/-keys/-audio-bass-boost-toggle.html","searchKeys":["AudioBassBoostToggle","val AudioBassBoostToggle: Shortcut","dev.fritz2.core.Keys.AudioBassBoostToggle"]},{"name":"val AudioBassBoostUp: Shortcut","description":"dev.fritz2.core.Keys.AudioBassBoostUp","location":"core/dev.fritz2.core/-keys/-audio-bass-boost-up.html","searchKeys":["AudioBassBoostUp","val AudioBassBoostUp: Shortcut","dev.fritz2.core.Keys.AudioBassBoostUp"]},{"name":"val AudioFaderFront: Shortcut","description":"dev.fritz2.core.Keys.AudioFaderFront","location":"core/dev.fritz2.core/-keys/-audio-fader-front.html","searchKeys":["AudioFaderFront","val AudioFaderFront: Shortcut","dev.fritz2.core.Keys.AudioFaderFront"]},{"name":"val AudioFaderRear: Shortcut","description":"dev.fritz2.core.Keys.AudioFaderRear","location":"core/dev.fritz2.core/-keys/-audio-fader-rear.html","searchKeys":["AudioFaderRear","val AudioFaderRear: Shortcut","dev.fritz2.core.Keys.AudioFaderRear"]},{"name":"val AudioSurroundModeNext: Shortcut","description":"dev.fritz2.core.Keys.AudioSurroundModeNext","location":"core/dev.fritz2.core/-keys/-audio-surround-mode-next.html","searchKeys":["AudioSurroundModeNext","val AudioSurroundModeNext: Shortcut","dev.fritz2.core.Keys.AudioSurroundModeNext"]},{"name":"val AudioTrebleDown: Shortcut","description":"dev.fritz2.core.Keys.AudioTrebleDown","location":"core/dev.fritz2.core/-keys/-audio-treble-down.html","searchKeys":["AudioTrebleDown","val AudioTrebleDown: Shortcut","dev.fritz2.core.Keys.AudioTrebleDown"]},{"name":"val AudioTrebleUp: Shortcut","description":"dev.fritz2.core.Keys.AudioTrebleUp","location":"core/dev.fritz2.core/-keys/-audio-treble-up.html","searchKeys":["AudioTrebleUp","val AudioTrebleUp: Shortcut","dev.fritz2.core.Keys.AudioTrebleUp"]},{"name":"val AudioVolumeDown: Shortcut","description":"dev.fritz2.core.Keys.AudioVolumeDown","location":"core/dev.fritz2.core/-keys/-audio-volume-down.html","searchKeys":["AudioVolumeDown","val AudioVolumeDown: Shortcut","dev.fritz2.core.Keys.AudioVolumeDown"]},{"name":"val AudioVolumeMute: Shortcut","description":"dev.fritz2.core.Keys.AudioVolumeMute","location":"core/dev.fritz2.core/-keys/-audio-volume-mute.html","searchKeys":["AudioVolumeMute","val AudioVolumeMute: Shortcut","dev.fritz2.core.Keys.AudioVolumeMute"]},{"name":"val AudioVolumeUp: Shortcut","description":"dev.fritz2.core.Keys.AudioVolumeUp","location":"core/dev.fritz2.core/-keys/-audio-volume-up.html","searchKeys":["AudioVolumeUp","val AudioVolumeUp: Shortcut","dev.fritz2.core.Keys.AudioVolumeUp"]},{"name":"val Backspace: Shortcut","description":"dev.fritz2.core.Keys.Backspace","location":"core/dev.fritz2.core/-keys/-backspace.html","searchKeys":["Backspace","val Backspace: Shortcut","dev.fritz2.core.Keys.Backspace"]},{"name":"val BrightnessDown: Shortcut","description":"dev.fritz2.core.Keys.BrightnessDown","location":"core/dev.fritz2.core/-keys/-brightness-down.html","searchKeys":["BrightnessDown","val BrightnessDown: Shortcut","dev.fritz2.core.Keys.BrightnessDown"]},{"name":"val BrightnessUp: Shortcut","description":"dev.fritz2.core.Keys.BrightnessUp","location":"core/dev.fritz2.core/-keys/-brightness-up.html","searchKeys":["BrightnessUp","val BrightnessUp: Shortcut","dev.fritz2.core.Keys.BrightnessUp"]},{"name":"val BrowserBack: Shortcut","description":"dev.fritz2.core.Keys.BrowserBack","location":"core/dev.fritz2.core/-keys/-browser-back.html","searchKeys":["BrowserBack","val BrowserBack: Shortcut","dev.fritz2.core.Keys.BrowserBack"]},{"name":"val BrowserFavorites: Shortcut","description":"dev.fritz2.core.Keys.BrowserFavorites","location":"core/dev.fritz2.core/-keys/-browser-favorites.html","searchKeys":["BrowserFavorites","val BrowserFavorites: Shortcut","dev.fritz2.core.Keys.BrowserFavorites"]},{"name":"val BrowserForward: Shortcut","description":"dev.fritz2.core.Keys.BrowserForward","location":"core/dev.fritz2.core/-keys/-browser-forward.html","searchKeys":["BrowserForward","val BrowserForward: Shortcut","dev.fritz2.core.Keys.BrowserForward"]},{"name":"val BrowserHome: Shortcut","description":"dev.fritz2.core.Keys.BrowserHome","location":"core/dev.fritz2.core/-keys/-browser-home.html","searchKeys":["BrowserHome","val BrowserHome: Shortcut","dev.fritz2.core.Keys.BrowserHome"]},{"name":"val BrowserRefresh: Shortcut","description":"dev.fritz2.core.Keys.BrowserRefresh","location":"core/dev.fritz2.core/-keys/-browser-refresh.html","searchKeys":["BrowserRefresh","val BrowserRefresh: Shortcut","dev.fritz2.core.Keys.BrowserRefresh"]},{"name":"val BrowserSearch: Shortcut","description":"dev.fritz2.core.Keys.BrowserSearch","location":"core/dev.fritz2.core/-keys/-browser-search.html","searchKeys":["BrowserSearch","val BrowserSearch: Shortcut","dev.fritz2.core.Keys.BrowserSearch"]},{"name":"val BrowserStop: Shortcut","description":"dev.fritz2.core.Keys.BrowserStop","location":"core/dev.fritz2.core/-keys/-browser-stop.html","searchKeys":["BrowserStop","val BrowserStop: Shortcut","dev.fritz2.core.Keys.BrowserStop"]},{"name":"val Call: Shortcut","description":"dev.fritz2.core.Keys.Call","location":"core/dev.fritz2.core/-keys/-call.html","searchKeys":["Call","val Call: Shortcut","dev.fritz2.core.Keys.Call"]},{"name":"val Camera: Shortcut","description":"dev.fritz2.core.Keys.Camera","location":"core/dev.fritz2.core/-keys/-camera.html","searchKeys":["Camera","val Camera: Shortcut","dev.fritz2.core.Keys.Camera"]},{"name":"val CameraFocus: Shortcut","description":"dev.fritz2.core.Keys.CameraFocus","location":"core/dev.fritz2.core/-keys/-camera-focus.html","searchKeys":["CameraFocus","val CameraFocus: Shortcut","dev.fritz2.core.Keys.CameraFocus"]},{"name":"val Cancel: Shortcut","description":"dev.fritz2.core.Keys.Cancel","location":"core/dev.fritz2.core/-keys/-cancel.html","searchKeys":["Cancel","val Cancel: Shortcut","dev.fritz2.core.Keys.Cancel"]},{"name":"val CapsLock: Shortcut","description":"dev.fritz2.core.Keys.CapsLock","location":"core/dev.fritz2.core/-keys/-caps-lock.html","searchKeys":["CapsLock","val CapsLock: Shortcut","dev.fritz2.core.Keys.CapsLock"]},{"name":"val ChannelDown: Shortcut","description":"dev.fritz2.core.Keys.ChannelDown","location":"core/dev.fritz2.core/-keys/-channel-down.html","searchKeys":["ChannelDown","val ChannelDown: Shortcut","dev.fritz2.core.Keys.ChannelDown"]},{"name":"val ChannelUp: Shortcut","description":"dev.fritz2.core.Keys.ChannelUp","location":"core/dev.fritz2.core/-keys/-channel-up.html","searchKeys":["ChannelUp","val ChannelUp: Shortcut","dev.fritz2.core.Keys.ChannelUp"]},{"name":"val Clear: Shortcut","description":"dev.fritz2.core.Keys.Clear","location":"core/dev.fritz2.core/-keys/-clear.html","searchKeys":["Clear","val Clear: Shortcut","dev.fritz2.core.Keys.Clear"]},{"name":"val Close: Shortcut","description":"dev.fritz2.core.Keys.Close","location":"core/dev.fritz2.core/-keys/-close.html","searchKeys":["Close","val Close: Shortcut","dev.fritz2.core.Keys.Close"]},{"name":"val ClosedCaptionToggle: Shortcut","description":"dev.fritz2.core.Keys.ClosedCaptionToggle","location":"core/dev.fritz2.core/-keys/-closed-caption-toggle.html","searchKeys":["ClosedCaptionToggle","val ClosedCaptionToggle: Shortcut","dev.fritz2.core.Keys.ClosedCaptionToggle"]},{"name":"val CodeInput: Shortcut","description":"dev.fritz2.core.Keys.CodeInput","location":"core/dev.fritz2.core/-keys/-code-input.html","searchKeys":["CodeInput","val CodeInput: Shortcut","dev.fritz2.core.Keys.CodeInput"]},{"name":"val ColorF0Red: Shortcut","description":"dev.fritz2.core.Keys.ColorF0Red","location":"core/dev.fritz2.core/-keys/-color-f0-red.html","searchKeys":["ColorF0Red","val ColorF0Red: Shortcut","dev.fritz2.core.Keys.ColorF0Red"]},{"name":"val ColorF1Green: Shortcut","description":"dev.fritz2.core.Keys.ColorF1Green","location":"core/dev.fritz2.core/-keys/-color-f1-green.html","searchKeys":["ColorF1Green","val ColorF1Green: Shortcut","dev.fritz2.core.Keys.ColorF1Green"]},{"name":"val ColorF2Yellow: Shortcut","description":"dev.fritz2.core.Keys.ColorF2Yellow","location":"core/dev.fritz2.core/-keys/-color-f2-yellow.html","searchKeys":["ColorF2Yellow","val ColorF2Yellow: Shortcut","dev.fritz2.core.Keys.ColorF2Yellow"]},{"name":"val ColorF3Blue: Shortcut","description":"dev.fritz2.core.Keys.ColorF3Blue","location":"core/dev.fritz2.core/-keys/-color-f3-blue.html","searchKeys":["ColorF3Blue","val ColorF3Blue: Shortcut","dev.fritz2.core.Keys.ColorF3Blue"]},{"name":"val ColorF4Grey: Shortcut","description":"dev.fritz2.core.Keys.ColorF4Grey","location":"core/dev.fritz2.core/-keys/-color-f4-grey.html","searchKeys":["ColorF4Grey","val ColorF4Grey: Shortcut","dev.fritz2.core.Keys.ColorF4Grey"]},{"name":"val ColorF5Brown: Shortcut","description":"dev.fritz2.core.Keys.ColorF5Brown","location":"core/dev.fritz2.core/-keys/-color-f5-brown.html","searchKeys":["ColorF5Brown","val ColorF5Brown: Shortcut","dev.fritz2.core.Keys.ColorF5Brown"]},{"name":"val Compose: Shortcut","description":"dev.fritz2.core.Keys.Compose","location":"core/dev.fritz2.core/-keys/-compose.html","searchKeys":["Compose","val Compose: Shortcut","dev.fritz2.core.Keys.Compose"]},{"name":"val ContextMenu: Shortcut","description":"dev.fritz2.core.Keys.ContextMenu","location":"core/dev.fritz2.core/-keys/-context-menu.html","searchKeys":["ContextMenu","val ContextMenu: Shortcut","dev.fritz2.core.Keys.ContextMenu"]},{"name":"val Control: ModifierShortcut","description":"dev.fritz2.core.Keys.Control","location":"core/dev.fritz2.core/-keys/-control.html","searchKeys":["Control","val Control: ModifierShortcut","dev.fritz2.core.Keys.Control"]},{"name":"val Convert: Shortcut","description":"dev.fritz2.core.Keys.Convert","location":"core/dev.fritz2.core/-keys/-convert.html","searchKeys":["Convert","val Convert: Shortcut","dev.fritz2.core.Keys.Convert"]},{"name":"val Copy: Shortcut","description":"dev.fritz2.core.Keys.Copy","location":"core/dev.fritz2.core/-keys/-copy.html","searchKeys":["Copy","val Copy: Shortcut","dev.fritz2.core.Keys.Copy"]},{"name":"val CrSel: Shortcut","description":"dev.fritz2.core.Keys.CrSel","location":"core/dev.fritz2.core/-keys/-cr-sel.html","searchKeys":["CrSel","val CrSel: Shortcut","dev.fritz2.core.Keys.CrSel"]},{"name":"val Cut: Shortcut","description":"dev.fritz2.core.Keys.Cut","location":"core/dev.fritz2.core/-keys/-cut.html","searchKeys":["Cut","val Cut: Shortcut","dev.fritz2.core.Keys.Cut"]},{"name":"val DVR: Shortcut","description":"dev.fritz2.core.Keys.DVR","location":"core/dev.fritz2.core/-keys/-d-v-r.html","searchKeys":["DVR","val DVR: Shortcut","dev.fritz2.core.Keys.DVR"]},{"name":"val Dead: Shortcut","description":"dev.fritz2.core.Keys.Dead","location":"core/dev.fritz2.core/-keys/-dead.html","searchKeys":["Dead","val Dead: Shortcut","dev.fritz2.core.Keys.Dead"]},{"name":"val Delete: Shortcut","description":"dev.fritz2.core.Keys.Delete","location":"core/dev.fritz2.core/-keys/-delete.html","searchKeys":["Delete","val Delete: Shortcut","dev.fritz2.core.Keys.Delete"]},{"name":"val Dimmer: Shortcut","description":"dev.fritz2.core.Keys.Dimmer","location":"core/dev.fritz2.core/-keys/-dimmer.html","searchKeys":["Dimmer","val Dimmer: Shortcut","dev.fritz2.core.Keys.Dimmer"]},{"name":"val DisplaySwap: Shortcut","description":"dev.fritz2.core.Keys.DisplaySwap","location":"core/dev.fritz2.core/-keys/-display-swap.html","searchKeys":["DisplaySwap","val DisplaySwap: Shortcut","dev.fritz2.core.Keys.DisplaySwap"]},{"name":"val Eisu: Shortcut","description":"dev.fritz2.core.Keys.Eisu","location":"core/dev.fritz2.core/-keys/-eisu.html","searchKeys":["Eisu","val Eisu: Shortcut","dev.fritz2.core.Keys.Eisu"]},{"name":"val Eject: Shortcut","description":"dev.fritz2.core.Keys.Eject","location":"core/dev.fritz2.core/-keys/-eject.html","searchKeys":["Eject","val Eject: Shortcut","dev.fritz2.core.Keys.Eject"]},{"name":"val End: Shortcut","description":"dev.fritz2.core.Keys.End","location":"core/dev.fritz2.core/-keys/-end.html","searchKeys":["End","val End: Shortcut","dev.fritz2.core.Keys.End"]},{"name":"val EndCall: Shortcut","description":"dev.fritz2.core.Keys.EndCall","location":"core/dev.fritz2.core/-keys/-end-call.html","searchKeys":["EndCall","val EndCall: Shortcut","dev.fritz2.core.Keys.EndCall"]},{"name":"val Enter: Shortcut","description":"dev.fritz2.core.Keys.Enter","location":"core/dev.fritz2.core/-keys/-enter.html","searchKeys":["Enter","val Enter: Shortcut","dev.fritz2.core.Keys.Enter"]},{"name":"val EraseEof: Shortcut","description":"dev.fritz2.core.Keys.EraseEof","location":"core/dev.fritz2.core/-keys/-erase-eof.html","searchKeys":["EraseEof","val EraseEof: Shortcut","dev.fritz2.core.Keys.EraseEof"]},{"name":"val Escape: Shortcut","description":"dev.fritz2.core.Keys.Escape","location":"core/dev.fritz2.core/-keys/-escape.html","searchKeys":["Escape","val Escape: Shortcut","dev.fritz2.core.Keys.Escape"]},{"name":"val ExSel: Shortcut","description":"dev.fritz2.core.Keys.ExSel","location":"core/dev.fritz2.core/-keys/-ex-sel.html","searchKeys":["ExSel","val ExSel: Shortcut","dev.fritz2.core.Keys.ExSel"]},{"name":"val Execute: Shortcut","description":"dev.fritz2.core.Keys.Execute","location":"core/dev.fritz2.core/-keys/-execute.html","searchKeys":["Execute","val Execute: Shortcut","dev.fritz2.core.Keys.Execute"]},{"name":"val Exit: Shortcut","description":"dev.fritz2.core.Keys.Exit","location":"core/dev.fritz2.core/-keys/-exit.html","searchKeys":["Exit","val Exit: Shortcut","dev.fritz2.core.Keys.Exit"]},{"name":"val F10: Shortcut","description":"dev.fritz2.core.Keys.F10","location":"core/dev.fritz2.core/-keys/-f10.html","searchKeys":["F10","val F10: Shortcut","dev.fritz2.core.Keys.F10"]},{"name":"val F11: Shortcut","description":"dev.fritz2.core.Keys.F11","location":"core/dev.fritz2.core/-keys/-f11.html","searchKeys":["F11","val F11: Shortcut","dev.fritz2.core.Keys.F11"]},{"name":"val F12: Shortcut","description":"dev.fritz2.core.Keys.F12","location":"core/dev.fritz2.core/-keys/-f12.html","searchKeys":["F12","val F12: Shortcut","dev.fritz2.core.Keys.F12"]},{"name":"val F1: Shortcut","description":"dev.fritz2.core.Keys.F1","location":"core/dev.fritz2.core/-keys/-f1.html","searchKeys":["F1","val F1: Shortcut","dev.fritz2.core.Keys.F1"]},{"name":"val F2: Shortcut","description":"dev.fritz2.core.Keys.F2","location":"core/dev.fritz2.core/-keys/-f2.html","searchKeys":["F2","val F2: Shortcut","dev.fritz2.core.Keys.F2"]},{"name":"val F3: Shortcut","description":"dev.fritz2.core.Keys.F3","location":"core/dev.fritz2.core/-keys/-f3.html","searchKeys":["F3","val F3: Shortcut","dev.fritz2.core.Keys.F3"]},{"name":"val F4: Shortcut","description":"dev.fritz2.core.Keys.F4","location":"core/dev.fritz2.core/-keys/-f4.html","searchKeys":["F4","val F4: Shortcut","dev.fritz2.core.Keys.F4"]},{"name":"val F5: Shortcut","description":"dev.fritz2.core.Keys.F5","location":"core/dev.fritz2.core/-keys/-f5.html","searchKeys":["F5","val F5: Shortcut","dev.fritz2.core.Keys.F5"]},{"name":"val F6: Shortcut","description":"dev.fritz2.core.Keys.F6","location":"core/dev.fritz2.core/-keys/-f6.html","searchKeys":["F6","val F6: Shortcut","dev.fritz2.core.Keys.F6"]},{"name":"val F7: Shortcut","description":"dev.fritz2.core.Keys.F7","location":"core/dev.fritz2.core/-keys/-f7.html","searchKeys":["F7","val F7: Shortcut","dev.fritz2.core.Keys.F7"]},{"name":"val F8: Shortcut","description":"dev.fritz2.core.Keys.F8","location":"core/dev.fritz2.core/-keys/-f8.html","searchKeys":["F8","val F8: Shortcut","dev.fritz2.core.Keys.F8"]},{"name":"val F9: Shortcut","description":"dev.fritz2.core.Keys.F9","location":"core/dev.fritz2.core/-keys/-f9.html","searchKeys":["F9","val F9: Shortcut","dev.fritz2.core.Keys.F9"]},{"name":"val FavoriteClear0: Shortcut","description":"dev.fritz2.core.Keys.FavoriteClear0","location":"core/dev.fritz2.core/-keys/-favorite-clear0.html","searchKeys":["FavoriteClear0","val FavoriteClear0: Shortcut","dev.fritz2.core.Keys.FavoriteClear0"]},{"name":"val FavoriteClear1: Shortcut","description":"dev.fritz2.core.Keys.FavoriteClear1","location":"core/dev.fritz2.core/-keys/-favorite-clear1.html","searchKeys":["FavoriteClear1","val FavoriteClear1: Shortcut","dev.fritz2.core.Keys.FavoriteClear1"]},{"name":"val FavoriteClear2: Shortcut","description":"dev.fritz2.core.Keys.FavoriteClear2","location":"core/dev.fritz2.core/-keys/-favorite-clear2.html","searchKeys":["FavoriteClear2","val FavoriteClear2: Shortcut","dev.fritz2.core.Keys.FavoriteClear2"]},{"name":"val FavoriteClear3: Shortcut","description":"dev.fritz2.core.Keys.FavoriteClear3","location":"core/dev.fritz2.core/-keys/-favorite-clear3.html","searchKeys":["FavoriteClear3","val FavoriteClear3: Shortcut","dev.fritz2.core.Keys.FavoriteClear3"]},{"name":"val FavoriteRecall0: Shortcut","description":"dev.fritz2.core.Keys.FavoriteRecall0","location":"core/dev.fritz2.core/-keys/-favorite-recall0.html","searchKeys":["FavoriteRecall0","val FavoriteRecall0: Shortcut","dev.fritz2.core.Keys.FavoriteRecall0"]},{"name":"val FavoriteRecall1: Shortcut","description":"dev.fritz2.core.Keys.FavoriteRecall1","location":"core/dev.fritz2.core/-keys/-favorite-recall1.html","searchKeys":["FavoriteRecall1","val FavoriteRecall1: Shortcut","dev.fritz2.core.Keys.FavoriteRecall1"]},{"name":"val FavoriteRecall2: Shortcut","description":"dev.fritz2.core.Keys.FavoriteRecall2","location":"core/dev.fritz2.core/-keys/-favorite-recall2.html","searchKeys":["FavoriteRecall2","val FavoriteRecall2: Shortcut","dev.fritz2.core.Keys.FavoriteRecall2"]},{"name":"val FavoriteRecall3: Shortcut","description":"dev.fritz2.core.Keys.FavoriteRecall3","location":"core/dev.fritz2.core/-keys/-favorite-recall3.html","searchKeys":["FavoriteRecall3","val FavoriteRecall3: Shortcut","dev.fritz2.core.Keys.FavoriteRecall3"]},{"name":"val FavoriteStore0: Shortcut","description":"dev.fritz2.core.Keys.FavoriteStore0","location":"core/dev.fritz2.core/-keys/-favorite-store0.html","searchKeys":["FavoriteStore0","val FavoriteStore0: Shortcut","dev.fritz2.core.Keys.FavoriteStore0"]},{"name":"val FavoriteStore1: Shortcut","description":"dev.fritz2.core.Keys.FavoriteStore1","location":"core/dev.fritz2.core/-keys/-favorite-store1.html","searchKeys":["FavoriteStore1","val FavoriteStore1: Shortcut","dev.fritz2.core.Keys.FavoriteStore1"]},{"name":"val FavoriteStore2: Shortcut","description":"dev.fritz2.core.Keys.FavoriteStore2","location":"core/dev.fritz2.core/-keys/-favorite-store2.html","searchKeys":["FavoriteStore2","val FavoriteStore2: Shortcut","dev.fritz2.core.Keys.FavoriteStore2"]},{"name":"val FavoriteStore3: Shortcut","description":"dev.fritz2.core.Keys.FavoriteStore3","location":"core/dev.fritz2.core/-keys/-favorite-store3.html","searchKeys":["FavoriteStore3","val FavoriteStore3: Shortcut","dev.fritz2.core.Keys.FavoriteStore3"]},{"name":"val FinalMode: Shortcut","description":"dev.fritz2.core.Keys.FinalMode","location":"core/dev.fritz2.core/-keys/-final-mode.html","searchKeys":["FinalMode","val FinalMode: Shortcut","dev.fritz2.core.Keys.FinalMode"]},{"name":"val Find: Shortcut","description":"dev.fritz2.core.Keys.Find","location":"core/dev.fritz2.core/-keys/-find.html","searchKeys":["Find","val Find: Shortcut","dev.fritz2.core.Keys.Find"]},{"name":"val Flow<MessageEvent>.arrayBuffer: Flow<ArrayBuffer>","description":"dev.fritz2.remote.arrayBuffer","location":"core/dev.fritz2.remote/array-buffer.html","searchKeys":["arrayBuffer","val Flow<MessageEvent>.arrayBuffer: Flow<ArrayBuffer>","dev.fritz2.remote.arrayBuffer"]},{"name":"val Flow<MessageEvent>.blob: Flow<Blob>","description":"dev.fritz2.remote.blob","location":"core/dev.fritz2.remote/blob.html","searchKeys":["blob","val Flow<MessageEvent>.blob: Flow<Blob>","dev.fritz2.remote.blob"]},{"name":"val Flow<MessageEvent>.body: Flow<String>","description":"dev.fritz2.remote.body","location":"core/dev.fritz2.remote/body.html","searchKeys":["body","val Flow<MessageEvent>.body: Flow<String>","dev.fritz2.remote.body"]},{"name":"val Flow<MessageEvent>.data: Flow<Any?>","description":"dev.fritz2.remote.data","location":"core/dev.fritz2.remote/data.html","searchKeys":["data","val Flow<MessageEvent>.data: Flow<Any?>","dev.fritz2.remote.data"]},{"name":"val Fn: Shortcut","description":"dev.fritz2.core.Keys.Fn","location":"core/dev.fritz2.core/-keys/-fn.html","searchKeys":["Fn","val Fn: Shortcut","dev.fritz2.core.Keys.Fn"]},{"name":"val FnLock: Shortcut","description":"dev.fritz2.core.Keys.FnLock","location":"core/dev.fritz2.core/-keys/-fn-lock.html","searchKeys":["FnLock","val FnLock: Shortcut","dev.fritz2.core.Keys.FnLock"]},{"name":"val GoBack: Shortcut","description":"dev.fritz2.core.Keys.GoBack","location":"core/dev.fritz2.core/-keys/-go-back.html","searchKeys":["GoBack","val GoBack: Shortcut","dev.fritz2.core.Keys.GoBack"]},{"name":"val GoHome: Shortcut","description":"dev.fritz2.core.Keys.GoHome","location":"core/dev.fritz2.core/-keys/-go-home.html","searchKeys":["GoHome","val GoHome: Shortcut","dev.fritz2.core.Keys.GoHome"]},{"name":"val GroupFirst: Shortcut","description":"dev.fritz2.core.Keys.GroupFirst","location":"core/dev.fritz2.core/-keys/-group-first.html","searchKeys":["GroupFirst","val GroupFirst: Shortcut","dev.fritz2.core.Keys.GroupFirst"]},{"name":"val GroupLast: Shortcut","description":"dev.fritz2.core.Keys.GroupLast","location":"core/dev.fritz2.core/-keys/-group-last.html","searchKeys":["GroupLast","val GroupLast: Shortcut","dev.fritz2.core.Keys.GroupLast"]},{"name":"val GroupNext: Shortcut","description":"dev.fritz2.core.Keys.GroupNext","location":"core/dev.fritz2.core/-keys/-group-next.html","searchKeys":["GroupNext","val GroupNext: Shortcut","dev.fritz2.core.Keys.GroupNext"]},{"name":"val GroupPrevious: Shortcut","description":"dev.fritz2.core.Keys.GroupPrevious","location":"core/dev.fritz2.core/-keys/-group-previous.html","searchKeys":["GroupPrevious","val GroupPrevious: Shortcut","dev.fritz2.core.Keys.GroupPrevious"]},{"name":"val Guide: Shortcut","description":"dev.fritz2.core.Keys.Guide","location":"core/dev.fritz2.core/-keys/-guide.html","searchKeys":["Guide","val Guide: Shortcut","dev.fritz2.core.Keys.Guide"]},{"name":"val GuideNextDay: Shortcut","description":"dev.fritz2.core.Keys.GuideNextDay","location":"core/dev.fritz2.core/-keys/-guide-next-day.html","searchKeys":["GuideNextDay","val GuideNextDay: Shortcut","dev.fritz2.core.Keys.GuideNextDay"]},{"name":"val GuidePreviousDay: Shortcut","description":"dev.fritz2.core.Keys.GuidePreviousDay","location":"core/dev.fritz2.core/-keys/-guide-previous-day.html","searchKeys":["GuidePreviousDay","val GuidePreviousDay: Shortcut","dev.fritz2.core.Keys.GuidePreviousDay"]},{"name":"val HangulMode: Shortcut","description":"dev.fritz2.core.Keys.HangulMode","location":"core/dev.fritz2.core/-keys/-hangul-mode.html","searchKeys":["HangulMode","val HangulMode: Shortcut","dev.fritz2.core.Keys.HangulMode"]},{"name":"val HanjaMode: Shortcut","description":"dev.fritz2.core.Keys.HanjaMode","location":"core/dev.fritz2.core/-keys/-hanja-mode.html","searchKeys":["HanjaMode","val HanjaMode: Shortcut","dev.fritz2.core.Keys.HanjaMode"]},{"name":"val Hankaku: Shortcut","description":"dev.fritz2.core.Keys.Hankaku","location":"core/dev.fritz2.core/-keys/-hankaku.html","searchKeys":["Hankaku","val Hankaku: Shortcut","dev.fritz2.core.Keys.Hankaku"]},{"name":"val HeadsetHook: Shortcut","description":"dev.fritz2.core.Keys.HeadsetHook","location":"core/dev.fritz2.core/-keys/-headset-hook.html","searchKeys":["HeadsetHook","val HeadsetHook: Shortcut","dev.fritz2.core.Keys.HeadsetHook"]},{"name":"val Help: Shortcut","description":"dev.fritz2.core.Keys.Help","location":"core/dev.fritz2.core/-keys/-help.html","searchKeys":["Help","val Help: Shortcut","dev.fritz2.core.Keys.Help"]},{"name":"val Hibernate: Shortcut","description":"dev.fritz2.core.Keys.Hibernate","location":"core/dev.fritz2.core/-keys/-hibernate.html","searchKeys":["Hibernate","val Hibernate: Shortcut","dev.fritz2.core.Keys.Hibernate"]},{"name":"val Hiragana: Shortcut","description":"dev.fritz2.core.Keys.Hiragana","location":"core/dev.fritz2.core/-keys/-hiragana.html","searchKeys":["Hiragana","val Hiragana: Shortcut","dev.fritz2.core.Keys.Hiragana"]},{"name":"val HiraganaKatakana: Shortcut","description":"dev.fritz2.core.Keys.HiraganaKatakana","location":"core/dev.fritz2.core/-keys/-hiragana-katakana.html","searchKeys":["HiraganaKatakana","val HiraganaKatakana: Shortcut","dev.fritz2.core.Keys.HiraganaKatakana"]},{"name":"val Home: Shortcut","description":"dev.fritz2.core.Keys.Home","location":"core/dev.fritz2.core/-keys/-home.html","searchKeys":["Home","val Home: Shortcut","dev.fritz2.core.Keys.Home"]},{"name":"val Hyper: Shortcut","description":"dev.fritz2.core.Keys.Hyper","location":"core/dev.fritz2.core/-keys/-hyper.html","searchKeys":["Hyper","val Hyper: Shortcut","dev.fritz2.core.Keys.Hyper"]},{"name":"val Info: Shortcut","description":"dev.fritz2.core.Keys.Info","location":"core/dev.fritz2.core/-keys/-info.html","searchKeys":["Info","val Info: Shortcut","dev.fritz2.core.Keys.Info"]},{"name":"val Insert: Shortcut","description":"dev.fritz2.core.Keys.Insert","location":"core/dev.fritz2.core/-keys/-insert.html","searchKeys":["Insert","val Insert: Shortcut","dev.fritz2.core.Keys.Insert"]},{"name":"val InstantReplay: Shortcut","description":"dev.fritz2.core.Keys.InstantReplay","location":"core/dev.fritz2.core/-keys/-instant-replay.html","searchKeys":["InstantReplay","val InstantReplay: Shortcut","dev.fritz2.core.Keys.InstantReplay"]},{"name":"val JunjaMode: Shortcut","description":"dev.fritz2.core.Keys.JunjaMode","location":"core/dev.fritz2.core/-keys/-junja-mode.html","searchKeys":["JunjaMode","val JunjaMode: Shortcut","dev.fritz2.core.Keys.JunjaMode"]},{"name":"val KanaMode: Shortcut","description":"dev.fritz2.core.Keys.KanaMode","location":"core/dev.fritz2.core/-keys/-kana-mode.html","searchKeys":["KanaMode","val KanaMode: Shortcut","dev.fritz2.core.Keys.KanaMode"]},{"name":"val KanjiMode: Shortcut","description":"dev.fritz2.core.Keys.KanjiMode","location":"core/dev.fritz2.core/-keys/-kanji-mode.html","searchKeys":["KanjiMode","val KanjiMode: Shortcut","dev.fritz2.core.Keys.KanjiMode"]},{"name":"val Katakana: Shortcut","description":"dev.fritz2.core.Keys.Katakana","location":"core/dev.fritz2.core/-keys/-katakana.html","searchKeys":["Katakana","val Katakana: Shortcut","dev.fritz2.core.Keys.Katakana"]},{"name":"val Key11: Shortcut","description":"dev.fritz2.core.Keys.Key11","location":"core/dev.fritz2.core/-keys/-key11.html","searchKeys":["Key11","val Key11: Shortcut","dev.fritz2.core.Keys.Key11"]},{"name":"val Key12: Shortcut","description":"dev.fritz2.core.Keys.Key12","location":"core/dev.fritz2.core/-keys/-key12.html","searchKeys":["Key12","val Key12: Shortcut","dev.fritz2.core.Keys.Key12"]},{"name":"val LastNumberRedial: Shortcut","description":"dev.fritz2.core.Keys.LastNumberRedial","location":"core/dev.fritz2.core/-keys/-last-number-redial.html","searchKeys":["LastNumberRedial","val LastNumberRedial: Shortcut","dev.fritz2.core.Keys.LastNumberRedial"]},{"name":"val LaunchApplication1: Shortcut","description":"dev.fritz2.core.Keys.LaunchApplication1","location":"core/dev.fritz2.core/-keys/-launch-application1.html","searchKeys":["LaunchApplication1","val LaunchApplication1: Shortcut","dev.fritz2.core.Keys.LaunchApplication1"]},{"name":"val LaunchApplication2: Shortcut","description":"dev.fritz2.core.Keys.LaunchApplication2","location":"core/dev.fritz2.core/-keys/-launch-application2.html","searchKeys":["LaunchApplication2","val LaunchApplication2: Shortcut","dev.fritz2.core.Keys.LaunchApplication2"]},{"name":"val LaunchCalendar: Shortcut","description":"dev.fritz2.core.Keys.LaunchCalendar","location":"core/dev.fritz2.core/-keys/-launch-calendar.html","searchKeys":["LaunchCalendar","val LaunchCalendar: Shortcut","dev.fritz2.core.Keys.LaunchCalendar"]},{"name":"val LaunchContacts: Shortcut","description":"dev.fritz2.core.Keys.LaunchContacts","location":"core/dev.fritz2.core/-keys/-launch-contacts.html","searchKeys":["LaunchContacts","val LaunchContacts: Shortcut","dev.fritz2.core.Keys.LaunchContacts"]},{"name":"val LaunchMail: Shortcut","description":"dev.fritz2.core.Keys.LaunchMail","location":"core/dev.fritz2.core/-keys/-launch-mail.html","searchKeys":["LaunchMail","val LaunchMail: Shortcut","dev.fritz2.core.Keys.LaunchMail"]},{"name":"val LaunchMediaPlayer: Shortcut","description":"dev.fritz2.core.Keys.LaunchMediaPlayer","location":"core/dev.fritz2.core/-keys/-launch-media-player.html","searchKeys":["LaunchMediaPlayer","val LaunchMediaPlayer: Shortcut","dev.fritz2.core.Keys.LaunchMediaPlayer"]},{"name":"val LaunchMusicPlayer: Shortcut","description":"dev.fritz2.core.Keys.LaunchMusicPlayer","location":"core/dev.fritz2.core/-keys/-launch-music-player.html","searchKeys":["LaunchMusicPlayer","val LaunchMusicPlayer: Shortcut","dev.fritz2.core.Keys.LaunchMusicPlayer"]},{"name":"val LaunchPhone: Shortcut","description":"dev.fritz2.core.Keys.LaunchPhone","location":"core/dev.fritz2.core/-keys/-launch-phone.html","searchKeys":["LaunchPhone","val LaunchPhone: Shortcut","dev.fritz2.core.Keys.LaunchPhone"]},{"name":"val LaunchScreenSaver: Shortcut","description":"dev.fritz2.core.Keys.LaunchScreenSaver","location":"core/dev.fritz2.core/-keys/-launch-screen-saver.html","searchKeys":["LaunchScreenSaver","val LaunchScreenSaver: Shortcut","dev.fritz2.core.Keys.LaunchScreenSaver"]},{"name":"val LaunchSpreadsheet: Shortcut","description":"dev.fritz2.core.Keys.LaunchSpreadsheet","location":"core/dev.fritz2.core/-keys/-launch-spreadsheet.html","searchKeys":["LaunchSpreadsheet","val LaunchSpreadsheet: Shortcut","dev.fritz2.core.Keys.LaunchSpreadsheet"]},{"name":"val LaunchWebBrowser: Shortcut","description":"dev.fritz2.core.Keys.LaunchWebBrowser","location":"core/dev.fritz2.core/-keys/-launch-web-browser.html","searchKeys":["LaunchWebBrowser","val LaunchWebBrowser: Shortcut","dev.fritz2.core.Keys.LaunchWebBrowser"]},{"name":"val LaunchWebCam: Shortcut","description":"dev.fritz2.core.Keys.LaunchWebCam","location":"core/dev.fritz2.core/-keys/-launch-web-cam.html","searchKeys":["LaunchWebCam","val LaunchWebCam: Shortcut","dev.fritz2.core.Keys.LaunchWebCam"]},{"name":"val LaunchWordProcessor: Shortcut","description":"dev.fritz2.core.Keys.LaunchWordProcessor","location":"core/dev.fritz2.core/-keys/-launch-word-processor.html","searchKeys":["LaunchWordProcessor","val LaunchWordProcessor: Shortcut","dev.fritz2.core.Keys.LaunchWordProcessor"]},{"name":"val Link: Shortcut","description":"dev.fritz2.core.Keys.Link","location":"core/dev.fritz2.core/-keys/-link.html","searchKeys":["Link","val Link: Shortcut","dev.fritz2.core.Keys.Link"]},{"name":"val ListProgram: Shortcut","description":"dev.fritz2.core.Keys.ListProgram","location":"core/dev.fritz2.core/-keys/-list-program.html","searchKeys":["ListProgram","val ListProgram: Shortcut","dev.fritz2.core.Keys.ListProgram"]},{"name":"val LiveContent: Shortcut","description":"dev.fritz2.core.Keys.LiveContent","location":"core/dev.fritz2.core/-keys/-live-content.html","searchKeys":["LiveContent","val LiveContent: Shortcut","dev.fritz2.core.Keys.LiveContent"]},{"name":"val Lock: Shortcut","description":"dev.fritz2.core.Keys.Lock","location":"core/dev.fritz2.core/-keys/-lock.html","searchKeys":["Lock","val Lock: Shortcut","dev.fritz2.core.Keys.Lock"]},{"name":"val LogOff: Shortcut","description":"dev.fritz2.core.Keys.LogOff","location":"core/dev.fritz2.core/-keys/-log-off.html","searchKeys":["LogOff","val LogOff: Shortcut","dev.fritz2.core.Keys.LogOff"]},{"name":"val MOUNT_POINT_KEY: Scope.Key<MountPoint>","description":"dev.fritz2.core.MOUNT_POINT_KEY","location":"core/dev.fritz2.core/-m-o-u-n-t_-p-o-i-n-t_-k-e-y.html","searchKeys":["MOUNT_POINT_KEY","val MOUNT_POINT_KEY: Scope.Key<MountPoint>","dev.fritz2.core.MOUNT_POINT_KEY"]},{"name":"val MailForward: Shortcut","description":"dev.fritz2.core.Keys.MailForward","location":"core/dev.fritz2.core/-keys/-mail-forward.html","searchKeys":["MailForward","val MailForward: Shortcut","dev.fritz2.core.Keys.MailForward"]},{"name":"val MailReply: Shortcut","description":"dev.fritz2.core.Keys.MailReply","location":"core/dev.fritz2.core/-keys/-mail-reply.html","searchKeys":["MailReply","val MailReply: Shortcut","dev.fritz2.core.Keys.MailReply"]},{"name":"val MailSend: Shortcut","description":"dev.fritz2.core.Keys.MailSend","location":"core/dev.fritz2.core/-keys/-mail-send.html","searchKeys":["MailSend","val MailSend: Shortcut","dev.fritz2.core.Keys.MailSend"]},{"name":"val MannerMode: Shortcut","description":"dev.fritz2.core.Keys.MannerMode","location":"core/dev.fritz2.core/-keys/-manner-mode.html","searchKeys":["MannerMode","val MannerMode: Shortcut","dev.fritz2.core.Keys.MannerMode"]},{"name":"val MediaApps: Shortcut","description":"dev.fritz2.core.Keys.MediaApps","location":"core/dev.fritz2.core/-keys/-media-apps.html","searchKeys":["MediaApps","val MediaApps: Shortcut","dev.fritz2.core.Keys.MediaApps"]},{"name":"val MediaAudioTrack: Shortcut","description":"dev.fritz2.core.Keys.MediaAudioTrack","location":"core/dev.fritz2.core/-keys/-media-audio-track.html","searchKeys":["MediaAudioTrack","val MediaAudioTrack: Shortcut","dev.fritz2.core.Keys.MediaAudioTrack"]},{"name":"val MediaClose: Shortcut","description":"dev.fritz2.core.Keys.MediaClose","location":"core/dev.fritz2.core/-keys/-media-close.html","searchKeys":["MediaClose","val MediaClose: Shortcut","dev.fritz2.core.Keys.MediaClose"]},{"name":"val MediaFastForward: Shortcut","description":"dev.fritz2.core.Keys.MediaFastForward","location":"core/dev.fritz2.core/-keys/-media-fast-forward.html","searchKeys":["MediaFastForward","val MediaFastForward: Shortcut","dev.fritz2.core.Keys.MediaFastForward"]},{"name":"val MediaLast: Shortcut","description":"dev.fritz2.core.Keys.MediaLast","location":"core/dev.fritz2.core/-keys/-media-last.html","searchKeys":["MediaLast","val MediaLast: Shortcut","dev.fritz2.core.Keys.MediaLast"]},{"name":"val MediaNextTrack: Shortcut","description":"dev.fritz2.core.Keys.MediaNextTrack","location":"core/dev.fritz2.core/-keys/-media-next-track.html","searchKeys":["MediaNextTrack","val MediaNextTrack: Shortcut","dev.fritz2.core.Keys.MediaNextTrack"]},{"name":"val MediaPause: Shortcut","description":"dev.fritz2.core.Keys.MediaPause","location":"core/dev.fritz2.core/-keys/-media-pause.html","searchKeys":["MediaPause","val MediaPause: Shortcut","dev.fritz2.core.Keys.MediaPause"]},{"name":"val MediaPlay: Shortcut","description":"dev.fritz2.core.Keys.MediaPlay","location":"core/dev.fritz2.core/-keys/-media-play.html","searchKeys":["MediaPlay","val MediaPlay: Shortcut","dev.fritz2.core.Keys.MediaPlay"]},{"name":"val MediaPlayPause: Shortcut","description":"dev.fritz2.core.Keys.MediaPlayPause","location":"core/dev.fritz2.core/-keys/-media-play-pause.html","searchKeys":["MediaPlayPause","val MediaPlayPause: Shortcut","dev.fritz2.core.Keys.MediaPlayPause"]},{"name":"val MediaPreviousTrack: Shortcut","description":"dev.fritz2.core.Keys.MediaPreviousTrack","location":"core/dev.fritz2.core/-keys/-media-previous-track.html","searchKeys":["MediaPreviousTrack","val MediaPreviousTrack: Shortcut","dev.fritz2.core.Keys.MediaPreviousTrack"]},{"name":"val MediaRecord: Shortcut","description":"dev.fritz2.core.Keys.MediaRecord","location":"core/dev.fritz2.core/-keys/-media-record.html","searchKeys":["MediaRecord","val MediaRecord: Shortcut","dev.fritz2.core.Keys.MediaRecord"]},{"name":"val MediaRewind: Shortcut","description":"dev.fritz2.core.Keys.MediaRewind","location":"core/dev.fritz2.core/-keys/-media-rewind.html","searchKeys":["MediaRewind","val MediaRewind: Shortcut","dev.fritz2.core.Keys.MediaRewind"]},{"name":"val MediaSkipBackward: Shortcut","description":"dev.fritz2.core.Keys.MediaSkipBackward","location":"core/dev.fritz2.core/-keys/-media-skip-backward.html","searchKeys":["MediaSkipBackward","val MediaSkipBackward: Shortcut","dev.fritz2.core.Keys.MediaSkipBackward"]},{"name":"val MediaSkipForward: Shortcut","description":"dev.fritz2.core.Keys.MediaSkipForward","location":"core/dev.fritz2.core/-keys/-media-skip-forward.html","searchKeys":["MediaSkipForward","val MediaSkipForward: Shortcut","dev.fritz2.core.Keys.MediaSkipForward"]},{"name":"val MediaStepBackward: Shortcut","description":"dev.fritz2.core.Keys.MediaStepBackward","location":"core/dev.fritz2.core/-keys/-media-step-backward.html","searchKeys":["MediaStepBackward","val MediaStepBackward: Shortcut","dev.fritz2.core.Keys.MediaStepBackward"]},{"name":"val MediaStepForward: Shortcut","description":"dev.fritz2.core.Keys.MediaStepForward","location":"core/dev.fritz2.core/-keys/-media-step-forward.html","searchKeys":["MediaStepForward","val MediaStepForward: Shortcut","dev.fritz2.core.Keys.MediaStepForward"]},{"name":"val MediaStop: Shortcut","description":"dev.fritz2.core.Keys.MediaStop","location":"core/dev.fritz2.core/-keys/-media-stop.html","searchKeys":["MediaStop","val MediaStop: Shortcut","dev.fritz2.core.Keys.MediaStop"]},{"name":"val MediaTopMenu: Shortcut","description":"dev.fritz2.core.Keys.MediaTopMenu","location":"core/dev.fritz2.core/-keys/-media-top-menu.html","searchKeys":["MediaTopMenu","val MediaTopMenu: Shortcut","dev.fritz2.core.Keys.MediaTopMenu"]},{"name":"val MediaTrackNext: Shortcut","description":"dev.fritz2.core.Keys.MediaTrackNext","location":"core/dev.fritz2.core/-keys/-media-track-next.html","searchKeys":["MediaTrackNext","val MediaTrackNext: Shortcut","dev.fritz2.core.Keys.MediaTrackNext"]},{"name":"val MediaTrackPrevious: Shortcut","description":"dev.fritz2.core.Keys.MediaTrackPrevious","location":"core/dev.fritz2.core/-keys/-media-track-previous.html","searchKeys":["MediaTrackPrevious","val MediaTrackPrevious: Shortcut","dev.fritz2.core.Keys.MediaTrackPrevious"]},{"name":"val Meta: ModifierShortcut","description":"dev.fritz2.core.Keys.Meta","location":"core/dev.fritz2.core/-keys/-meta.html","searchKeys":["Meta","val Meta: ModifierShortcut","dev.fritz2.core.Keys.Meta"]},{"name":"val MicrophoneToggle: Shortcut","description":"dev.fritz2.core.Keys.MicrophoneToggle","location":"core/dev.fritz2.core/-keys/-microphone-toggle.html","searchKeys":["MicrophoneToggle","val MicrophoneToggle: Shortcut","dev.fritz2.core.Keys.MicrophoneToggle"]},{"name":"val MicrophoneVolumeDown: Shortcut","description":"dev.fritz2.core.Keys.MicrophoneVolumeDown","location":"core/dev.fritz2.core/-keys/-microphone-volume-down.html","searchKeys":["MicrophoneVolumeDown","val MicrophoneVolumeDown: Shortcut","dev.fritz2.core.Keys.MicrophoneVolumeDown"]},{"name":"val MicrophoneVolumeMute: Shortcut","description":"dev.fritz2.core.Keys.MicrophoneVolumeMute","location":"core/dev.fritz2.core/-keys/-microphone-volume-mute.html","searchKeys":["MicrophoneVolumeMute","val MicrophoneVolumeMute: Shortcut","dev.fritz2.core.Keys.MicrophoneVolumeMute"]},{"name":"val MicrophoneVolumeUp: Shortcut","description":"dev.fritz2.core.Keys.MicrophoneVolumeUp","location":"core/dev.fritz2.core/-keys/-microphone-volume-up.html","searchKeys":["MicrophoneVolumeUp","val MicrophoneVolumeUp: Shortcut","dev.fritz2.core.Keys.MicrophoneVolumeUp"]},{"name":"val ModeChange: Shortcut","description":"dev.fritz2.core.Keys.ModeChange","location":"core/dev.fritz2.core/-keys/-mode-change.html","searchKeys":["ModeChange","val ModeChange: Shortcut","dev.fritz2.core.Keys.ModeChange"]},{"name":"val NamedKeys: Set<String>","description":"dev.fritz2.core.Keys.NamedKeys","location":"core/dev.fritz2.core/-keys/-named-keys.html","searchKeys":["NamedKeys","val NamedKeys: Set<String>","dev.fritz2.core.Keys.NamedKeys"]},{"name":"val NavigateIn: Shortcut","description":"dev.fritz2.core.Keys.NavigateIn","location":"core/dev.fritz2.core/-keys/-navigate-in.html","searchKeys":["NavigateIn","val NavigateIn: Shortcut","dev.fritz2.core.Keys.NavigateIn"]},{"name":"val NavigateNext: Shortcut","description":"dev.fritz2.core.Keys.NavigateNext","location":"core/dev.fritz2.core/-keys/-navigate-next.html","searchKeys":["NavigateNext","val NavigateNext: Shortcut","dev.fritz2.core.Keys.NavigateNext"]},{"name":"val NavigateOut: Shortcut","description":"dev.fritz2.core.Keys.NavigateOut","location":"core/dev.fritz2.core/-keys/-navigate-out.html","searchKeys":["NavigateOut","val NavigateOut: Shortcut","dev.fritz2.core.Keys.NavigateOut"]},{"name":"val NavigatePrevious: Shortcut","description":"dev.fritz2.core.Keys.NavigatePrevious","location":"core/dev.fritz2.core/-keys/-navigate-previous.html","searchKeys":["NavigatePrevious","val NavigatePrevious: Shortcut","dev.fritz2.core.Keys.NavigatePrevious"]},{"name":"val New: Shortcut","description":"dev.fritz2.core.Keys.New","location":"core/dev.fritz2.core/-keys/-new.html","searchKeys":["New","val New: Shortcut","dev.fritz2.core.Keys.New"]},{"name":"val NextCandidate: Shortcut","description":"dev.fritz2.core.Keys.NextCandidate","location":"core/dev.fritz2.core/-keys/-next-candidate.html","searchKeys":["NextCandidate","val NextCandidate: Shortcut","dev.fritz2.core.Keys.NextCandidate"]},{"name":"val NextFavoriteChannel: Shortcut","description":"dev.fritz2.core.Keys.NextFavoriteChannel","location":"core/dev.fritz2.core/-keys/-next-favorite-channel.html","searchKeys":["NextFavoriteChannel","val NextFavoriteChannel: Shortcut","dev.fritz2.core.Keys.NextFavoriteChannel"]},{"name":"val NextUserProfile: Shortcut","description":"dev.fritz2.core.Keys.NextUserProfile","location":"core/dev.fritz2.core/-keys/-next-user-profile.html","searchKeys":["NextUserProfile","val NextUserProfile: Shortcut","dev.fritz2.core.Keys.NextUserProfile"]},{"name":"val NonConvert: Shortcut","description":"dev.fritz2.core.Keys.NonConvert","location":"core/dev.fritz2.core/-keys/-non-convert.html","searchKeys":["NonConvert","val NonConvert: Shortcut","dev.fritz2.core.Keys.NonConvert"]},{"name":"val Notification: Shortcut","description":"dev.fritz2.core.Keys.Notification","location":"core/dev.fritz2.core/-keys/-notification.html","searchKeys":["Notification","val Notification: Shortcut","dev.fritz2.core.Keys.Notification"]},{"name":"val NumLock: Shortcut","description":"dev.fritz2.core.Keys.NumLock","location":"core/dev.fritz2.core/-keys/-num-lock.html","searchKeys":["NumLock","val NumLock: Shortcut","dev.fritz2.core.Keys.NumLock"]},{"name":"val OnDemand: Shortcut","description":"dev.fritz2.core.Keys.OnDemand","location":"core/dev.fritz2.core/-keys/-on-demand.html","searchKeys":["OnDemand","val OnDemand: Shortcut","dev.fritz2.core.Keys.OnDemand"]},{"name":"val Open: Shortcut","description":"dev.fritz2.core.Keys.Open","location":"core/dev.fritz2.core/-keys/-open.html","searchKeys":["Open","val Open: Shortcut","dev.fritz2.core.Keys.Open"]},{"name":"val PageDown: Shortcut","description":"dev.fritz2.core.Keys.PageDown","location":"core/dev.fritz2.core/-keys/-page-down.html","searchKeys":["PageDown","val PageDown: Shortcut","dev.fritz2.core.Keys.PageDown"]},{"name":"val PageUp: Shortcut","description":"dev.fritz2.core.Keys.PageUp","location":"core/dev.fritz2.core/-keys/-page-up.html","searchKeys":["PageUp","val PageUp: Shortcut","dev.fritz2.core.Keys.PageUp"]},{"name":"val Pairing: Shortcut","description":"dev.fritz2.core.Keys.Pairing","location":"core/dev.fritz2.core/-keys/-pairing.html","searchKeys":["Pairing","val Pairing: Shortcut","dev.fritz2.core.Keys.Pairing"]},{"name":"val Paste: Shortcut","description":"dev.fritz2.core.Keys.Paste","location":"core/dev.fritz2.core/-keys/-paste.html","searchKeys":["Paste","val Paste: Shortcut","dev.fritz2.core.Keys.Paste"]},{"name":"val Pause: Shortcut","description":"dev.fritz2.core.Keys.Pause","location":"core/dev.fritz2.core/-keys/-pause.html","searchKeys":["Pause","val Pause: Shortcut","dev.fritz2.core.Keys.Pause"]},{"name":"val PinPDown: Shortcut","description":"dev.fritz2.core.Keys.PinPDown","location":"core/dev.fritz2.core/-keys/-pin-p-down.html","searchKeys":["PinPDown","val PinPDown: Shortcut","dev.fritz2.core.Keys.PinPDown"]},{"name":"val PinPMove: Shortcut","description":"dev.fritz2.core.Keys.PinPMove","location":"core/dev.fritz2.core/-keys/-pin-p-move.html","searchKeys":["PinPMove","val PinPMove: Shortcut","dev.fritz2.core.Keys.PinPMove"]},{"name":"val PinPToggle: Shortcut","description":"dev.fritz2.core.Keys.PinPToggle","location":"core/dev.fritz2.core/-keys/-pin-p-toggle.html","searchKeys":["PinPToggle","val PinPToggle: Shortcut","dev.fritz2.core.Keys.PinPToggle"]},{"name":"val PinPUp: Shortcut","description":"dev.fritz2.core.Keys.PinPUp","location":"core/dev.fritz2.core/-keys/-pin-p-up.html","searchKeys":["PinPUp","val PinPUp: Shortcut","dev.fritz2.core.Keys.PinPUp"]},{"name":"val PlaySpeedDown: Shortcut","description":"dev.fritz2.core.Keys.PlaySpeedDown","location":"core/dev.fritz2.core/-keys/-play-speed-down.html","searchKeys":["PlaySpeedDown","val PlaySpeedDown: Shortcut","dev.fritz2.core.Keys.PlaySpeedDown"]},{"name":"val PlaySpeedReset: Shortcut","description":"dev.fritz2.core.Keys.PlaySpeedReset","location":"core/dev.fritz2.core/-keys/-play-speed-reset.html","searchKeys":["PlaySpeedReset","val PlaySpeedReset: Shortcut","dev.fritz2.core.Keys.PlaySpeedReset"]},{"name":"val PlaySpeedUp: Shortcut","description":"dev.fritz2.core.Keys.PlaySpeedUp","location":"core/dev.fritz2.core/-keys/-play-speed-up.html","searchKeys":["PlaySpeedUp","val PlaySpeedUp: Shortcut","dev.fritz2.core.Keys.PlaySpeedUp"]},{"name":"val Power: Shortcut","description":"dev.fritz2.core.Keys.Power","location":"core/dev.fritz2.core/-keys/-power.html","searchKeys":["Power","val Power: Shortcut","dev.fritz2.core.Keys.Power"]},{"name":"val PowerOff: Shortcut","description":"dev.fritz2.core.Keys.PowerOff","location":"core/dev.fritz2.core/-keys/-power-off.html","searchKeys":["PowerOff","val PowerOff: Shortcut","dev.fritz2.core.Keys.PowerOff"]},{"name":"val PreviousCandidate: Shortcut","description":"dev.fritz2.core.Keys.PreviousCandidate","location":"core/dev.fritz2.core/-keys/-previous-candidate.html","searchKeys":["PreviousCandidate","val PreviousCandidate: Shortcut","dev.fritz2.core.Keys.PreviousCandidate"]},{"name":"val Print: Shortcut","description":"dev.fritz2.core.Keys.Print","location":"core/dev.fritz2.core/-keys/-print.html","searchKeys":["Print","val Print: Shortcut","dev.fritz2.core.Keys.Print"]},{"name":"val PrintScreen: Shortcut","description":"dev.fritz2.core.Keys.PrintScreen","location":"core/dev.fritz2.core/-keys/-print-screen.html","searchKeys":["PrintScreen","val PrintScreen: Shortcut","dev.fritz2.core.Keys.PrintScreen"]},{"name":"val Process: Shortcut","description":"dev.fritz2.core.Keys.Process","location":"core/dev.fritz2.core/-keys/-process.html","searchKeys":["Process","val Process: Shortcut","dev.fritz2.core.Keys.Process"]},{"name":"val Props: Shortcut","description":"dev.fritz2.core.Keys.Props","location":"core/dev.fritz2.core/-keys/-props.html","searchKeys":["Props","val Props: Shortcut","dev.fritz2.core.Keys.Props"]},{"name":"val RandomToggle: Shortcut","description":"dev.fritz2.core.Keys.RandomToggle","location":"core/dev.fritz2.core/-keys/-random-toggle.html","searchKeys":["RandomToggle","val RandomToggle: Shortcut","dev.fritz2.core.Keys.RandomToggle"]},{"name":"val RcLowBattery: Shortcut","description":"dev.fritz2.core.Keys.RcLowBattery","location":"core/dev.fritz2.core/-keys/-rc-low-battery.html","searchKeys":["RcLowBattery","val RcLowBattery: Shortcut","dev.fritz2.core.Keys.RcLowBattery"]},{"name":"val RecordSpeedNext: Shortcut","description":"dev.fritz2.core.Keys.RecordSpeedNext","location":"core/dev.fritz2.core/-keys/-record-speed-next.html","searchKeys":["RecordSpeedNext","val RecordSpeedNext: Shortcut","dev.fritz2.core.Keys.RecordSpeedNext"]},{"name":"val Redo: Shortcut","description":"dev.fritz2.core.Keys.Redo","location":"core/dev.fritz2.core/-keys/-redo.html","searchKeys":["Redo","val Redo: Shortcut","dev.fritz2.core.Keys.Redo"]},{"name":"val RfBypass: Shortcut","description":"dev.fritz2.core.Keys.RfBypass","location":"core/dev.fritz2.core/-keys/-rf-bypass.html","searchKeys":["RfBypass","val RfBypass: Shortcut","dev.fritz2.core.Keys.RfBypass"]},{"name":"val Romaji: Shortcut","description":"dev.fritz2.core.Keys.Romaji","location":"core/dev.fritz2.core/-keys/-romaji.html","searchKeys":["Romaji","val Romaji: Shortcut","dev.fritz2.core.Keys.Romaji"]},{"name":"val STBInput: Shortcut","description":"dev.fritz2.core.Keys.STBInput","location":"core/dev.fritz2.core/-keys/-s-t-b-input.html","searchKeys":["STBInput","val STBInput: Shortcut","dev.fritz2.core.Keys.STBInput"]},{"name":"val STBPower: Shortcut","description":"dev.fritz2.core.Keys.STBPower","location":"core/dev.fritz2.core/-keys/-s-t-b-power.html","searchKeys":["STBPower","val STBPower: Shortcut","dev.fritz2.core.Keys.STBPower"]},{"name":"val Save: Shortcut","description":"dev.fritz2.core.Keys.Save","location":"core/dev.fritz2.core/-keys/-save.html","searchKeys":["Save","val Save: Shortcut","dev.fritz2.core.Keys.Save"]},{"name":"val ScanChannelsToggle: Shortcut","description":"dev.fritz2.core.Keys.ScanChannelsToggle","location":"core/dev.fritz2.core/-keys/-scan-channels-toggle.html","searchKeys":["ScanChannelsToggle","val ScanChannelsToggle: Shortcut","dev.fritz2.core.Keys.ScanChannelsToggle"]},{"name":"val ScreenModeNext: Shortcut","description":"dev.fritz2.core.Keys.ScreenModeNext","location":"core/dev.fritz2.core/-keys/-screen-mode-next.html","searchKeys":["ScreenModeNext","val ScreenModeNext: Shortcut","dev.fritz2.core.Keys.ScreenModeNext"]},{"name":"val ScrollLock: Shortcut","description":"dev.fritz2.core.Keys.ScrollLock","location":"core/dev.fritz2.core/-keys/-scroll-lock.html","searchKeys":["ScrollLock","val ScrollLock: Shortcut","dev.fritz2.core.Keys.ScrollLock"]},{"name":"val Select: Shortcut","description":"dev.fritz2.core.Keys.Select","location":"core/dev.fritz2.core/-keys/-select.html","searchKeys":["Select","val Select: Shortcut","dev.fritz2.core.Keys.Select"]},{"name":"val Session.closes: Flow<CloseEvent>","description":"dev.fritz2.remote.closes","location":"core/dev.fritz2.remote/closes.html","searchKeys":["closes","val Session.closes: Flow<CloseEvent>","dev.fritz2.remote.closes"]},{"name":"val Session.isClosed: Flow<Boolean>","description":"dev.fritz2.remote.isClosed","location":"core/dev.fritz2.remote/is-closed.html","searchKeys":["isClosed","val Session.isClosed: Flow<Boolean>","dev.fritz2.remote.isClosed"]},{"name":"val Session.isConnecting: Flow<Boolean>","description":"dev.fritz2.remote.isConnecting","location":"core/dev.fritz2.remote/is-connecting.html","searchKeys":["isConnecting","val Session.isConnecting: Flow<Boolean>","dev.fritz2.remote.isConnecting"]},{"name":"val Session.isOpen: Flow<Boolean>","description":"dev.fritz2.remote.isOpen","location":"core/dev.fritz2.remote/is-open.html","searchKeys":["isOpen","val Session.isOpen: Flow<Boolean>","dev.fritz2.remote.isOpen"]},{"name":"val Session.opens: Flow<Event>","description":"dev.fritz2.remote.opens","location":"core/dev.fritz2.remote/opens.html","searchKeys":["opens","val Session.opens: Flow<Event>","dev.fritz2.remote.opens"]},{"name":"val Settings: Shortcut","description":"dev.fritz2.core.Keys.Settings","location":"core/dev.fritz2.core/-keys/-settings.html","searchKeys":["Settings","val Settings: Shortcut","dev.fritz2.core.Keys.Settings"]},{"name":"val Shift: ModifierShortcut","description":"dev.fritz2.core.Keys.Shift","location":"core/dev.fritz2.core/-keys/-shift.html","searchKeys":["Shift","val Shift: ModifierShortcut","dev.fritz2.core.Keys.Shift"]},{"name":"val SingleCandidate: Shortcut","description":"dev.fritz2.core.Keys.SingleCandidate","location":"core/dev.fritz2.core/-keys/-single-candidate.html","searchKeys":["SingleCandidate","val SingleCandidate: Shortcut","dev.fritz2.core.Keys.SingleCandidate"]},{"name":"val Soft1: Shortcut","description":"dev.fritz2.core.Keys.Soft1","location":"core/dev.fritz2.core/-keys/-soft1.html","searchKeys":["Soft1","val Soft1: Shortcut","dev.fritz2.core.Keys.Soft1"]},{"name":"val Soft2: Shortcut","description":"dev.fritz2.core.Keys.Soft2","location":"core/dev.fritz2.core/-keys/-soft2.html","searchKeys":["Soft2","val Soft2: Shortcut","dev.fritz2.core.Keys.Soft2"]},{"name":"val Soft3: Shortcut","description":"dev.fritz2.core.Keys.Soft3","location":"core/dev.fritz2.core/-keys/-soft3.html","searchKeys":["Soft3","val Soft3: Shortcut","dev.fritz2.core.Keys.Soft3"]},{"name":"val Soft4: Shortcut","description":"dev.fritz2.core.Keys.Soft4","location":"core/dev.fritz2.core/-keys/-soft4.html","searchKeys":["Soft4","val Soft4: Shortcut","dev.fritz2.core.Keys.Soft4"]},{"name":"val Space: Shortcut","description":"dev.fritz2.core.Keys.Space","location":"core/dev.fritz2.core/-keys/-space.html","searchKeys":["Space","val Space: Shortcut","dev.fritz2.core.Keys.Space"]},{"name":"val SpeechCorrectionList: Shortcut","description":"dev.fritz2.core.Keys.SpeechCorrectionList","location":"core/dev.fritz2.core/-keys/-speech-correction-list.html","searchKeys":["SpeechCorrectionList","val SpeechCorrectionList: Shortcut","dev.fritz2.core.Keys.SpeechCorrectionList"]},{"name":"val SpeechInputToggle: Shortcut","description":"dev.fritz2.core.Keys.SpeechInputToggle","location":"core/dev.fritz2.core/-keys/-speech-input-toggle.html","searchKeys":["SpeechInputToggle","val SpeechInputToggle: Shortcut","dev.fritz2.core.Keys.SpeechInputToggle"]},{"name":"val SpellCheck: Shortcut","description":"dev.fritz2.core.Keys.SpellCheck","location":"core/dev.fritz2.core/-keys/-spell-check.html","searchKeys":["SpellCheck","val SpellCheck: Shortcut","dev.fritz2.core.Keys.SpellCheck"]},{"name":"val SplitScreenToggle: Shortcut","description":"dev.fritz2.core.Keys.SplitScreenToggle","location":"core/dev.fritz2.core/-keys/-split-screen-toggle.html","searchKeys":["SplitScreenToggle","val SplitScreenToggle: Shortcut","dev.fritz2.core.Keys.SplitScreenToggle"]},{"name":"val Standby: Shortcut","description":"dev.fritz2.core.Keys.Standby","location":"core/dev.fritz2.core/-keys/-standby.html","searchKeys":["Standby","val Standby: Shortcut","dev.fritz2.core.Keys.Standby"]},{"name":"val Subtitle: Shortcut","description":"dev.fritz2.core.Keys.Subtitle","location":"core/dev.fritz2.core/-keys/-subtitle.html","searchKeys":["Subtitle","val Subtitle: Shortcut","dev.fritz2.core.Keys.Subtitle"]},{"name":"val Super: Shortcut","description":"dev.fritz2.core.Keys.Super","location":"core/dev.fritz2.core/-keys/-super.html","searchKeys":["Super","val Super: Shortcut","dev.fritz2.core.Keys.Super"]},{"name":"val Symbol: Shortcut","description":"dev.fritz2.core.Keys.Symbol","location":"core/dev.fritz2.core/-keys/-symbol.html","searchKeys":["Symbol","val Symbol: Shortcut","dev.fritz2.core.Keys.Symbol"]},{"name":"val SymbolLock: Shortcut","description":"dev.fritz2.core.Keys.SymbolLock","location":"core/dev.fritz2.core/-keys/-symbol-lock.html","searchKeys":["SymbolLock","val SymbolLock: Shortcut","dev.fritz2.core.Keys.SymbolLock"]},{"name":"val TV3DMode: Shortcut","description":"dev.fritz2.core.Keys.TV3DMode","location":"core/dev.fritz2.core/-keys/-t-v3-d-mode.html","searchKeys":["TV3DMode","val TV3DMode: Shortcut","dev.fritz2.core.Keys.TV3DMode"]},{"name":"val TV: Shortcut","description":"dev.fritz2.core.Keys.TV","location":"core/dev.fritz2.core/-keys/-t-v.html","searchKeys":["TV","val TV: Shortcut","dev.fritz2.core.Keys.TV"]},{"name":"val TVAntennaCable: Shortcut","description":"dev.fritz2.core.Keys.TVAntennaCable","location":"core/dev.fritz2.core/-keys/-t-v-antenna-cable.html","searchKeys":["TVAntennaCable","val TVAntennaCable: Shortcut","dev.fritz2.core.Keys.TVAntennaCable"]},{"name":"val TVAudioDescription: Shortcut","description":"dev.fritz2.core.Keys.TVAudioDescription","location":"core/dev.fritz2.core/-keys/-t-v-audio-description.html","searchKeys":["TVAudioDescription","val TVAudioDescription: Shortcut","dev.fritz2.core.Keys.TVAudioDescription"]},{"name":"val TVAudioDescriptionMixDown: Shortcut","description":"dev.fritz2.core.Keys.TVAudioDescriptionMixDown","location":"core/dev.fritz2.core/-keys/-t-v-audio-description-mix-down.html","searchKeys":["TVAudioDescriptionMixDown","val TVAudioDescriptionMixDown: Shortcut","dev.fritz2.core.Keys.TVAudioDescriptionMixDown"]},{"name":"val TVAudioDescriptionMixUp: Shortcut","description":"dev.fritz2.core.Keys.TVAudioDescriptionMixUp","location":"core/dev.fritz2.core/-keys/-t-v-audio-description-mix-up.html","searchKeys":["TVAudioDescriptionMixUp","val TVAudioDescriptionMixUp: Shortcut","dev.fritz2.core.Keys.TVAudioDescriptionMixUp"]},{"name":"val TVContentsMenu: Shortcut","description":"dev.fritz2.core.Keys.TVContentsMenu","location":"core/dev.fritz2.core/-keys/-t-v-contents-menu.html","searchKeys":["TVContentsMenu","val TVContentsMenu: Shortcut","dev.fritz2.core.Keys.TVContentsMenu"]},{"name":"val TVDataService: Shortcut","description":"dev.fritz2.core.Keys.TVDataService","location":"core/dev.fritz2.core/-keys/-t-v-data-service.html","searchKeys":["TVDataService","val TVDataService: Shortcut","dev.fritz2.core.Keys.TVDataService"]},{"name":"val TVInput: Shortcut","description":"dev.fritz2.core.Keys.TVInput","location":"core/dev.fritz2.core/-keys/-t-v-input.html","searchKeys":["TVInput","val TVInput: Shortcut","dev.fritz2.core.Keys.TVInput"]},{"name":"val TVInputComponent1: Shortcut","description":"dev.fritz2.core.Keys.TVInputComponent1","location":"core/dev.fritz2.core/-keys/-t-v-input-component1.html","searchKeys":["TVInputComponent1","val TVInputComponent1: Shortcut","dev.fritz2.core.Keys.TVInputComponent1"]},{"name":"val TVInputComponent2: Shortcut","description":"dev.fritz2.core.Keys.TVInputComponent2","location":"core/dev.fritz2.core/-keys/-t-v-input-component2.html","searchKeys":["TVInputComponent2","val TVInputComponent2: Shortcut","dev.fritz2.core.Keys.TVInputComponent2"]},{"name":"val TVInputComposite1: Shortcut","description":"dev.fritz2.core.Keys.TVInputComposite1","location":"core/dev.fritz2.core/-keys/-t-v-input-composite1.html","searchKeys":["TVInputComposite1","val TVInputComposite1: Shortcut","dev.fritz2.core.Keys.TVInputComposite1"]},{"name":"val TVInputComposite2: Shortcut","description":"dev.fritz2.core.Keys.TVInputComposite2","location":"core/dev.fritz2.core/-keys/-t-v-input-composite2.html","searchKeys":["TVInputComposite2","val TVInputComposite2: Shortcut","dev.fritz2.core.Keys.TVInputComposite2"]},{"name":"val TVInputHDMI1: Shortcut","description":"dev.fritz2.core.Keys.TVInputHDMI1","location":"core/dev.fritz2.core/-keys/-t-v-input-h-d-m-i1.html","searchKeys":["TVInputHDMI1","val TVInputHDMI1: Shortcut","dev.fritz2.core.Keys.TVInputHDMI1"]},{"name":"val TVInputHDMI2: Shortcut","description":"dev.fritz2.core.Keys.TVInputHDMI2","location":"core/dev.fritz2.core/-keys/-t-v-input-h-d-m-i2.html","searchKeys":["TVInputHDMI2","val TVInputHDMI2: Shortcut","dev.fritz2.core.Keys.TVInputHDMI2"]},{"name":"val TVInputHDMI3: Shortcut","description":"dev.fritz2.core.Keys.TVInputHDMI3","location":"core/dev.fritz2.core/-keys/-t-v-input-h-d-m-i3.html","searchKeys":["TVInputHDMI3","val TVInputHDMI3: Shortcut","dev.fritz2.core.Keys.TVInputHDMI3"]},{"name":"val TVInputHDMI4: Shortcut","description":"dev.fritz2.core.Keys.TVInputHDMI4","location":"core/dev.fritz2.core/-keys/-t-v-input-h-d-m-i4.html","searchKeys":["TVInputHDMI4","val TVInputHDMI4: Shortcut","dev.fritz2.core.Keys.TVInputHDMI4"]},{"name":"val TVInputVGA1: Shortcut","description":"dev.fritz2.core.Keys.TVInputVGA1","location":"core/dev.fritz2.core/-keys/-t-v-input-v-g-a1.html","searchKeys":["TVInputVGA1","val TVInputVGA1: Shortcut","dev.fritz2.core.Keys.TVInputVGA1"]},{"name":"val TVMediaContext: Shortcut","description":"dev.fritz2.core.Keys.TVMediaContext","location":"core/dev.fritz2.core/-keys/-t-v-media-context.html","searchKeys":["TVMediaContext","val TVMediaContext: Shortcut","dev.fritz2.core.Keys.TVMediaContext"]},{"name":"val TVNetwork: Shortcut","description":"dev.fritz2.core.Keys.TVNetwork","location":"core/dev.fritz2.core/-keys/-t-v-network.html","searchKeys":["TVNetwork","val TVNetwork: Shortcut","dev.fritz2.core.Keys.TVNetwork"]},{"name":"val TVNumberEntry: Shortcut","description":"dev.fritz2.core.Keys.TVNumberEntry","location":"core/dev.fritz2.core/-keys/-t-v-number-entry.html","searchKeys":["TVNumberEntry","val TVNumberEntry: Shortcut","dev.fritz2.core.Keys.TVNumberEntry"]},{"name":"val TVPower: Shortcut","description":"dev.fritz2.core.Keys.TVPower","location":"core/dev.fritz2.core/-keys/-t-v-power.html","searchKeys":["TVPower","val TVPower: Shortcut","dev.fritz2.core.Keys.TVPower"]},{"name":"val TVRadioService: Shortcut","description":"dev.fritz2.core.Keys.TVRadioService","location":"core/dev.fritz2.core/-keys/-t-v-radio-service.html","searchKeys":["TVRadioService","val TVRadioService: Shortcut","dev.fritz2.core.Keys.TVRadioService"]},{"name":"val TVSatellite: Shortcut","description":"dev.fritz2.core.Keys.TVSatellite","location":"core/dev.fritz2.core/-keys/-t-v-satellite.html","searchKeys":["TVSatellite","val TVSatellite: Shortcut","dev.fritz2.core.Keys.TVSatellite"]},{"name":"val TVSatelliteBS: Shortcut","description":"dev.fritz2.core.Keys.TVSatelliteBS","location":"core/dev.fritz2.core/-keys/-t-v-satellite-b-s.html","searchKeys":["TVSatelliteBS","val TVSatelliteBS: Shortcut","dev.fritz2.core.Keys.TVSatelliteBS"]},{"name":"val TVSatelliteCS: Shortcut","description":"dev.fritz2.core.Keys.TVSatelliteCS","location":"core/dev.fritz2.core/-keys/-t-v-satellite-c-s.html","searchKeys":["TVSatelliteCS","val TVSatelliteCS: Shortcut","dev.fritz2.core.Keys.TVSatelliteCS"]},{"name":"val TVSatelliteToggle: Shortcut","description":"dev.fritz2.core.Keys.TVSatelliteToggle","location":"core/dev.fritz2.core/-keys/-t-v-satellite-toggle.html","searchKeys":["TVSatelliteToggle","val TVSatelliteToggle: Shortcut","dev.fritz2.core.Keys.TVSatelliteToggle"]},{"name":"val TVTerrestrialAnalog: Shortcut","description":"dev.fritz2.core.Keys.TVTerrestrialAnalog","location":"core/dev.fritz2.core/-keys/-t-v-terrestrial-analog.html","searchKeys":["TVTerrestrialAnalog","val TVTerrestrialAnalog: Shortcut","dev.fritz2.core.Keys.TVTerrestrialAnalog"]},{"name":"val TVTerrestrialDigital: Shortcut","description":"dev.fritz2.core.Keys.TVTerrestrialDigital","location":"core/dev.fritz2.core/-keys/-t-v-terrestrial-digital.html","searchKeys":["TVTerrestrialDigital","val TVTerrestrialDigital: Shortcut","dev.fritz2.core.Keys.TVTerrestrialDigital"]},{"name":"val TVTimer: Shortcut","description":"dev.fritz2.core.Keys.TVTimer","location":"core/dev.fritz2.core/-keys/-t-v-timer.html","searchKeys":["TVTimer","val TVTimer: Shortcut","dev.fritz2.core.Keys.TVTimer"]},{"name":"val Tab: Shortcut","description":"dev.fritz2.core.Keys.Tab","location":"core/dev.fritz2.core/-keys/-tab.html","searchKeys":["Tab","val Tab: Shortcut","dev.fritz2.core.Keys.Tab"]},{"name":"val Teletext: Shortcut","description":"dev.fritz2.core.Keys.Teletext","location":"core/dev.fritz2.core/-keys/-teletext.html","searchKeys":["Teletext","val Teletext: Shortcut","dev.fritz2.core.Keys.Teletext"]},{"name":"val Undo: Shortcut","description":"dev.fritz2.core.Keys.Undo","location":"core/dev.fritz2.core/-keys/-undo.html","searchKeys":["Undo","val Undo: Shortcut","dev.fritz2.core.Keys.Undo"]},{"name":"val Unidentified: Shortcut","description":"dev.fritz2.core.Keys.Unidentified","location":"core/dev.fritz2.core/-keys/-unidentified.html","searchKeys":["Unidentified","val Unidentified: Shortcut","dev.fritz2.core.Keys.Unidentified"]},{"name":"val VideoModeNext: Shortcut","description":"dev.fritz2.core.Keys.VideoModeNext","location":"core/dev.fritz2.core/-keys/-video-mode-next.html","searchKeys":["VideoModeNext","val VideoModeNext: Shortcut","dev.fritz2.core.Keys.VideoModeNext"]},{"name":"val VoiceDial: Shortcut","description":"dev.fritz2.core.Keys.VoiceDial","location":"core/dev.fritz2.core/-keys/-voice-dial.html","searchKeys":["VoiceDial","val VoiceDial: Shortcut","dev.fritz2.core.Keys.VoiceDial"]},{"name":"val WakeUp: Shortcut","description":"dev.fritz2.core.Keys.WakeUp","location":"core/dev.fritz2.core/-keys/-wake-up.html","searchKeys":["WakeUp","val WakeUp: Shortcut","dev.fritz2.core.Keys.WakeUp"]},{"name":"val Wink: Shortcut","description":"dev.fritz2.core.Keys.Wink","location":"core/dev.fritz2.core/-keys/-wink.html","searchKeys":["Wink","val Wink: Shortcut","dev.fritz2.core.Keys.Wink"]},{"name":"val Zenkaku: Shortcut","description":"dev.fritz2.core.Keys.Zenkaku","location":"core/dev.fritz2.core/-keys/-zenkaku.html","searchKeys":["Zenkaku","val Zenkaku: Shortcut","dev.fritz2.core.Keys.Zenkaku"]},{"name":"val ZenkakuHankaku: Shortcut","description":"dev.fritz2.core.Keys.ZenkakuHankaku","location":"core/dev.fritz2.core/-keys/-zenkaku-hankaku.html","searchKeys":["ZenkakuHankaku","val ZenkakuHankaku: Shortcut","dev.fritz2.core.Keys.ZenkakuHankaku"]},{"name":"val ZoomIn: Shortcut","description":"dev.fritz2.core.Keys.ZoomIn","location":"core/dev.fritz2.core/-keys/-zoom-in.html","searchKeys":["ZoomIn","val ZoomIn: Shortcut","dev.fritz2.core.Keys.ZoomIn"]},{"name":"val ZoomOut: Shortcut","description":"dev.fritz2.core.Keys.ZoomOut","location":"core/dev.fritz2.core/-keys/-zoom-out.html","searchKeys":["ZoomOut","val ZoomOut: Shortcut","dev.fritz2.core.Keys.ZoomOut"]},{"name":"val ZoomToggle: Shortcut","description":"dev.fritz2.core.Keys.ZoomToggle","location":"core/dev.fritz2.core/-keys/-zoom-toggle.html","searchKeys":["ZoomToggle","val ZoomToggle: Shortcut","dev.fritz2.core.Keys.ZoomToggle"]},{"name":"val animationDone: (Node) -> Promise<Unit>","description":"dev.fritz2.core.animationDone","location":"core/dev.fritz2.core/animation-done.html","searchKeys":["animationDone","val animationDone: (Node) -> Promise<Unit>","dev.fritz2.core.animationDone"]},{"name":"val attributeChanges: Flow<Pair<String, String>>","description":"dev.fritz2.webcomponents.WebComponent.attributeChanges","location":"core/dev.fritz2.webcomponents/-web-component/attribute-changes.html","searchKeys":["attributeChanges","val attributeChanges: Flow<Pair<String, String>>","dev.fritz2.webcomponents.WebComponent.attributeChanges"]},{"name":"val authenticated: Flow<Boolean>","description":"dev.fritz2.remote.Authentication.authenticated","location":"core/dev.fritz2.remote/-authentication/authenticated.html","searchKeys":["authenticated","val authenticated: Flow<Boolean>","dev.fritz2.remote.Authentication.authenticated"]},{"name":"val available: Flow<Boolean>","description":"dev.fritz2.history.History.available","location":"core/dev.fritz2.history/-history/available.html","searchKeys":["available","val available: Flow<Boolean>","dev.fritz2.history.History.available"]},{"name":"val body: dynamic","description":"dev.fritz2.remote.Request.body","location":"core/dev.fritz2.remote/-request/body.html","searchKeys":["body","val body: dynamic","dev.fritz2.remote.Request.body"]},{"name":"val cache: RequestCache?","description":"dev.fritz2.remote.Request.cache","location":"core/dev.fritz2.remote/-request/cache.html","searchKeys":["cache","val cache: RequestCache?","dev.fritz2.remote.Request.cache"]},{"name":"val count: Int = 1","description":"dev.fritz2.core.Patch.Delete.count","location":"core/dev.fritz2.core/-patch/-delete/count.html","searchKeys":["count","val count: Int = 1","dev.fritz2.core.Patch.Delete.count"]},{"name":"val credentials: RequestCredentials?","description":"dev.fritz2.remote.Request.credentials","location":"core/dev.fritz2.remote/-request/credentials.html","searchKeys":["credentials","val credentials: RequestCredentials?","dev.fritz2.remote.Request.credentials"]},{"name":"val current: Boolean","description":"dev.fritz2.tracking.Tracker.current","location":"core/dev.fritz2.tracking/-tracker/current.html","searchKeys":["current","val current: Boolean","dev.fritz2.tracking.Tracker.current"]},{"name":"val current: List<T>","description":"dev.fritz2.history.History.current","location":"core/dev.fritz2.history/-history/current.html","searchKeys":["current","val current: List<T>","dev.fritz2.history.History.current"]},{"name":"val current: P?","description":"dev.fritz2.remote.Authentication.current","location":"core/dev.fritz2.remote/-authentication/current.html","searchKeys":["current","val current: P?","dev.fritz2.remote.Authentication.current"]},{"name":"val data: Flow<Boolean>","description":"dev.fritz2.tracking.Tracker.data","location":"core/dev.fritz2.tracking/-tracker/data.html","searchKeys":["data","val data: Flow<Boolean>","dev.fritz2.tracking.Tracker.data"]},{"name":"val data: Flow<List<T>>","description":"dev.fritz2.history.History.data","location":"core/dev.fritz2.history/-history/data.html","searchKeys":["data","val data: Flow<List<T>>","dev.fritz2.history.History.data"]},{"name":"val data: Flow<P?>","description":"dev.fritz2.remote.Authentication.data","location":"core/dev.fritz2.remote/-authentication/data.html","searchKeys":["data","val data: Flow<P?>","dev.fritz2.remote.Authentication.data"]},{"name":"val element: T","description":"dev.fritz2.core.Patch.Insert.element","location":"core/dev.fritz2.core/-patch/-insert/element.html","searchKeys":["element","val element: T","dev.fritz2.core.Patch.Insert.element"]},{"name":"val elements: List<T>","description":"dev.fritz2.core.Patch.InsertMany.elements","location":"core/dev.fritz2.core/-patch/-insert-many/elements.html","searchKeys":["elements","val elements: List<T>","dev.fritz2.core.Patch.InsertMany.elements"]},{"name":"val enter: String? = null","description":"dev.fritz2.core.Transition.enter","location":"core/dev.fritz2.core/-transition/enter.html","searchKeys":["enter","val enter: String? = null","dev.fritz2.core.Transition.enter"]},{"name":"val enterEnd: String? = null","description":"dev.fritz2.core.Transition.enterEnd","location":"core/dev.fritz2.core/-transition/enter-end.html","searchKeys":["enterEnd","val enterEnd: String? = null","dev.fritz2.core.Transition.enterEnd"]},{"name":"val enterStart: String? = null","description":"dev.fritz2.core.Transition.enterStart","location":"core/dev.fritz2.core/-transition/enter-start.html","searchKeys":["enterStart","val enterStart: String? = null","dev.fritz2.core.Transition.enterStart"]},{"name":"val errors: Flow<Event>","description":"dev.fritz2.remote.Session.errors","location":"core/dev.fritz2.remote/-session/errors.html","searchKeys":["errors","val errors: Flow<Event>","dev.fritz2.remote.Session.errors"]},{"name":"val event: CloseEvent","description":"dev.fritz2.remote.SessionState.Closed.event","location":"core/dev.fritz2.remote/-session-state/-closed/event.html","searchKeys":["event","val event: CloseEvent","dev.fritz2.remote.SessionState.Closed.event"]},{"name":"val event: Event","description":"dev.fritz2.remote.SessionState.Open.event","location":"core/dev.fritz2.remote/-session-state/-open/event.html","searchKeys":["event","val event: Event","dev.fritz2.remote.SessionState.Open.event"]},{"name":"val from: Int","description":"dev.fritz2.core.Patch.Move.from","location":"core/dev.fritz2.core/-patch/-move/from.html","searchKeys":["from","val from: Int","dev.fritz2.core.Patch.Move.from"]},{"name":"val headers: Headers","description":"dev.fritz2.remote.Response.headers","location":"core/dev.fritz2.remote/-response/headers.html","searchKeys":["headers","val headers: Headers","dev.fritz2.remote.Response.headers"]},{"name":"val headers: Map<String, String>","description":"dev.fritz2.remote.Request.headers","location":"core/dev.fritz2.remote/-request/headers.html","searchKeys":["headers","val headers: Map<String, String>","dev.fritz2.remote.Request.headers"]},{"name":"val index: Int","description":"dev.fritz2.core.Patch.Insert.index","location":"core/dev.fritz2.core/-patch/-insert/--index--.html","searchKeys":["index","val index: Int","dev.fritz2.core.Patch.Insert.index"]},{"name":"val index: Int","description":"dev.fritz2.core.Patch.InsertMany.index","location":"core/dev.fritz2.core/-patch/-insert-many/--index--.html","searchKeys":["index","val index: Int","dev.fritz2.core.Patch.InsertMany.index"]},{"name":"val integrity: String?","description":"dev.fritz2.remote.Request.integrity","location":"core/dev.fritz2.remote/-request/integrity.html","searchKeys":["integrity","val integrity: String?","dev.fritz2.remote.Request.integrity"]},{"name":"val keepalive: Boolean?","description":"dev.fritz2.remote.Request.keepalive","location":"core/dev.fritz2.remote/-request/keepalive.html","searchKeys":["keepalive","val keepalive: Boolean?","dev.fritz2.remote.Request.keepalive"]},{"name":"val key: String","description":"dev.fritz2.core.Shortcut.key","location":"core/dev.fritz2.core/-shortcut/key.html","searchKeys":["key","val key: String","dev.fritz2.core.Shortcut.key"]},{"name":"val keys: Set<Scope.Key<*>>","description":"dev.fritz2.core.Scope.keys","location":"core/dev.fritz2.core/-scope/keys.html","searchKeys":["keys","val keys: Set<Scope.Key<*>>","dev.fritz2.core.Scope.keys"]},{"name":"val leave: String? = null","description":"dev.fritz2.core.Transition.leave","location":"core/dev.fritz2.core/-transition/leave.html","searchKeys":["leave","val leave: String? = null","dev.fritz2.core.Transition.leave"]},{"name":"val leaveEnd: String? = null","description":"dev.fritz2.core.Transition.leaveEnd","location":"core/dev.fritz2.core/-transition/leave-end.html","searchKeys":["leaveEnd","val leaveEnd: String? = null","dev.fritz2.core.Transition.leaveEnd"]},{"name":"val leaveStart: String? = null","description":"dev.fritz2.core.Transition.leaveStart","location":"core/dev.fritz2.core/-transition/leave-start.html","searchKeys":["leaveStart","val leaveStart: String? = null","dev.fritz2.core.Transition.leaveStart"]},{"name":"val messages: Flow<List<M>>","description":"dev.fritz2.validation.ValidatingStore.messages","location":"core/dev.fritz2.validation/-validating-store/messages.html","searchKeys":["messages","val messages: Flow<List<M>>","dev.fritz2.validation.ValidatingStore.messages"]},{"name":"val messages: Flow<MessageEvent>","description":"dev.fritz2.remote.Session.messages","location":"core/dev.fritz2.remote/-session/messages.html","searchKeys":["messages","val messages: Flow<MessageEvent>","dev.fritz2.remote.Session.messages"]},{"name":"val method: String","description":"dev.fritz2.remote.Request.method","location":"core/dev.fritz2.remote/-request/method.html","searchKeys":["method","val method: String","dev.fritz2.remote.Request.method"]},{"name":"val middlewares: List<Middleware>","description":"dev.fritz2.remote.Request.middlewares","location":"core/dev.fritz2.remote/-request/middlewares.html","searchKeys":["middlewares","val middlewares: List<Middleware>","dev.fritz2.remote.Request.middlewares"]},{"name":"val mode: RequestMode?","description":"dev.fritz2.remote.Request.mode","location":"core/dev.fritz2.remote/-request/mode.html","searchKeys":["mode","val mode: RequestMode?","dev.fritz2.remote.Request.mode"]},{"name":"val name: String","description":"dev.fritz2.core.Scope.Key.name","location":"core/dev.fritz2.core/-scope/-key/name.html","searchKeys":["name","val name: String","dev.fritz2.core.Scope.Key.name"]},{"name":"val ok: Boolean","description":"dev.fritz2.remote.Response.ok","location":"core/dev.fritz2.remote/-response/ok.html","searchKeys":["ok","val ok: Boolean","dev.fritz2.remote.Response.ok"]},{"name":"val parent: Inspector<P>","description":"dev.fritz2.core.SubInspector.parent","location":"core/dev.fritz2.core/-sub-inspector/parent.html","searchKeys":["parent","val parent: Inspector<P>","dev.fritz2.core.SubInspector.parent"]},{"name":"val parent: Store<P>","description":"dev.fritz2.core.SubStore.parent","location":"core/dev.fritz2.core/-sub-store/parent.html","searchKeys":["parent","val parent: Store<P>","dev.fritz2.core.SubStore.parent"]},{"name":"val propagate: Boolean = true","description":"dev.fritz2.remote.Response.propagate","location":"core/dev.fritz2.remote/-response/propagate.html","searchKeys":["propagate","val propagate: Boolean = true","dev.fritz2.remote.Response.propagate"]},{"name":"val redirect: RequestRedirect?","description":"dev.fritz2.remote.Request.redirect","location":"core/dev.fritz2.remote/-request/redirect.html","searchKeys":["redirect","val redirect: RequestRedirect?","dev.fritz2.remote.Request.redirect"]},{"name":"val redirected: Boolean","description":"dev.fritz2.remote.Response.redirected","location":"core/dev.fritz2.remote/-response/redirected.html","searchKeys":["redirected","val redirected: Boolean","dev.fritz2.remote.Response.redirected"]},{"name":"val referrer: String?","description":"dev.fritz2.remote.Request.referrer","location":"core/dev.fritz2.remote/-request/referrer.html","searchKeys":["referrer","val referrer: String?","dev.fritz2.remote.Request.referrer"]},{"name":"val referrerPolicy: dynamic","description":"dev.fritz2.remote.Request.referrerPolicy","location":"core/dev.fritz2.remote/-request/referrer-policy.html","searchKeys":["referrerPolicy","val referrerPolicy: dynamic","dev.fritz2.remote.Request.referrerPolicy"]},{"name":"val reqWindow: Any?","description":"dev.fritz2.remote.Request.reqWindow","location":"core/dev.fritz2.remote/-request/req-window.html","searchKeys":["reqWindow","val reqWindow: Any?","dev.fritz2.remote.Request.reqWindow"]},{"name":"val request: Request","description":"dev.fritz2.remote.Response.request","location":"core/dev.fritz2.remote/-response/request.html","searchKeys":["request","val request: Request","dev.fritz2.remote.Response.request"]},{"name":"val scope: Scope","description":"dev.fritz2.core.ScopeContext.scope","location":"core/dev.fritz2.core/-scope-context/scope.html","searchKeys":["scope","val scope: Scope","dev.fritz2.core.ScopeContext.scope"]},{"name":"val size: Int","description":"dev.fritz2.core.Scope.size","location":"core/dev.fritz2.core/-scope/size.html","searchKeys":["size","val size: Int","dev.fritz2.core.Scope.size"]},{"name":"val start: Int","description":"dev.fritz2.core.Patch.Delete.start","location":"core/dev.fritz2.core/-patch/-delete/start.html","searchKeys":["start","val start: Int","dev.fritz2.core.Patch.Delete.start"]},{"name":"val state: MutableStateFlow<SessionState>","description":"dev.fritz2.remote.Session.state","location":"core/dev.fritz2.remote/-session/state.html","searchKeys":["state","val state: MutableStateFlow<SessionState>","dev.fritz2.remote.Session.state"]},{"name":"val status: Int","description":"dev.fritz2.remote.Response.status","location":"core/dev.fritz2.remote/-response/status.html","searchKeys":["status","val status: Int","dev.fritz2.remote.Response.status"]},{"name":"val statusText: String","description":"dev.fritz2.remote.Response.statusText","location":"core/dev.fritz2.remote/-response/status-text.html","searchKeys":["statusText","val statusText: String","dev.fritz2.remote.Response.statusText"]},{"name":"val to: Int","description":"dev.fritz2.core.Patch.Move.to","location":"core/dev.fritz2.core/-patch/-move/to.html","searchKeys":["to","val to: Int","dev.fritz2.core.Patch.Move.to"]},{"name":"val type: ResponseType","description":"dev.fritz2.remote.Response.type","location":"core/dev.fritz2.remote/-response/type.html","searchKeys":["type","val type: ResponseType","dev.fritz2.remote.Response.type"]},{"name":"val url: String","description":"dev.fritz2.remote.Request.url","location":"core/dev.fritz2.remote/-request/url.html","searchKeys":["url","val url: String","dev.fritz2.remote.Request.url"]},{"name":"val url: String","description":"dev.fritz2.remote.Response.url","location":"core/dev.fritz2.remote/-response/url.html","searchKeys":["url","val url: String","dev.fritz2.remote.Response.url"]},{"name":"value class Listener<X : Event, out T : EventTarget>(events: Flow<X>) : Flow<X> ","description":"dev.fritz2.core.Listener","location":"core/dev.fritz2.core/-listener/index.html","searchKeys":["Listener","value class Listener<X : Event, out T : EventTarget>(events: Flow<X>) : Flow<X> ","dev.fritz2.core.Listener"]},{"name":"value class Scope(entries: HashMap<Scope.Key<*>, Any> = hashMapOf())","description":"dev.fritz2.core.Scope","location":"core/dev.fritz2.core/-scope/index.html","searchKeys":["Scope","value class Scope(entries: HashMap<Scope.Key<*>, Any> = hashMapOf())","dev.fritz2.core.Scope"]},{"name":"value class SimpleHandler<A>(val process: (Flow<A>, Job) -> Unit) : Handler<A> ","description":"dev.fritz2.core.SimpleHandler","location":"core/dev.fritz2.core/-simple-handler/index.html","searchKeys":["SimpleHandler","value class SimpleHandler<A>(val process: (Flow<A>, Job) -> Unit) : Handler<A> ","dev.fritz2.core.SimpleHandler"]},{"name":"value class Validation<D, T, M>(validate: (Inspector<D>, T) -> List<M>)","description":"dev.fritz2.validation.Validation","location":"core/dev.fritz2.validation/-validation/index.html","searchKeys":["Validation","value class Validation<D, T, M>(validate: (Inspector<D>, T) -> List<M>)","dev.fritz2.validation.Validation"]},{"name":"Error","description":"dev.fritz2.lens.Severity.Error","location":"lenses-annotation-processor/dev.fritz2.lens/-severity/-error/index.html","searchKeys":["Error","Error","dev.fritz2.lens.Severity.Error"]},{"name":"Warning","description":"dev.fritz2.lens.Severity.Warning","location":"lenses-annotation-processor/dev.fritz2.lens/-severity/-warning/index.html","searchKeys":["Warning","Warning","dev.fritz2.lens.Severity.Warning"]},{"name":"class LensesProcessor(codeGenerator: CodeGenerator, logger: KSPLogger) : SymbolProcessor","description":"dev.fritz2.lens.LensesProcessor","location":"lenses-annotation-processor/dev.fritz2.lens/-lenses-processor/index.html","searchKeys":["LensesProcessor","class LensesProcessor(codeGenerator: CodeGenerator, logger: KSPLogger) : SymbolProcessor","dev.fritz2.lens.LensesProcessor"]},{"name":"class LensesProcessorProvider : SymbolProcessorProvider","description":"dev.fritz2.lens.LensesProcessorProvider","location":"lenses-annotation-processor/dev.fritz2.lens/-lenses-processor-provider/index.html","searchKeys":["LensesProcessorProvider","class LensesProcessorProvider : SymbolProcessorProvider","dev.fritz2.lens.LensesProcessorProvider"]},{"name":"constructor()","description":"dev.fritz2.lens.LensesProcessorProvider.LensesProcessorProvider","location":"lenses-annotation-processor/dev.fritz2.lens/-lenses-processor-provider/-lenses-processor-provider.html","searchKeys":["LensesProcessorProvider","constructor()","dev.fritz2.lens.LensesProcessorProvider.LensesProcessorProvider"]},{"name":"constructor(codeGenerator: CodeGenerator, logger: KSPLogger)","description":"dev.fritz2.lens.LensesProcessor.LensesProcessor","location":"lenses-annotation-processor/dev.fritz2.lens/-lenses-processor/-lenses-processor.html","searchKeys":["LensesProcessor","constructor(codeGenerator: CodeGenerator, logger: KSPLogger)","dev.fritz2.lens.LensesProcessor.LensesProcessor"]},{"name":"constructor(severity: Severity, message: String)","description":"dev.fritz2.lens.Message.Message","location":"lenses-annotation-processor/dev.fritz2.lens/-message/-message.html","searchKeys":["Message","constructor(severity: Severity, message: String)","dev.fritz2.lens.Message.Message"]},{"name":"data class Message(val severity: Severity, val message: String)","description":"dev.fritz2.lens.Message","location":"lenses-annotation-processor/dev.fritz2.lens/-message/index.html","searchKeys":["Message","data class Message(val severity: Severity, val message: String)","dev.fritz2.lens.Message"]},{"name":"enum Severity : Enum<Severity> ","description":"dev.fritz2.lens.Severity","location":"lenses-annotation-processor/dev.fritz2.lens/-severity/index.html","searchKeys":["Severity","enum Severity : Enum<Severity> ","dev.fritz2.lens.Severity"]},{"name":"fun KSPLogger.log(message: Message)","description":"dev.fritz2.lens.log","location":"lenses-annotation-processor/dev.fritz2.lens/log.html","searchKeys":["log","fun KSPLogger.log(message: Message)","dev.fritz2.lens.log"]},{"name":"fun valueOf(value: String): Severity","description":"dev.fritz2.lens.Severity.valueOf","location":"lenses-annotation-processor/dev.fritz2.lens/-severity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Severity","dev.fritz2.lens.Severity.valueOf"]},{"name":"fun values(): Array<Severity>","description":"dev.fritz2.lens.Severity.values","location":"lenses-annotation-processor/dev.fritz2.lens/-severity/values.html","searchKeys":["values","fun values(): Array<Severity>","dev.fritz2.lens.Severity.values"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"dev.fritz2.lens.LensesProcessorProvider.create","location":"lenses-annotation-processor/dev.fritz2.lens/-lenses-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","dev.fritz2.lens.LensesProcessorProvider.create"]},{"name":"open override fun process(resolver: Resolver): List<KSAnnotated>","description":"dev.fritz2.lens.LensesProcessor.process","location":"lenses-annotation-processor/dev.fritz2.lens/-lenses-processor/process.html","searchKeys":["process","open override fun process(resolver: Resolver): List<KSAnnotated>","dev.fritz2.lens.LensesProcessor.process"]},{"name":"val entries: EnumEntries<Severity>","description":"dev.fritz2.lens.Severity.entries","location":"lenses-annotation-processor/dev.fritz2.lens/-severity/entries.html","searchKeys":["entries","val entries: EnumEntries<Severity>","dev.fritz2.lens.Severity.entries"]},{"name":"val message: String","description":"dev.fritz2.lens.Message.message","location":"lenses-annotation-processor/dev.fritz2.lens/-message/message.html","searchKeys":["message","val message: String","dev.fritz2.lens.Message.message"]},{"name":"val severity: Severity","description":"dev.fritz2.lens.Message.severity","location":"lenses-annotation-processor/dev.fritz2.lens/-message/severity.html","searchKeys":["severity","val severity: Severity","dev.fritz2.lens.Message.severity"]}]